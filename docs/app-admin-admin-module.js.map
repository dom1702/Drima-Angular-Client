{"version":3,"sources":["webpack:///./node_modules/primeng/contextmenu.js","webpack:///./node_modules/primeng/dragdrop.js","webpack:///./node_modules/primeng/tree.js","webpack:///./node_modules/text-mask-addons/dist/createNumberMask.js","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/audit-logs/audit-log-detail-modal.component.html","webpack:///./src/app/admin/audit-logs/audit-log-detail-modal.component.ts","webpack:///./src/app/admin/audit-logs/audit-logs.component.html","webpack:///./src/app/admin/audit-logs/audit-logs.component.less","webpack:///./src/app/admin/audit-logs/audit-logs.component.ts","webpack:///./src/app/admin/dashboard/host-dashboard.component.html","webpack:///./src/app/admin/dashboard/host-dashboard.component.less","webpack:///./src/app/admin/dashboard/host-dashboard.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-components.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-components.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-date-time.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-date-time.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-editor.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-editor.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-file-upload.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-file-upload.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-input-mask.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-input-mask.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-selection.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-selection.component.ts","webpack:///./src/app/admin/editions/create-edition-modal.component.html","webpack:///./src/app/admin/editions/create-edition-modal.component.ts","webpack:///./src/app/admin/editions/edit-edition-modal.component.html","webpack:///./src/app/admin/editions/edit-edition-modal.component.ts","webpack:///./src/app/admin/editions/editions.component.html","webpack:///./src/app/admin/editions/editions.component.ts","webpack:///./src/app/admin/editions/move-tenants-to-another-edition-modal.component.html","webpack:///./src/app/admin/editions/move-tenants-to-another-edition-modal.component.ts","webpack:///./src/app/admin/forms/forms/forms.component.html","webpack:///./src/app/admin/forms/forms/forms.component.ts","webpack:///./src/app/admin/install/install.component.html","webpack:///./src/app/admin/install/install.component.less","webpack:///./src/app/admin/install/install.component.ts","webpack:///./src/app/admin/instructors/instructors/create-or-edit-instructor-modal.component.html","webpack:///./src/app/admin/instructors/instructors/create-or-edit-instructor-modal.component.ts","webpack:///./src/app/admin/instructors/instructors/create-or-edit-instructor-user-modal.component.html","webpack:///./src/app/admin/instructors/instructors/create-or-edit-instructor-user-modal.component.ts","webpack:///./src/app/admin/instructors/instructors/instructors.component.html","webpack:///./src/app/admin/instructors/instructors/instructors.component.ts","webpack:///./src/app/admin/instructors/instructors/licenseClass-lookup-table-modal.component.html","webpack:///./src/app/admin/instructors/instructors/licenseClass-lookup-table-modal.component.less","webpack:///./src/app/admin/instructors/instructors/licenseClass-lookup-table-modal.component.ts","webpack:///./src/app/admin/instructors/instructors/office-lookup-table-modal.component.html","webpack:///./src/app/admin/instructors/instructors/office-lookup-table-modal.component.less","webpack:///./src/app/admin/instructors/instructors/office-lookup-table-modal.component.ts","webpack:///./src/app/admin/instructors/instructors/view-instructor-modal.component.html","webpack:///./src/app/admin/instructors/instructors/view-instructor-modal.component.ts","webpack:///./src/app/admin/languages/create-or-edit-language-modal.component.html","webpack:///./src/app/admin/languages/create-or-edit-language-modal.component.ts","webpack:///./src/app/admin/languages/edit-text-modal.component.html","webpack:///./src/app/admin/languages/edit-text-modal.component.ts","webpack:///./src/app/admin/languages/language-texts.component.html","webpack:///./src/app/admin/languages/language-texts.component.less","webpack:///./src/app/admin/languages/language-texts.component.ts","webpack:///./src/app/admin/languages/languages.component.html","webpack:///./src/app/admin/languages/languages.component.ts","webpack:///./src/app/admin/lessons/predefinedDrivingLessons/create-or-edit-predefinedDrivingLesson-modal.component.html","webpack:///./src/app/admin/lessons/predefinedDrivingLessons/create-or-edit-predefinedDrivingLesson-modal.component.ts","webpack:///./src/app/admin/lessons/predefinedDrivingLessons/predefinedDrivingLessons.component.html","webpack:///./src/app/admin/lessons/predefinedDrivingLessons/predefinedDrivingLessons.component.ts","webpack:///./src/app/admin/lessons/predefinedDrivingLessons/view-predefinedDrivingLesson-modal.component.html","webpack:///./src/app/admin/lessons/predefinedDrivingLessons/view-predefinedDrivingLesson-modal.component.ts","webpack:///./src/app/admin/lessons/predefinedTheoryLessons/create-or-edit-predefinedTheoryLesson-modal.component.html","webpack:///./src/app/admin/lessons/predefinedTheoryLessons/create-or-edit-predefinedTheoryLesson-modal.component.ts","webpack:///./src/app/admin/lessons/predefinedTheoryLessons/predefinedTheoryLessons.component.html","webpack:///./src/app/admin/lessons/predefinedTheoryLessons/predefinedTheoryLessons.component.ts","webpack:///./src/app/admin/lessons/predefinedTheoryLessons/view-predefinedTheoryLesson-modal.component.html","webpack:///./src/app/admin/lessons/predefinedTheoryLessons/view-predefinedTheoryLesson-modal.component.ts","webpack:///./src/app/admin/maintenance/maintenance.component.html","webpack:///./src/app/admin/maintenance/maintenance.component.less","webpack:///./src/app/admin/maintenance/maintenance.component.ts","webpack:///./src/app/admin/organization-units/add-member-modal.component.html","webpack:///./src/app/admin/organization-units/add-member-modal.component.ts","webpack:///./src/app/admin/organization-units/add-role-modal.component.html","webpack:///./src/app/admin/organization-units/add-role-modal.component.ts","webpack:///./src/app/admin/organization-units/create-or-edit-unit-modal.component.html","webpack:///./src/app/admin/organization-units/create-or-edit-unit-modal.component.ts","webpack:///./src/app/admin/organization-units/organization-tree.component.html","webpack:///./src/app/admin/organization-units/organization-tree.component.ts","webpack:///./src/app/admin/organization-units/organization-unit-members.component.html","webpack:///./src/app/admin/organization-units/organization-unit-members.component.ts","webpack:///./src/app/admin/organization-units/organization-unit-roles.component.html","webpack:///./src/app/admin/organization-units/organization-unit-roles.component.ts","webpack:///./src/app/admin/organization-units/organization-units.component.html","webpack:///./src/app/admin/organization-units/organization-units.component.ts","webpack:///./src/app/admin/resources/offices/create-or-edit-office-modal.component.html","webpack:///./src/app/admin/resources/offices/create-or-edit-office-modal.component.ts","webpack:///./src/app/admin/resources/offices/offices.component.html","webpack:///./src/app/admin/resources/offices/offices.component.ts","webpack:///./src/app/admin/resources/offices/view-office-modal.component.html","webpack:///./src/app/admin/resources/offices/view-office-modal.component.ts","webpack:///./src/app/admin/resources/simulators/create-or-edit-simulator-modal.component.html","webpack:///./src/app/admin/resources/simulators/create-or-edit-simulator-modal.component.ts","webpack:///./src/app/admin/resources/simulators/simulator-office-lookup-table-modal.component.html","webpack:///./src/app/admin/resources/simulators/simulator-office-lookup-table-modal.component.less","webpack:///./src/app/admin/resources/simulators/simulator-office-lookup-table-modal.component.ts","webpack:///./src/app/admin/resources/simulators/simulators.component.html","webpack:///./src/app/admin/resources/simulators/simulators.component.ts","webpack:///./src/app/admin/resources/simulators/view-simulator-modal.component.html","webpack:///./src/app/admin/resources/simulators/view-simulator-modal.component.ts","webpack:///./src/app/admin/resources/vehicles/create-or-edit-vehicle-modal.component.html","webpack:///./src/app/admin/resources/vehicles/create-or-edit-vehicle-modal.component.ts","webpack:///./src/app/admin/resources/vehicles/vehicle-instructor-lookup-table-modal.component.html","webpack:///./src/app/admin/resources/vehicles/vehicle-instructor-lookup-table-modal.component.less","webpack:///./src/app/admin/resources/vehicles/vehicle-instructor-lookup-table-modal.component.ts","webpack:///./src/app/admin/resources/vehicles/vehicle-licenseClass-lookup-table-modal.component.html","webpack:///./src/app/admin/resources/vehicles/vehicle-licenseClass-lookup-table-modal.component.less","webpack:///./src/app/admin/resources/vehicles/vehicle-licenseClass-lookup-table-modal.component.ts","webpack:///./src/app/admin/resources/vehicles/vehicles.component.html","webpack:///./src/app/admin/resources/vehicles/vehicles.component.ts","webpack:///./src/app/admin/resources/vehicles/view-vehicle-modal.component.html","webpack:///./src/app/admin/resources/vehicles/view-vehicle-modal.component.ts","webpack:///./src/app/admin/roles/create-or-edit-role-modal.component.html","webpack:///./src/app/admin/roles/create-or-edit-role-modal.component.ts","webpack:///./src/app/admin/roles/roles.component.html","webpack:///./src/app/admin/roles/roles.component.ts","webpack:///./src/app/admin/sales/pricePackages/pricePackages.component.html","webpack:///./src/app/admin/sales/pricePackages/pricePackages.component.ts","webpack:///./src/app/admin/sales/products/create-or-edit-product-modal.component.html","webpack:///./src/app/admin/sales/products/create-or-edit-product-modal.component.ts","webpack:///./src/app/admin/sales/products/products.component.html","webpack:///./src/app/admin/sales/products/products.component.ts","webpack:///./src/app/admin/settings/host-settings.component.html","webpack:///./src/app/admin/settings/host-settings.component.ts","webpack:///./src/app/admin/settings/tenant-settings.component.html","webpack:///./src/app/admin/settings/tenant-settings.component.ts","webpack:///./src/app/admin/shared/edition-combo.component.ts","webpack:///./src/app/admin/shared/feature-tree.component.html","webpack:///./src/app/admin/shared/feature-tree.component.less","webpack:///./src/app/admin/shared/feature-tree.component.ts","webpack:///./src/app/admin/shared/organization-unit-tree.component.ts","webpack:///./src/app/admin/shared/permission-combo.component.ts","webpack:///./src/app/admin/shared/permission-tree.component.ts","webpack:///./src/app/admin/shared/role-combo.component.ts","webpack:///./src/app/admin/subscription-management/invoice/invoice.component.html","webpack:///./src/app/admin/subscription-management/invoice/invoice.component.less","webpack:///./src/app/admin/subscription-management/invoice/invoice.component.ts","webpack:///./src/app/admin/subscription-management/subscription-management.component.html","webpack:///./src/app/admin/subscription-management/subscription-management.component.ts","webpack:///./src/app/admin/templates/drivingLessonTopics/create-or-edit-drivingLessonTopic-modal.component.html","webpack:///./src/app/admin/templates/drivingLessonTopics/create-or-edit-drivingLessonTopic-modal.component.ts","webpack:///./src/app/admin/templates/drivingLessonTopics/drivingLessonTopics.component.html","webpack:///./src/app/admin/templates/drivingLessonTopics/drivingLessonTopics.component.ts","webpack:///./src/app/admin/templates/drivingLessonTopics/view-drivingLessonTopic-modal.component.html","webpack:///./src/app/admin/templates/drivingLessonTopics/view-drivingLessonTopic-modal.component.ts","webpack:///./src/app/admin/templates/licenseClasses/create-or-edit-licenseClass-modal.component.html","webpack:///./src/app/admin/templates/licenseClasses/create-or-edit-licenseClass-modal.component.ts","webpack:///./src/app/admin/templates/licenseClasses/licenseClasses.component.html","webpack:///./src/app/admin/templates/licenseClasses/licenseClasses.component.ts","webpack:///./src/app/admin/templates/licenseClasses/view-licenseClass-modal.component.html","webpack:///./src/app/admin/templates/licenseClasses/view-licenseClass-modal.component.ts","webpack:///./src/app/admin/templates/theoryLessonTopics/create-or-edit-theoryLessonTopic-modal.component.html","webpack:///./src/app/admin/templates/theoryLessonTopics/create-or-edit-theoryLessonTopic-modal.component.ts","webpack:///./src/app/admin/templates/theoryLessonTopics/theoryLessonTopics.component.html","webpack:///./src/app/admin/templates/theoryLessonTopics/theoryLessonTopics.component.ts","webpack:///./src/app/admin/templates/theoryLessonTopics/view-theoryLessonTopic-modal.component.html","webpack:///./src/app/admin/templates/theoryLessonTopics/view-theoryLessonTopic-modal.component.ts","webpack:///./src/app/admin/tenants/create-tenant-modal.component.html","webpack:///./src/app/admin/tenants/create-tenant-modal.component.ts","webpack:///./src/app/admin/tenants/edit-tenant-modal.component.html","webpack:///./src/app/admin/tenants/edit-tenant-modal.component.ts","webpack:///./src/app/admin/tenants/tenant-features-modal.component.html","webpack:///./src/app/admin/tenants/tenant-features-modal.component.ts","webpack:///./src/app/admin/tenants/tenants.component.html","webpack:///./src/app/admin/tenants/tenants.component.ts","webpack:///./src/app/admin/ui-customization/default-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/default-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme10-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme10-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme11-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme11-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme12-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme12-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme2-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme2-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme3-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme3-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme4-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme4-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme5-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme5-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme6-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme6-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme7-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme7-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme8-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme8-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/theme9-theme-ui-settings.component.html","webpack:///./src/app/admin/ui-customization/theme9-theme-ui-settings.component.ts","webpack:///./src/app/admin/ui-customization/ui-customization.component.html","webpack:///./src/app/admin/ui-customization/ui-customization.component.less","webpack:///./src/app/admin/ui-customization/ui-customization.component.ts","webpack:///./src/app/admin/users/create-or-edit-user-modal.component.html","webpack:///./src/app/admin/users/create-or-edit-user-modal.component.ts","webpack:///./src/app/admin/users/edit-user-permissions-modal.component.html","webpack:///./src/app/admin/users/edit-user-permissions-modal.component.ts","webpack:///./src/app/admin/users/users.component.html","webpack:///./src/app/admin/users/users.component.less","webpack:///./src/app/admin/users/users.component.ts","webpack:///./src/shared/AppEnums.ts"],"names":[],"mappings":"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","file":"app-admin-admin-module.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/contextmenu/contextmenu\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dragdrop/dragdrop\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/tree/tree\"));","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.createNumberMask=t():e.createNumberMask=t()}(this,function(){return function(e){function t(n){if(o[n])return o[n].exports;var i=o[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var o={};return t.m=e,t.c=o,t.p=\"\",t(0)}([function(e,t,o){e.exports=o(2)},,function(e,t){\"use strict\";function o(){function e(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=e.length;if(e===l||e[0]===y[0]&&1===t)return y.split(l).concat([v]).concat(g.split(l));if(e===k&&M)return y.split(l).concat([\"0\",k,v]).concat(g.split(l));var o=e[0]===s&&q;o&&(e=e.toString().substr(1));var c=e.lastIndexOf(k),u=c!==-1,a=void 0,b=void 0,h=void 0;if(e.slice(T*-1)===g&&(e=e.slice(0,T*-1)),u&&(M||$)?(a=e.slice(e.slice(0,R)===y?R:0,c),b=e.slice(c+1,t),b=n(b.replace(f,l))):a=e.slice(0,R)===y?e.slice(R):e,P&&(\"undefined\"==typeof P?\"undefined\":r(P))===p){var S=\".\"===j?\"[.]\":\"\"+j,w=(a.match(new RegExp(S,\"g\"))||[]).length;a=a.slice(0,P+w*Z)}return a=a.replace(f,l),E||(a=a.replace(/^0+(0$|[^0])/,\"$1\")),a=x?i(a,j):a,h=n(a),(u&&M||$===!0)&&(e[c-1]!==k&&h.push(m),h.push(k,m),b&&((\"undefined\"==typeof L?\"undefined\":r(L))===p&&(b=b.slice(0,L)),h=h.concat(b)),$===!0&&e[c-1]===k&&h.push(v)),R>0&&(h=y.split(l).concat(h)),o&&(h.length===R&&h.push(v),h=[d].concat(h)),g.length>0&&(h=h.concat(g.split(l))),h}var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=t.prefix,y=void 0===o?c:o,b=t.suffix,g=void 0===b?l:b,h=t.includeThousandsSeparator,x=void 0===h||h,S=t.thousandsSeparatorSymbol,j=void 0===S?u:S,w=t.allowDecimal,M=void 0!==w&&w,N=t.decimalSymbol,k=void 0===N?a:N,D=t.decimalLimit,L=void 0===D?2:D,O=t.requireDecimal,$=void 0!==O&&O,_=t.allowNegative,q=void 0!==_&&_,B=t.allowLeadingZeroes,E=void 0!==B&&B,I=t.integerLimit,P=void 0===I?null:I,R=y&&y.length||0,T=g&&g.length||0,Z=j&&j.length||0;return e.instanceOf=\"createNumberMask\",e}function n(e){return e.split(l).map(function(e){return v.test(e)?v:e})}function i(e,t){return e.replace(/\\B(?=(\\d{3})+(?!\\d))/g,t)}Object.defineProperty(t,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};t.default=o;var c=\"$\",l=\"\",u=\",\",a=\".\",s=\"-\",d=/-/,f=/\\D+/g,p=\"number\",v=/\\d/,m=\"[]\"}])});","﻿import { NgModule } from '@angular/core';\r\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\r\nimport { PredefinedTheoryLessonsComponent } from './lessons/predefinedTheoryLessons/predefinedTheoryLessons.component';\r\nimport { PredefinedDrivingLessonsComponent } from './lessons/predefinedDrivingLessons/predefinedDrivingLessons.component';\r\nimport { FormsComponent } from './forms/forms/forms.component';\r\nimport { PricePackagesComponent } from './sales/pricePackages/pricePackages.component';\r\nimport { ProductsComponent } from './sales/products/products.component';\r\nimport { SimulatorsComponent } from './resources/simulators/simulators.component';\r\nimport { OfficesComponent } from './resources/offices/offices.component';\r\nimport { VehiclesComponent } from './resources/vehicles/vehicles.component';\r\nimport { DrivingLessonTopicsComponent } from './templates/drivingLessonTopics/drivingLessonTopics.component';\r\nimport { InstructorsComponent } from './instructors/instructors/instructors.component';\r\nimport { TheoryLessonTopicsComponent } from './templates/theoryLessonTopics/theoryLessonTopics.component';\r\nimport { LicenseClassesComponent } from './templates/licenseClasses/licenseClasses.component';\r\nimport { AuditLogsComponent } from './audit-logs/audit-logs.component';\r\nimport { HostDashboardComponent } from './dashboard/host-dashboard.component';\r\nimport { DemoUiComponentsComponent } from './demo-ui-components/demo-ui-components.component';\r\nimport { EditionsComponent } from './editions/editions.component';\r\nimport { InstallComponent } from './install/install.component';\r\nimport { LanguageTextsComponent } from './languages/language-texts.component';\r\nimport { LanguagesComponent } from './languages/languages.component';\r\nimport { MaintenanceComponent } from './maintenance/maintenance.component';\r\nimport { OrganizationUnitsComponent } from './organization-units/organization-units.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { HostSettingsComponent } from './settings/host-settings.component';\r\nimport { TenantSettingsComponent } from './settings/tenant-settings.component';\r\nimport { InvoiceComponent } from './subscription-management/invoice/invoice.component';\r\nimport { SubscriptionManagementComponent } from './subscription-management/subscription-management.component';\r\nimport { TenantsComponent } from './tenants/tenants.component';\r\nimport { UiCustomizationComponent } from './ui-customization/ui-customization.component';\r\nimport { UsersComponent } from './users/users.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild([\r\n            {\r\n                path: '',\r\n                children: [\r\n                    { path: 'lessons/predefinedTheoryLessons', component: PredefinedTheoryLessonsComponent, data: { permission: 'Pages.Administration.PredefinedTheoryLessons' }  },\r\n                    { path: 'lessons/predefinedDrivingLessons', component: PredefinedDrivingLessonsComponent, data: { permission: 'Pages.Administration.PredefinedDrivingLessons' }  },\r\n                    { path: 'forms/forms', component: FormsComponent, data: { permission: 'Pages.Administration.Forms' }  },\r\n                    { path: 'sales/pricePackages', component: PricePackagesComponent, data: { permission: 'Pages.Administration.PricePackages' }  },\r\n                    { path: 'sales/products', component: ProductsComponent, data: { permission: 'Pages.Administration.Products' }  },\r\n                    { path: 'resources/simulators', component: SimulatorsComponent, data: { permission: 'Pages.Administration.Simulators' }  },\r\n                    { path: 'resources/offices', component: OfficesComponent, data: { permission: 'Pages.Administration.Offices' }  },\r\n                    { path: 'resources/vehicles', component: VehiclesComponent, data: { permission: 'Pages.Administration.Vehicles' }  },\r\n                    { path: 'templates/drivingLessonTopics', component: DrivingLessonTopicsComponent, data: { permission: 'Pages.Administration.DrivingLessonTopics' }  },\r\n                    { path: 'instructors/instructors', component: InstructorsComponent, data: { permission: 'Pages.Administration.Instructors' }  },\r\n                    { path: 'templates/theoryLessonTopics', component: TheoryLessonTopicsComponent, data: { permission: 'Pages.Administration.TheoryLessonTopics' }  },\r\n                    { path: 'templates/licenseClasses', component: LicenseClassesComponent, data: { permission: 'Pages.Administration.LicenseClasses' }  },\r\n                    { path: 'users', component: UsersComponent, data: { permission: 'Pages.Administration.Users' } },\r\n                    { path: 'roles', component: RolesComponent, data: { permission: 'Pages.Administration.Roles' } },\r\n                    { path: 'auditLogs', component: AuditLogsComponent, data: { permission: 'Pages.Administration.AuditLogs' } },\r\n                    { path: 'maintenance', component: MaintenanceComponent, data: { permission: 'Pages.Administration.Host.Maintenance' } },\r\n                    { path: 'hostSettings', component: HostSettingsComponent, data: { permission: 'Pages.Administration.Host.Settings' } },\r\n                    { path: 'editions', component: EditionsComponent, data: { permission: 'Pages.Editions' } },\r\n                    { path: 'languages', component: LanguagesComponent, data: { permission: 'Pages.Administration.Languages' } },\r\n                    { path: 'languages/:name/texts', component: LanguageTextsComponent, data: { permission: 'Pages.Administration.Languages.ChangeTexts' } },\r\n                    { path: 'tenants', component: TenantsComponent, data: { permission: 'Pages.Tenants' } },\r\n                    { path: 'organization-units', component: OrganizationUnitsComponent, data: { permission: 'Pages.Administration.OrganizationUnits' } },\r\n                    { path: 'subscription-management', component: SubscriptionManagementComponent, data: { permission: 'Pages.Administration.Tenant.SubscriptionManagement' } },\r\n                    { path: 'invoice/:paymentId', component: InvoiceComponent, data: { permission: 'Pages.Administration.Tenant.SubscriptionManagement' } },\r\n                    { path: 'tenantSettings', component: TenantSettingsComponent, data: { permission: 'Pages.Administration.Tenant.Settings' } },\r\n                    { path: 'hostDashboard', component: HostDashboardComponent, data: { permission: 'Pages.Administration.Host.Dashboard' } },\r\n                    { path: 'demo-ui-components', component: DemoUiComponentsComponent, data: { permission: 'Pages.DemoUiComponents' } },\r\n                    { path: 'install', component: InstallComponent },\r\n                    { path: 'ui-customization', component: UiCustomizationComponent }\r\n                ]\r\n            }\r\n        ])\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AdminRoutingModule {\r\n\r\n    constructor(\r\n        private router: Router\r\n    ) {\r\n        router.events.subscribe((event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                window.scroll(0, 0);\r\n            }\r\n        });\r\n    }\r\n}\r\n","﻿import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppCommonModule } from '@app/shared/common/app-common.module';\r\nimport { PredefinedTheoryLessonsComponent } from './lessons/predefinedTheoryLessons/predefinedTheoryLessons.component';\r\nimport { ViewPredefinedTheoryLessonModalComponent } from './lessons/predefinedTheoryLessons/view-predefinedTheoryLesson-modal.component';\r\nimport { CreateOrEditPredefinedTheoryLessonModalComponent } from './lessons/predefinedTheoryLessons/create-or-edit-predefinedTheoryLesson-modal.component';\r\n\r\nimport { PredefinedDrivingLessonsComponent } from './lessons/predefinedDrivingLessons/predefinedDrivingLessons.component';\r\nimport { ViewPredefinedDrivingLessonModalComponent } from './lessons/predefinedDrivingLessons/view-predefinedDrivingLesson-modal.component';\r\nimport { CreateOrEditPredefinedDrivingLessonModalComponent } from './lessons/predefinedDrivingLessons/create-or-edit-predefinedDrivingLesson-modal.component';\r\n\r\nimport { FormsComponent } from './forms/forms/forms.component';\r\n\r\nimport { PricePackagesComponent } from './sales/pricePackages/pricePackages.component';\r\n\r\nimport { ProductsComponent } from './sales/products/products.component';\r\n\r\nimport { CreateOrEditProductModalComponent } from './sales/products/create-or-edit-product-modal.component';\r\n\r\nimport { SimulatorsComponent } from './resources/simulators/simulators.component';\r\nimport { ViewSimulatorModalComponent } from './resources/simulators/view-simulator-modal.component';\r\nimport { CreateOrEditSimulatorModalComponent } from './resources/simulators/create-or-edit-simulator-modal.component';\r\nimport { SimulatorOfficeLookupTableModalComponent } from './resources/simulators/simulator-office-lookup-table-modal.component';\r\n\r\nimport { OfficesComponent } from './resources/offices/offices.component';\r\nimport { ViewOfficeModalComponent } from './resources/offices/view-office-modal.component';\r\nimport { CreateOrEditOfficeModalComponent } from './resources/offices/create-or-edit-office-modal.component';\r\n\r\nimport { VehiclesComponent } from './resources/vehicles/vehicles.component';\r\nimport { ViewVehicleModalComponent } from './resources/vehicles/view-vehicle-modal.component';\r\nimport { CreateOrEditVehicleModalComponent } from './resources/vehicles/create-or-edit-vehicle-modal.component';\r\nimport { VehicleLicenseClassLookupTableModalComponent } from './resources/vehicles/vehicle-licenseClass-lookup-table-modal.component';\r\n\r\nimport { DrivingLessonTopicsComponent } from './templates/drivingLessonTopics/drivingLessonTopics.component';\r\nimport { ViewDrivingLessonTopicModalComponent } from './templates/drivingLessonTopics/view-drivingLessonTopic-modal.component';\r\nimport { CreateOrEditDrivingLessonTopicModalComponent } from './templates/drivingLessonTopics/create-or-edit-drivingLessonTopic-modal.component';\r\n\r\nimport { InstructorsComponent } from './instructors/instructors/instructors.component';\r\nimport { ViewInstructorModalComponent } from './instructors/instructors/view-instructor-modal.component';\r\nimport { CreateOrEditInstructorModalComponent } from './instructors/instructors/create-or-edit-instructor-modal.component';\r\nimport { LicenseClassLookupTableModalComponent } from './instructors/instructors/licenseClass-lookup-table-modal.component';\r\n\r\nimport { TheoryLessonTopicsComponent } from './templates/theoryLessonTopics/theoryLessonTopics.component';\r\nimport { ViewTheoryLessonTopicModalComponent } from './templates/theoryLessonTopics/view-theoryLessonTopic-modal.component';\r\nimport { CreateOrEditTheoryLessonTopicModalComponent } from './templates/theoryLessonTopics/create-or-edit-theoryLessonTopic-modal.component';\r\n\r\nimport { LicenseClassesComponent } from './templates/licenseClasses/licenseClasses.component';\r\nimport { ViewLicenseClassModalComponent } from './templates/licenseClasses/view-licenseClass-modal.component';\r\nimport { CreateOrEditLicenseClassModalComponent } from './templates/licenseClasses/create-or-edit-licenseClass-modal.component';\r\n\r\nimport { UtilsModule } from '@shared/utils/utils.module';\r\nimport { AddMemberModalComponent } from 'app/admin/organization-units/add-member-modal.component';\r\nimport { AddRoleModalComponent } from 'app/admin/organization-units/add-role-modal.component';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { ModalModule, PopoverModule, TabsModule, TooltipModule, BsDropdownModule } from 'ngx-bootstrap';\r\nimport { BsDatepickerModule, BsDatepickerConfig, BsDaterangepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { AutoCompleteModule, EditorModule, FileUploadModule as PrimeNgFileUploadModule, InputMaskModule, PaginatorModule } from 'primeng/primeng';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { DragDropModule } from 'primeng/dragdrop';\r\nimport { TreeDragDropService } from 'primeng/api';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { AuditLogDetailModalComponent } from './audit-logs/audit-log-detail-modal.component';\r\nimport { AuditLogsComponent } from './audit-logs/audit-logs.component';\r\nimport { HostDashboardComponent } from './dashboard/host-dashboard.component';\r\nimport { DemoUiComponentsComponent } from './demo-ui-components/demo-ui-components.component';\r\nimport { DemoUiDateTimeComponent } from './demo-ui-components/demo-ui-date-time.component';\r\nimport { DemoUiEditorComponent } from './demo-ui-components/demo-ui-editor.component';\r\nimport { DemoUiFileUploadComponent } from './demo-ui-components/demo-ui-file-upload.component';\r\nimport { DemoUiInputMaskComponent } from './demo-ui-components/demo-ui-input-mask.component';\r\nimport { DemoUiSelectionComponent } from './demo-ui-components/demo-ui-selection.component';\r\nimport { CreateEditionModalComponent } from './editions/create-edition-modal.component';\r\nimport { EditEditionModalComponent } from './editions/edit-edition-modal.component';\r\nimport { MoveTenantsToAnotherEditionModalComponent } from './editions/move-tenants-to-another-edition-modal.component';\r\nimport { EditionsComponent } from './editions/editions.component';\r\nimport { InstallComponent } from './install/install.component';\r\nimport { CreateOrEditLanguageModalComponent } from './languages/create-or-edit-language-modal.component';\r\nimport { EditTextModalComponent } from './languages/edit-text-modal.component';\r\nimport { LanguageTextsComponent } from './languages/language-texts.component';\r\nimport { LanguagesComponent } from './languages/languages.component';\r\nimport { MaintenanceComponent } from './maintenance/maintenance.component';\r\nimport { CreateOrEditUnitModalComponent } from './organization-units/create-or-edit-unit-modal.component';\r\nimport { OrganizationTreeComponent } from './organization-units/organization-tree.component';\r\nimport { OrganizationUnitMembersComponent } from './organization-units/organization-unit-members.component';\r\nimport { OrganizationUnitRolesComponent } from './organization-units/organization-unit-roles.component';\r\nimport { OrganizationUnitsComponent } from './organization-units/organization-units.component';\r\nimport { CreateOrEditRoleModalComponent } from './roles/create-or-edit-role-modal.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { HostSettingsComponent } from './settings/host-settings.component';\r\nimport { TenantSettingsComponent } from './settings/tenant-settings.component';\r\nimport { EditionComboComponent } from './shared/edition-combo.component';\r\nimport { FeatureTreeComponent } from './shared/feature-tree.component';\r\nimport { OrganizationUnitsTreeComponent } from './shared/organization-unit-tree.component';\r\nimport { PermissionComboComponent } from './shared/permission-combo.component';\r\nimport { PermissionTreeComponent } from './shared/permission-tree.component';\r\nimport { RoleComboComponent } from './shared/role-combo.component';\r\nimport { InvoiceComponent } from './subscription-management/invoice/invoice.component';\r\nimport { SubscriptionManagementComponent } from './subscription-management/subscription-management.component';\r\nimport { CreateTenantModalComponent } from './tenants/create-tenant-modal.component';\r\nimport { EditTenantModalComponent } from './tenants/edit-tenant-modal.component';\r\nimport { TenantFeaturesModalComponent } from './tenants/tenant-features-modal.component';\r\nimport { TenantsComponent } from './tenants/tenants.component';\r\nimport { UiCustomizationComponent } from './ui-customization/ui-customization.component';\r\nimport { DefaultThemeUiSettingsComponent } from './ui-customization/default-theme-ui-settings.component';\r\nimport { Theme2ThemeUiSettingsComponent } from './ui-customization/theme2-theme-ui-settings.component';\r\nimport { Theme3ThemeUiSettingsComponent } from './ui-customization/theme3-theme-ui-settings.component';\r\nimport { Theme4ThemeUiSettingsComponent } from './ui-customization/theme4-theme-ui-settings.component';\r\nimport { Theme5ThemeUiSettingsComponent } from './ui-customization/theme5-theme-ui-settings.component';\r\nimport { Theme6ThemeUiSettingsComponent } from './ui-customization/theme6-theme-ui-settings.component';\r\nimport { Theme7ThemeUiSettingsComponent } from './ui-customization/theme7-theme-ui-settings.component';\r\nimport { Theme8ThemeUiSettingsComponent } from './ui-customization/theme8-theme-ui-settings.component';\r\nimport { Theme9ThemeUiSettingsComponent } from './ui-customization/theme9-theme-ui-settings.component';\r\nimport { Theme10ThemeUiSettingsComponent } from './ui-customization/theme10-theme-ui-settings.component';\r\nimport { Theme11ThemeUiSettingsComponent } from './ui-customization/theme11-theme-ui-settings.component';\r\nimport { Theme12ThemeUiSettingsComponent } from './ui-customization/theme12-theme-ui-settings.component';\r\nimport { CreateOrEditUserModalComponent } from './users/create-or-edit-user-modal.component';\r\nimport { EditUserPermissionsModalComponent } from './users/edit-user-permissions-modal.component';\r\nimport { ImpersonationService } from './users/impersonation.service';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { CountoModule } from 'angular2-counto';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\nimport { NgxBootstrapDatePickerConfigService } from 'assets/ngx-bootstrap/ngx-bootstrap-datepicker-config.service';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { VehicleInstructorLookupTableModalComponent } from './resources/vehicles/vehicle-instructor-lookup-table-modal.component';\r\nimport { OfficeLookupTableModalComponent } from './instructors/instructors/office-lookup-table-modal.component';\r\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\r\nimport { CreateOrEditInstructorUserModalComponent } from './instructors/instructors/create-or-edit-instructor-user-modal.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        FileUploadModule,\r\n        ModalModule.forRoot(),\r\n        TabsModule.forRoot(),\r\n        TooltipModule.forRoot(),\r\n        PopoverModule.forRoot(),\r\n        BsDropdownModule.forRoot(),\r\n        BsDatepickerModule.forRoot(),\r\n        AdminRoutingModule,\r\n        UtilsModule,\r\n        AppCommonModule,\r\n        TableModule,\r\n        TreeModule,\r\n        DragDropModule,\r\n        ContextMenuModule,\r\n        PaginatorModule,\r\n        PrimeNgFileUploadModule,\r\n        AutoCompleteModule,\r\n        EditorModule,\r\n        InputMaskModule,\r\n        NgxChartsModule,\r\n        CountoModule,\r\n        TextMaskModule,\r\n        ImageCropperModule,\r\n        NgMultiSelectDropDownModule.forRoot(),\r\n        NumericTextBoxModule\r\n    ],\r\n    declarations: [\r\n\t\tPredefinedTheoryLessonsComponent,\r\n\t\tViewPredefinedTheoryLessonModalComponent,\t\tCreateOrEditPredefinedTheoryLessonModalComponent,\r\n\t\tPredefinedDrivingLessonsComponent,\r\n\t\tViewPredefinedDrivingLessonModalComponent,\t\tCreateOrEditPredefinedDrivingLessonModalComponent,\r\n\t\tFormsComponent,\r\n      CreateOrEditInstructorUserModalComponent,\r\n\t\tPricePackagesComponent,\r\n\r\n\t\tProductsComponent,\r\n\t\tCreateOrEditProductModalComponent,\r\n\t\tSimulatorsComponent,\r\n\t\tViewSimulatorModalComponent,\t\tCreateOrEditSimulatorModalComponent,\r\n    SimulatorOfficeLookupTableModalComponent,\r\n\t\tOfficesComponent,\r\n\t\tViewOfficeModalComponent,\t\tCreateOrEditOfficeModalComponent,\r\n\t\tVehiclesComponent,\r\n\t\tViewVehicleModalComponent,\t\tCreateOrEditVehicleModalComponent,\r\n    VehicleLicenseClassLookupTableModalComponent, VehicleInstructorLookupTableModalComponent,\r\n\t\tDrivingLessonTopicsComponent,\r\n\t\tViewDrivingLessonTopicModalComponent,\t\tCreateOrEditDrivingLessonTopicModalComponent,\r\n\t\tInstructorsComponent,\r\n\t\tViewInstructorModalComponent,\t\tCreateOrEditInstructorModalComponent,\r\n    LicenseClassLookupTableModalComponent, OfficeLookupTableModalComponent,\r\n\t\tTheoryLessonTopicsComponent,\r\n\t\tViewTheoryLessonTopicModalComponent,\t\tCreateOrEditTheoryLessonTopicModalComponent,\r\n\t\tLicenseClassesComponent,\r\n    ViewLicenseClassModalComponent,\t\tCreateOrEditLicenseClassModalComponent,\r\n        UsersComponent,\r\n        PermissionComboComponent,\r\n        RoleComboComponent,\r\n        CreateOrEditUserModalComponent,\r\n        EditUserPermissionsModalComponent,\r\n        PermissionTreeComponent,\r\n        FeatureTreeComponent,\r\n        OrganizationUnitsTreeComponent,\r\n        RolesComponent,\r\n        CreateOrEditRoleModalComponent,\r\n        AuditLogsComponent,\r\n        AuditLogDetailModalComponent,\r\n        HostSettingsComponent,\r\n        InstallComponent,\r\n        MaintenanceComponent,\r\n        EditionsComponent,\r\n        CreateEditionModalComponent,\r\n        EditEditionModalComponent,\r\n        MoveTenantsToAnotherEditionModalComponent,\r\n        LanguagesComponent,\r\n        LanguageTextsComponent,\r\n        CreateOrEditLanguageModalComponent,\r\n        TenantsComponent,\r\n        CreateTenantModalComponent,\r\n        EditTenantModalComponent,\r\n        TenantFeaturesModalComponent,\r\n        CreateOrEditLanguageModalComponent,\r\n        EditTextModalComponent,\r\n        OrganizationUnitsComponent,\r\n        OrganizationTreeComponent,\r\n        OrganizationUnitMembersComponent,\r\n        OrganizationUnitRolesComponent,\r\n        CreateOrEditUnitModalComponent,\r\n        TenantSettingsComponent,\r\n        HostDashboardComponent,\r\n        EditionComboComponent,\r\n        InvoiceComponent,\r\n        SubscriptionManagementComponent,\r\n        AddMemberModalComponent,\r\n        AddRoleModalComponent,\r\n        DemoUiComponentsComponent,\r\n        DemoUiDateTimeComponent,\r\n        DemoUiSelectionComponent,\r\n        DemoUiFileUploadComponent,\r\n        DemoUiInputMaskComponent,\r\n        DemoUiEditorComponent,\r\n        UiCustomizationComponent,\r\n        DefaultThemeUiSettingsComponent,\r\n        Theme2ThemeUiSettingsComponent,\r\n        Theme3ThemeUiSettingsComponent,\r\n        Theme4ThemeUiSettingsComponent,\r\n        Theme5ThemeUiSettingsComponent,\r\n        Theme6ThemeUiSettingsComponent,\r\n        Theme7ThemeUiSettingsComponent,\r\n        Theme8ThemeUiSettingsComponent,\r\n        Theme9ThemeUiSettingsComponent,\r\n        Theme10ThemeUiSettingsComponent,\r\n        Theme12ThemeUiSettingsComponent,\r\n        Theme11ThemeUiSettingsComponent\r\n    ],\r\n    exports: [\r\n        AddMemberModalComponent,\r\n        AddRoleModalComponent\r\n    ],\r\n    providers: [\r\n        ImpersonationService,\r\n        TreeDragDropService,\r\n        { provide: BsDatepickerConfig, useFactory: NgxBootstrapDatePickerConfigService.getDatepickerConfig },\r\n        { provide: BsDaterangepickerConfig, useFactory: NgxBootstrapDatePickerConfigService.getDaterangepickerConfig },\r\n        { provide: BsLocaleService, useFactory: NgxBootstrapDatePickerConfigService.getDatepickerLocale }\r\n    ]\r\n})\r\nexport class AdminModule { }\r\n","module.exports = \"<div bsModal #auditLogDetailModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"auditLogDetailModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"auditLog.userId\\\">{{\\\"AuditLogDetail\\\" | localize}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <h3 class=\\\"form-section\\\">{{\\\"UserInformations\\\" | localize}}</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"UserName\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9\\\">\\r\\n                                    <span>{{auditLog.userName}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"IpAddress\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9\\\">\\r\\n                                    <span>{{auditLog.clientIpAddress}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"Client\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9\\\">\\r\\n                                    <span>{{auditLog.clientName}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"Browser\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9\\\">\\r\\n                                    <span>{{auditLog.browserInfo}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\" *ngIf=\\\"auditLog.impersonatorUserId\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9 text-warning\\\">\\r\\n                                    <span>{{\\\"AuditLogImpersonatedOperationInfo\\\" | localize}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <h3 class=\\\"form-section\\\">{{\\\"ActionInformations\\\" | localize}}</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"Service\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9\\\">\\r\\n                                    <span>{{auditLog.serviceName}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"Action\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9\\\">\\r\\n                                    <span>{{auditLog.methodName}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"Time\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9\\\">\\r\\n                                    <span>{{getExecutionTime()}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"Duration\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9\\\">\\r\\n                                    <span>{{getDurationAsMs()}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"Parameters\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div class=\\\"col-lg-9 alert m-alert m-alert--default\\\">\\r\\n                                    <pre lang=\\\"js\\\">{{getFormattedParameters()}}</pre>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <h3 class=\\\"form-section\\\">{{\\\"CustomData\\\" | localize}}</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\r\\n                                    {{\\\"None\\\" | localize}}:\\r\\n                                </label>\\r\\n                                <div *ngIf=\\\"auditLog.customData\\\" class=\\\"col-lg-9 alert m-alert m-alert--default\\\">\\r\\n                                    <pre>{{auditLog.customData}}</pre>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <h3 class=\\\"form-section\\\">{{\\\"ErrorState\\\" | localize}}</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label *ngIf=\\\"!auditLog.exception\\\" class=\\\"col-lg-12 col-form-label\\\">\\r\\n                                    <i class=\\\"fa fa-check-circle m--font-success\\\"></i> {{\\\"Success\\\" | localize}}\\r\\n                                </label>\\r\\n                                <div *ngIf=\\\"auditLog.exception\\\" class=\\\"col-lg-12 alert m-alert m-alert--default\\\">\\r\\n                                    <pre>{{auditLog.exception}}</pre>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{\\\"Close\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { AuditLogListDto } from '@shared/service-proxies/service-proxies';\r\nimport * as moment from 'moment';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n    selector: 'auditLogDetailModal',\r\n    templateUrl: './audit-log-detail-modal.component.html'\r\n})\r\nexport class AuditLogDetailModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('auditLogDetailModal') modal: ModalDirective;\r\n\r\n    active = false;\r\n    auditLog: AuditLogListDto;\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getExecutionTime(): string {\r\n        const self = this;\r\n        return moment(self.auditLog.executionTime).fromNow() + ' (' + moment(self.auditLog.executionTime).format('YYYY-MM-DD HH:mm:ss') + ')';\r\n    }\r\n\r\n    getDurationAsMs(): string {\r\n        const self = this;\r\n        return self.l('Xms', self.auditLog.executionDuration);\r\n    }\r\n\r\n    getFormattedParameters(): string {\r\n        const self = this;\r\n        try {\r\n            const json = JSON.parse(self.auditLog.parameters);\r\n            return JSON.stringify(json, null, 4);\r\n        } catch (e) {\r\n            return self.auditLog.parameters;\r\n        }\r\n    }\r\n\r\n    show(record: AuditLogListDto): void {\r\n        const self = this;\r\n        self.active = true;\r\n        self.auditLog = record;\r\n\r\n        self.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n\\r\\n\\r\\n    <div class=\\\"m-subheader \\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"AuditLogs\\\" | localize}}</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                    <tab heading=\\\"{{'OperationLogs' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-12 text-right\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"exportToExcelAuditLogs()\\\"><i class=\\\"far fa-file-excel\\\"></i> {{\\\"ExportToExcel\\\" | localize}}</button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-metal\\\" (click)=\\\"getAuditLogs()\\\"><i class=\\\"fa fa-sync\\\"></i> {{\\\"Refresh\\\" | localize}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                            <form class=\\\"horizontal-form\\\" #auditFilterForm=\\\"ngForm\\\" (ngSubmit)=\\\"getAuditLogs()\\\">\\r\\n                                <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"StartEndRange\\\" class=\\\"control-label\\\">{{\\\"DateRange\\\" | localize}}</label>\\r\\n                                            <input class=\\\"form-control\\\"\\r\\n                                                   id=\\\"StartEndRange\\\"\\r\\n                                                   name=\\\"StartEndRange\\\"\\r\\n                                                   #drp=\\\"bsDaterangepicker\\\"\\r\\n                                                   readonly=\\\"readonly\\\"\\r\\n                                                   bsDaterangepicker\\r\\n                                                   dateRangePickerInitialValue\\r\\n                                                   [(ngModel)]=\\\"dateRange\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"UsernameAuditLog\\\" class=\\\"control-label\\\">{{\\\"UserName\\\" | localize}}</label>\\r\\n                                            <input id=\\\"UsernameAuditLog\\\" type=\\\"text\\\" name=\\\"UsernameAuditLog\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"usernameAuditLog\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"advancedFiltersAreShown\\\" class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"ServiceName\\\" class=\\\"control-label\\\">{{\\\"Service\\\" | localize}}</label>\\r\\n                                            <input id=\\\"ServiceName\\\" name=\\\"ServiceName\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"serviceName\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <label class=\\\"control-label\\\" style=\\\"display: block\\\">{{\\\"Duration\\\" | localize}}</label>\\r\\n                                        <div class=\\\"input-group\\\" style=\\\"width: 250px !important;\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"MinExecutionDuration\\\" only-number=\\\"\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"86400000\\\" ng-minlength=\\\"0\\\" ng-maxlength=\\\"8\\\" [(ngModel)]=\\\"minExecutionDuration\\\">\\r\\n                                            <span class=\\\"input-group-addon\\\">\\r\\n                                                ---\\r\\n                                            </span>\\r\\n                                            <input type=\\\"text\\\" name=\\\"MaxExecutionDuration\\\" only-number=\\\"\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"86400000\\\" ng-minlength=\\\"0\\\" ng-maxlength=\\\"8\\\" [(ngModel)]=\\\"maxExecutionDuration\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"MethodName\\\" class=\\\"control-label\\\">{{\\\"Action\\\" | localize}}</label>\\r\\n                                            <input id=\\\"MethodName\\\" type=\\\"text\\\" name=\\\"MethodName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"methodName\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"HasException\\\" class=\\\"control-label\\\">{{\\\"ErrorState\\\" | localize}}</label>\\r\\n                                            <select id=\\\"HasException\\\" name=\\\"HasException\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"hasException\\\">\\r\\n                                                <option value=\\\"\\\">{{\\\"All\\\" | localize}}</option>\\r\\n                                                <option value=\\\"false\\\">{{\\\"Success\\\" | localize}}</option>\\r\\n                                                <option value=\\\"true\\\">{{\\\"HasError\\\" | localize}}</option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"BrowserInfo\\\" class=\\\"control-label\\\">{{\\\"Browser\\\" | localize}}</label>\\r\\n                                            <input id=\\\"BrowserInfo\\\" type=\\\"text\\\" name=\\\"BrowserInfo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"browserInfo\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row m--margin-bottom-10\\\">\\r\\n                                    <div class=\\\"col-sm-6\\\">\\r\\n                                        <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{\\\"ShowAdvancedFilters\\\" | localize}}</span>\\r\\n                                        <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{\\\"HideAdvancedFilters\\\" | localize}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <!--<Primeng-TurboTable-Start>-->\\r\\n                            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelperAuditLogs.isLoading\\\">\\r\\n                                <p-table #dataTableAuditLogs\\r\\n                                         (onLazyLoad)=\\\"getAuditLogs($event)\\\"\\r\\n                                         [value]=\\\"primengTableHelperAuditLogs.records\\\"\\r\\n                                         rows=\\\"{{primengTableHelperAuditLogs.defaultRecordsCountPerPage}}\\\"\\r\\n                                         [paginator]=\\\"false\\\"\\r\\n                                         [lazy]=\\\"true\\\"\\r\\n                                         scrollable=\\\"true\\\"\\r\\n                                         ScrollWidth=\\\"100%\\\"\\r\\n                                         responsive=\\\"primengTableHelperAuditLogs.isResponsive\\\"\\r\\n                                         resizableColumns=\\\"primengTableHelperAuditLogs.resizableColumns\\\">\\r\\n                                    <ng-template pTemplate=\\\"header\\\">\\r\\n                                        <tr>\\r\\n                                            <th style=\\\"width:75px\\\"></th>\\r\\n                                            <th style=\\\"width:75px\\\"></th>\\r\\n                                            <th style=\\\"width: 150px\\\" pSortableColumn=\\\"executionTime\\\">\\r\\n                                                {{'Time' | localize}}\\r\\n                                                <p-sortIcon field=\\\"executionTime\\\"></p-sortIcon>\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 150px\\\" pSortableColumn=\\\"userName\\\">\\r\\n                                                {{'UserName' | localize}}\\r\\n                                                <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 250px\\\">\\r\\n                                                {{'Service' | localize}}\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 250px\\\">\\r\\n                                                {{'Action' | localize}}\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 100px\\\" pSortableColumn=\\\"executionDuration\\\">\\r\\n                                                {{'Duration' | localize}}\\r\\n                                                <p-sortIcon field=\\\"executionDuration\\\"></p-sortIcon>\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 150px\\\">\\r\\n                                                {{'IpAddress' | localize}}\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 150px\\\">\\r\\n                                                {{'Client' | localize}}\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 150px\\\">\\r\\n                                                {{'Browser' | localize}}\\r\\n                                            </th>\\r\\n                                        </tr>\\r\\n                                    </ng-template>\\r\\n                                    <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                        <tr>\\r\\n                                            <td style=\\\"width: 75px\\\">\\r\\n                                                <div class=\\\"text-center\\\">\\r\\n                                                    <button class=\\\"btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill\\\" (click)=\\\"showAuditLogDetails(record)\\\"><i class=\\\"la la-search\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 75px\\\">\\r\\n                                                <div class=\\\"text-center\\\">\\r\\n                                                    <i *ngIf=\\\"record.exception\\\" class=\\\"fa fa-exclamation-triangle m--font-warning\\\"></i>\\r\\n                                                    <i *ngIf=\\\"!record.exception\\\" class=\\\"fa fa-check-circle m--font-success\\\"></i>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 150px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Time' | localize}}</span>\\r\\n                                                {{ record.executionTime | momentFormat:'YYYY-MM-DD HH:mm:ss'}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 150px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'UserName' | localize}}</span>\\r\\n                                                {{record.userName}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 250px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Service' | localize}}</span>\\r\\n                                                {{record.serviceName}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 250px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Action' | localize}}</span>\\r\\n                                                {{record.methodName}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 100px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Duration' | localize}}</span>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 150px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'IpAddress' | localize}}</span>\\r\\n                                                {{record.clientIpAddress}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 150px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Client' | localize}}</span>\\r\\n                                                {{record.clientName}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 150px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Browser' | localize}}</span>\\r\\n                                                <span title=\\\"{{record.browserInfo}}\\\">{{truncateStringWithPostfix(record.browserInfo, 20)}}</span>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </ng-template>\\r\\n                                </p-table>\\r\\n                                <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelperAuditLogs.totalRecordsCount == 0\\\">\\r\\n                                    {{'NoData' | localize}}\\r\\n                                </div>\\r\\n                                <div class=\\\"primeng-paging-container\\\">\\r\\n                                    <p-paginator [rows]=\\\"primengTableHelperAuditLogs.defaultRecordsCountPerPage\\\"\\r\\n                                                 #paginatorAuditLogs\\r\\n                                                 (onPageChange)=\\\"getAuditLogs($event)\\\"\\r\\n                                                 [totalRecords]=\\\"primengTableHelperAuditLogs.totalRecordsCount\\\"\\r\\n                                                 [rowsPerPageOptions]=\\\"primengTableHelperAuditLogs.predefinedRecordsCountPerPage\\\">\\r\\n                                    </p-paginator>\\r\\n                                    <span class=\\\"total-records-count\\\">\\r\\n                                        {{'TotalRecordsCount' | localize:primengTableHelperAuditLogs.totalRecordsCount}}\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--<Primeng-TurboTable-End>-->\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab heading=\\\"{{'ChangeLogs' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-12 text-right\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"exportToExcelEntityChanges()\\\"><i class=\\\"far fa-file-excel\\\"></i> {{\\\"ExportToExcel\\\" | localize}}</button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-metal\\\" (click)=\\\"getEntityChanges()\\\"><i class=\\\"fa fa-sync\\\"></i> {{\\\"Refresh\\\" | localize}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                            <form class=\\\"horizontal-form\\\" #entityChangeFilterForm=\\\"ngForm\\\" (ngSubmit)=\\\"getEntityChanges()\\\">\\r\\n                                <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"StartEndRangeEntityChange\\\" class=\\\"control-label\\\">{{\\\"DateRange\\\" | localize}}</label>\\r\\n                                            <input class=\\\"form-control\\\" id=\\\"StartEndRangeEntityChange\\\" name=\\\"StartEndRangeEntityChange\\\" readonly=\\\"readonly\\\" #drp=\\\"bsDaterangepicker\\\" bsDaterangepicker [(ngModel)]=\\\"dateRange\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"UserNameEntityChange\\\" class=\\\"control-label\\\">{{\\\"UserName\\\" | localize}}</label>\\r\\n                                            <input id=\\\"UserNameEntityChange\\\" type=\\\"text\\\" name=\\\"UserNameEntityChange\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"usernameEntityChange\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"EntityTypeFullName\\\" class=\\\"control-label\\\">{{\\\"Object\\\" | localize}}</label>\\r\\n\\r\\n                                            <select id=\\\"EntityTypeFullName\\\" name=\\\"EntityTypeFullName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"entityTypeFullName\\\">\\r\\n                                                <option value=undefined selected=\\\"selected\\\">{{\\\"All\\\" | localize}}</option>\\r\\n                                                <option *ngFor=\\\"let objectType of objectTypes\\\" [value]=\\\"objectType.value\\\">{{objectType.name}}</option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <!--<Primeng-TurboTable-Start>-->\\r\\n                            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelperEntityChanges.isLoading\\\">\\r\\n                                <p-table #dataTableEntityChanges\\r\\n                                         (onLazyLoad)=\\\"getEntityChanges($event)\\\"\\r\\n                                         [value]=\\\"primengTableHelperEntityChanges.records\\\"\\r\\n                                         rows=\\\"{{primengTableHelperEntityChanges.defaultRecordsCountPerPage}}\\\"\\r\\n                                         [paginator]=\\\"false\\\"\\r\\n                                         [lazy]=\\\"true\\\"\\r\\n                                         scrollable=\\\"true\\\"\\r\\n                                         ScrollWidth=\\\"100%\\\"\\r\\n                                         responsive=\\\"primengTableHelperEntityChanges.isResponsive\\\"\\r\\n                                         resizableColumns=\\\"primengTableHelperEntityChanges.resizableColumns\\\">\\r\\n                                    <ng-template pTemplate=\\\"header\\\">\\r\\n                                        <tr>\\r\\n                                            <th style=\\\"width: 40px\\\">\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 150px\\\">\\r\\n                                                {{'Action' | localize}}\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 250px\\\">\\r\\n                                                {{'Object' | localize}}\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 150px\\\" pSortableColumn=\\\"userName\\\">\\r\\n                                                {{'UserName' | localize}}\\r\\n                                                <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 150px\\\" pSortableColumn=\\\"changeTime\\\">\\r\\n                                                {{'Time' | localize}}\\r\\n                                                <p-sortIcon field=\\\"changeTime\\\"></p-sortIcon>\\r\\n                                            </th>\\r\\n                                        </tr>\\r\\n                                    </ng-template>\\r\\n                                    <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                        <tr>\\r\\n                                            <td style=\\\"width: 40px\\\">\\r\\n                                                <div class=\\\"text-center\\\">\\r\\n                                                    <button class=\\\"btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill\\\" (click)=\\\"showEntityChangeDetails(record)\\\"><i class=\\\"la la-search\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 150px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Action' | localize}}</span>\\r\\n                                                <span title=\\\"{{record.changeTypeName}}\\\">{{l(record.changeTypeName)}}</span>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 250px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Object' | localize}}</span>\\r\\n                                                {{record.entityTypeFullName}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 150px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'UserName' | localize}}</span>\\r\\n                                                {{record.userName}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 150px\\\">\\r\\n                                                <span class=\\\"ui-column-title\\\">{{'Time' | localize}}</span>\\r\\n                                                {{ record.changeTime | momentFormat:'YYYY-MM-DD HH:mm:ss'}}\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </ng-template>\\r\\n                                </p-table>\\r\\n                                <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelperEntityChanges.totalRecordsCount == 0\\\">\\r\\n                                    {{'NoData' | localize}}\\r\\n                                </div>\\r\\n                                <div class=\\\"primeng-paging-container\\\">\\r\\n                                    <p-paginator [rows]=\\\"primengTableHelperEntityChanges.defaultRecordsCountPerPage\\\"\\r\\n                                                 #paginatorEntityChanges\\r\\n                                                 (onPageChange)=\\\"getEntityChanges($event)\\\"\\r\\n                                                 [totalRecords]=\\\"primengTableHelperEntityChanges.totalRecordsCount\\\"\\r\\n                                                 [rowsPerPageOptions]=\\\"primengTableHelperEntityChanges.predefinedRecordsCountPerPage\\\">\\r\\n                                    </p-paginator>\\r\\n                                    <span class=\\\"total-records-count\\\">\\r\\n                                        {{'TotalRecordsCount' | localize:primengTableHelperEntityChanges.totalRecordsCount}}\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--<Primeng-TurboTable-End>-->\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                </tabset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <auditLogDetailModal #auditLogDetailModal></auditLogDetailModal>\\r\\n    <entityChangeDetailModal #entityChangeDetailModal></entityChangeDetailModal>\\r\\n</div>\\r\\n\"","module.exports = \".audit-log-detail-view h3.form-section {\\n  margin-top: 5px;\\n}\\n.audit-log-detail-view .form-group {\\n  margin-bottom: 0;\\n}\\n.audit-log-detail-view .form-group p.form-control-static {\\n  margin: 0;\\n}\\n.audit-log-detail-view .form-group .control-label {\\n  font-weight: bold;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYXVkaXQtbG9ncy9EOi9EcmltYSBBc3BOZXRaZXJvL2FuZ3VsYXIvc3JjL2FwcC9hZG1pbi9hdWRpdC1sb2dzL2F1ZGl0LWxvZ3MuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FkbWluL2F1ZGl0LWxvZ3MvYXVkaXQtbG9ncy5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGVBQUE7QUNBUjtBREZBO0VBTVEsZ0JBQUE7QUNEUjtBRExBO0VBU1ksU0FBQTtBQ0RaO0FEUkE7RUFhWSxpQkFBQTtBQ0ZaIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vYXVkaXQtbG9ncy9hdWRpdC1sb2dzLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1ZGl0LWxvZy1kZXRhaWwtdmlldyB7XG4gICAgaDMuZm9ybS1zZWN0aW9uIHtcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIH1cblxuICAgIC5mb3JtLWdyb3VwIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAgICAgICBwLmZvcm0tY29udHJvbC1zdGF0aWMge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNvbnRyb2wtbGFiZWwge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIH1cbiAgICB9XG59IiwiLmF1ZGl0LWxvZy1kZXRhaWwtdmlldyBoMy5mb3JtLXNlY3Rpb24ge1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG4uYXVkaXQtbG9nLWRldGFpbC12aWV3IC5mb3JtLWdyb3VwIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5hdWRpdC1sb2ctZGV0YWlsLXZpZXcgLmZvcm0tZ3JvdXAgcC5mb3JtLWNvbnRyb2wtc3RhdGljIHtcbiAgbWFyZ2luOiAwO1xufVxuLmF1ZGl0LWxvZy1kZXRhaWwtdmlldyAuZm9ybS1ncm91cCAuY29udHJvbC1sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuIl19 */\"","import { Component, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { AuditLogDetailModalComponent } from '@app/admin/audit-logs/audit-log-detail-modal.component';\r\nimport { EntityChangeDetailModalComponent } from '@app/shared/common/entityHistory/entity-change-detail-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { AuditLogListDto, AuditLogServiceProxy, EntityChangeListDto, NameValueDto } from '@shared/service-proxies/service-proxies';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport * as moment from 'moment';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { PrimengTableHelper } from 'shared/helpers/PrimengTableHelper';\r\n\r\n@Component({\r\n    templateUrl: './audit-logs.component.html',\r\n    styleUrls: ['./audit-logs.component.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class AuditLogsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('auditLogDetailModal') auditLogDetailModal: AuditLogDetailModalComponent;\r\n    @ViewChild('entityChangeDetailModal') entityChangeDetailModal: EntityChangeDetailModalComponent;\r\n    @ViewChild('dataTableAuditLogs') dataTableAuditLogs: Table;\r\n    @ViewChild('dataTableEntityChanges') dataTableEntityChanges: Table;\r\n    @ViewChild('paginatorAuditLogs') paginatorAuditLogs: Paginator;\r\n    @ViewChild('paginatorEntityChanges') paginatorEntityChanges: Paginator;\r\n\r\n    //Filters\r\n    public dateRange: Date[] = [moment().startOf('day').toDate(), moment().endOf('day').toDate()];\r\n\r\n    public usernameAuditLog: string;\r\n    public usernameEntityChange: string;\r\n    public serviceName: string;\r\n    public methodName: string;\r\n    public browserInfo: string;\r\n    public hasException: boolean = undefined;\r\n    public minExecutionDuration: number;\r\n    public maxExecutionDuration: number;\r\n    public entityTypeFullName: string;\r\n    public objectTypes: NameValueDto[];\r\n\r\n    primengTableHelperAuditLogs = new PrimengTableHelper();\r\n    primengTableHelperEntityChanges = new PrimengTableHelper();\r\n    advancedFiltersAreShown = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _auditLogService: AuditLogServiceProxy,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    showAuditLogDetails(record: AuditLogListDto): void {\r\n        this.auditLogDetailModal.show(record);\r\n    }\r\n\r\n    showEntityChangeDetails(record: EntityChangeListDto): void {\r\n        this.entityChangeDetailModal.show(record);\r\n    }\r\n\r\n    getAuditLogs(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelperAuditLogs.shouldResetPaging(event)) {\r\n            this.paginatorAuditLogs.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelperAuditLogs.showLoadingIndicator();\r\n\r\n        this._auditLogService.getAuditLogs(\r\n            moment(this.dateRange[0]),\r\n            moment(this.dateRange[1]).endOf('day'),\r\n            this.usernameAuditLog,\r\n            this.serviceName,\r\n            this.methodName,\r\n            this.browserInfo,\r\n            this.hasException,\r\n            this.minExecutionDuration,\r\n            this.maxExecutionDuration,\r\n            this.primengTableHelperAuditLogs.getSorting(this.dataTableAuditLogs),\r\n            this.primengTableHelperAuditLogs.getMaxResultCount(this.paginatorAuditLogs, event),\r\n            this.primengTableHelperAuditLogs.getSkipCount(this.paginatorAuditLogs, event)\r\n        ).subscribe((result) => {\r\n            this.primengTableHelperAuditLogs.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelperAuditLogs.records = result.items;\r\n            this.primengTableHelperAuditLogs.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    getEntityChanges(event?: LazyLoadEvent) {\r\n        this._auditLogService.getEntityHistoryObjectTypes()\r\n            .subscribe((result) => {\r\n                this.objectTypes = result;\r\n            });\r\n\r\n        if (this.primengTableHelperEntityChanges.shouldResetPaging(event)) {\r\n            this.paginatorEntityChanges.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelperEntityChanges.showLoadingIndicator();\r\n\r\n        this._auditLogService.getEntityChanges(\r\n            moment(this.dateRange[0]),\r\n            moment(this.dateRange[1]).endOf('day'),\r\n            this.usernameEntityChange,\r\n            this.entityTypeFullName,\r\n            this.primengTableHelperEntityChanges.getSorting(this.dataTableEntityChanges),\r\n            this.primengTableHelperEntityChanges.getMaxResultCount(this.paginatorEntityChanges, event),\r\n            this.primengTableHelperEntityChanges.getSkipCount(this.paginatorEntityChanges, event)\r\n        ).subscribe((result) => {\r\n            this.primengTableHelperEntityChanges.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelperEntityChanges.records = result.items;\r\n            this.primengTableHelperEntityChanges.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    exportToExcelAuditLogs(): void {\r\n        const self = this;\r\n        self._auditLogService.getAuditLogsToExcel(\r\n            moment(self.dateRange[0]),\r\n            moment(self.dateRange[1]).endOf('day'),\r\n            self.usernameAuditLog,\r\n            self.serviceName,\r\n            self.methodName,\r\n            self.browserInfo,\r\n            self.hasException,\r\n            self.minExecutionDuration,\r\n            self.maxExecutionDuration,\r\n            undefined,\r\n            1,\r\n            0)\r\n            .subscribe(result => {\r\n                self._fileDownloadService.downloadTempFile(result);\r\n            });\r\n    }\r\n\r\n    exportToExcelEntityChanges(): void {\r\n        const self = this;\r\n        self._auditLogService.getEntityChangesToExcel(\r\n            moment(self.dateRange[0]),\r\n            moment(self.dateRange[1]).endOf('day'),\r\n            self.usernameEntityChange,\r\n            self.entityTypeFullName,\r\n            undefined,\r\n            1,\r\n            0)\r\n            .subscribe(result => {\r\n                self._fileDownloadService.downloadTempFile(result);\r\n            });\r\n    }\r\n\r\n    truncateStringWithPostfix(text: string, length: number): string {\r\n        return abp.utils.truncateStringWithPostfix(text, length);\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div id=\\\"HostDashboard\\\">\\r\\n        <div class=\\\"m-subheader\\\">\\r\\n            <div class=\\\"row align-items-center\\\">\\r\\n                <div class=\\\"mr-auto col-auto\\\">\\r\\n                    <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                        <span>{{\\\"Dashboard\\\" | localize}}</span>\\r\\n                    </h3>\\r\\n                    <span class=\\\"m-section__sub d-none d-sm-inline-block\\\">\\r\\n                        {{\\\"HostDashboardHeaderInfo\\\" | localize}}\\r\\n                    </span>\\r\\n                </div>\\r\\n                <div class=\\\"col text-right mt-3 mt-md-0 mr-3\\\">\\r\\n                    <button name=\\\"RefreshButton\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getDashboardStatisticsData(selectedDateRange)\\\">\\r\\n                        <i class=\\\"la la-refresh\\\"></i>\\r\\n                        <span class=\\\"d-none d-sm-inline-block\\\">\\r\\n                            {{\\\"Refresh\\\" | localize}}\\r\\n                        </span>\\r\\n                    </button>\\r\\n                    <span #DashboardDateRangePicker class=\\\"m-subheader__daterange dashboard-report-range\\\" (click)=\\\"dateRangePicker.toggle()\\\">\\r\\n                        <span class=\\\"m-subheader__daterange-label d-none d-md-inline-block\\\">\\r\\n                            <span class=\\\"m-subheader__daterange-title\\\"></span>\\r\\n                            <span class=\\\"m-subheader__daterange-date m--font-brand\\\">\\r\\n                                {{selectedDateRange[0] | momentFormat: 'LL'}} - {{selectedDateRange[1] | momentFormat: 'LL'}}\\r\\n                            </span>\\r\\n                        </span>\\r\\n                        <a href=\\\"javascript:;\\\" class=\\\"btn btn-primary m-btn m-btn--icon m-btn--icon-only\\\">\\r\\n                            <i class=\\\"la la-calendar\\\" [attr.aria-label]=\\\"l('Expand')\\\"></i>\\r\\n                        </a>\\r\\n                    </span>\\r\\n                    <input type=\\\"text\\\"\\r\\n                           class=\\\"btn btn-primary date-range-filter\\\"\\r\\n                           #dateRangePicker=\\\"bsDaterangepicker\\\"\\r\\n                           readonly=\\\"readonly\\\"\\r\\n                           [(ngModel)]=\\\"selectedDateRange\\\"\\r\\n                           (bsValueChange)=\\\"getDashboardStatisticsData($event)\\\"\\r\\n                           placement=\\\"left\\\"\\r\\n                           style=\\\"visibility: hidden; margin-left: -220px\\\"\\r\\n                           bsDaterangepicker />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"m-content\\\">\\r\\n            <div class=\\\"m-portlet\\\">\\r\\n                <div class=\\\"m-portlet__body  m-portlet__body--no-padding\\\">\\r\\n                    <div class=\\\"row m-row--no-padding m-row--col-separator-xl\\\">\\r\\n                        <div class=\\\"col-md-12 col-lg-6 col-xl-3\\\">\\r\\n                            <div class=\\\"m-widget24 new-subscription-statistics\\\">\\r\\n                                <div class=\\\"m-widget24__item\\\">\\r\\n                                    <h4 class=\\\"m-widget24__title\\\">\\r\\n                                        {{\\\"NewSubscriptionAmount\\\" | localize}}\\r\\n                                    </h4>\\r\\n                                    <br>\\r\\n                                    <span class=\\\"m-widget24__desc\\\">\\r\\n                                        {{(\\\"Subscriptions\\\")}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"m-widget24__stats m--font-brand\\\">\\r\\n                                        <span *ngIf=\\\"!hostDashboardData\\\">...</span>\\r\\n                                        <span *ngIf=\\\"hostDashboardData\\\" counto [step]=\\\"30\\\" [countTo]=\\\"hostDashboardData.newSubscriptionAmount\\\" [countFrom]=\\\"0\\\" [duration]=\\\"5\\\" (countoChange)=\\\"countoNewSubscriptionAmount = $event\\\">{{countoNewSubscriptionAmount | currency:'USD':'symbol':'1.0-0'}}</span>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"m--space-10\\\"></div>\\r\\n                                    <div class=\\\"progress m-progress--sm\\\">\\r\\n                                        <div class=\\\"progress-bar m--bg-brand\\\" role=\\\"progressbar\\\" style=\\\"width: 100%;\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n                                    </div>\\r\\n                                    <span class=\\\"m-widget24__change\\\">\\r\\n                                        <div class=\\\"status-title\\\">\\r\\n                                            {{selectedDateRange[0] | momentFormat: 'L'}} - {{selectedDateRange[1] | momentFormat: 'L'}}\\r\\n                                        </div>\\r\\n                                    </span>\\r\\n                                    <span class=\\\"m-widget24__number\\\">\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-lg-6 col-xl-3\\\">\\r\\n                            <div class=\\\"m-widget24 new-tenants-statistics\\\">\\r\\n                                <div class=\\\"m-widget24__item\\\">\\r\\n                                    <h4 class=\\\"m-widget24__title\\\">\\r\\n                                        {{\\\"NewTenants\\\" | localize}}\\r\\n                                    </h4>\\r\\n                                    <br>\\r\\n                                    <span class=\\\"m-widget24__desc\\\">\\r\\n                                        {{\\\"Tenants\\\" | localize}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"m-widget24__stats m--font-info\\\">\\r\\n                                        <span *ngIf=\\\"!hostDashboardData\\\">...</span>\\r\\n                                        <span *ngIf=\\\"hostDashboardData\\\" counto [step]=\\\"10\\\" [countTo]=\\\"hostDashboardData.newTenantsCount\\\" [countFrom]=\\\"0\\\" [duration]=\\\"5\\\" (countoChange)=\\\"countoNewTenantsCount = $event\\\">{{countoNewTenantsCount | number:'1.0-0' }}</span>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"m--space-10\\\"></div>\\r\\n                                    <div class=\\\"progress m-progress--sm\\\">\\r\\n                                        <div class=\\\"progress-bar m--bg-info\\\" role=\\\"progressbar\\\" style=\\\"width: 100%;\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n                                    </div>\\r\\n                                    <span class=\\\"m-widget24__change\\\">\\r\\n                                        <div class=\\\"status-title\\\">\\r\\n                                            {{selectedDateRange[0] | momentFormat: 'L'}} - {{selectedDateRange[1] | momentFormat: 'L'}}\\r\\n                                        </div>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-lg-6 col-xl-3\\\">\\r\\n                            <div class=\\\"m-widget24 dashboard-statistics1\\\">\\r\\n                                <div class=\\\"m-widget24__item\\\">\\r\\n                                    <h4 class=\\\"m-widget24__title\\\">\\r\\n                                        {{\\\"DashboardSampleStatistics\\\" | localize}} 1\\r\\n                                    </h4>\\r\\n                                    <br>\\r\\n                                    <span class=\\\"m-widget24__desc\\\">\\r\\n                                        {{\\\"DashboardSampleStatistics\\\" | localize}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"m-widget24__stats m--font-danger\\\">\\r\\n                                        <span *ngIf=\\\"!hostDashboardData\\\">...</span>\\r\\n                                        <span *ngIf=\\\"hostDashboardData\\\" counto [step]=\\\"100\\\" [countTo]=\\\"hostDashboardData.dashboardPlaceholder1\\\" [countFrom]=\\\"0\\\" [duration]=\\\"5\\\" (countoChange)=\\\"countoDashboardPlaceholder1 = $event\\\">{{countoDashboardPlaceholder1 | number:'1.0-0' }}</span>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"m--space-10\\\"></div>\\r\\n                                    <div class=\\\"progress m-progress--sm\\\">\\r\\n                                        <div class=\\\"progress-bar m--bg-danger\\\" role=\\\"progressbar\\\" style=\\\"width: 45%;\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n                                    </div>\\r\\n                                    <span class=\\\"m-widget24__change\\\">\\r\\n                                        {{\\\"DashboardSampleStatisticsHelpText\\\" | localize}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"m-widget24__number\\\">\\r\\n                                        <span class=\\\"counterup\\\">45</span>%\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-lg-6 col-xl-3\\\">\\r\\n                            <div class=\\\"m-widget24 dashboard-statistics2\\\">\\r\\n                                <div class=\\\"m-widget24__item\\\">\\r\\n                                    <h4 class=\\\"m-widget24__title\\\">\\r\\n                                        {{\\\"DashboardSampleStatistics\\\" | localize}} 2\\r\\n                                    </h4>\\r\\n                                    <br>\\r\\n                                    <span class=\\\"m-widget24__desc\\\">\\r\\n                                        {{\\\"DashboardSampleStatistics\\\" | localize}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"m-widget24__stats m--font-success\\\">\\r\\n                                        <span *ngIf=\\\"!hostDashboardData\\\">...</span>\\r\\n                                        <span *ngIf=\\\"hostDashboardData\\\" counto [step]=\\\"100\\\" [countTo]=\\\"hostDashboardData.dashboardPlaceholder2\\\" [countFrom]=\\\"0\\\" [duration]=\\\"5\\\" (countoChange)=\\\"countoDashboardPlaceholder2 = $event\\\">{{countoDashboardPlaceholder2 | number:'1.0-0' }}</span>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"m--space-10\\\"></div>\\r\\n                                    <div class=\\\"progress m-progress--sm\\\">\\r\\n                                        <div class=\\\"progress-bar m--bg-success\\\" role=\\\"progressbar\\\" style=\\\"width: 65%;\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n                                    </div>\\r\\n                                    <span class=\\\"m-widget24__change\\\">\\r\\n                                        {{\\\"DashboardSampleStatisticsHelpText\\\" | localize}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"m-widget24__number\\\">\\r\\n                                        <span class=\\\"counterup\\\">65</span>%\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n                    <div class=\\\"m-portlet m-portlet--full-height income-statistics\\\" style=\\\"max-height: 383px; height: 383px;\\\">\\r\\n                        <div class=\\\"m-portlet__head\\\">\\r\\n                            <div class=\\\"m-portlet__head-caption\\\">\\r\\n                                <div class=\\\"m-portlet__head-title\\\">\\r\\n                                    <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                                        <i class=\\\"la la-line-chart m--font-info\\\"></i>\\r\\n                                        <span class=\\\"caption-subject font-blue bold uppercase\\\">{{\\\"IncomeStatistics\\\" | localize}}</span>\\r\\n                                        <small class=\\\"d-none d-sm-inline-block\\\">\\r\\n                                            <span class=\\\"caption-helper\\\">\\r\\n                                                {{selectedDateRange[0] | momentFormat: 'L'}} - {{selectedDateRange[1] | momentFormat: 'L'}}\\r\\n                                            </span>\\r\\n                                        </small>\\r\\n                                    </h3>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"m-portlet__head-tools\\\">\\r\\n                                <div class=\\\"btn-group btn-group-devided\\\" data-toggle=\\\"buttons\\\">\\r\\n                                    <label class=\\\"btn m-btn--pill btn-secondary\\\" [ngClass]=\\\"{'active': selectedIncomeStatisticsDateInterval ==  appIncomeStatisticsDateInterval.Daily}\\\" (click)=\\\"incomeStatisticsDateIntervalChange(appIncomeStatisticsDateInterval.Daily)\\\">\\r\\n                                        <input type=\\\"radio\\\"\\r\\n                                               name=\\\"IncomeStatisticsDatePeriod\\\"\\r\\n                                               class=\\\"toggle\\\"\\r\\n                                               [value]=\\\"appIncomeStatisticsDateInterval.Daily\\\">\\r\\n                                        {{\\\"Daily\\\" | localize}}\\r\\n                                    </label>\\r\\n                                    <label class=\\\"btn m-btn--pill btn-secondary\\\" [ngClass]=\\\"{'active': selectedIncomeStatisticsDateInterval ==  appIncomeStatisticsDateInterval.Weekly}\\\" (click)=\\\"incomeStatisticsDateIntervalChange(appIncomeStatisticsDateInterval.Weekly)\\\">\\r\\n                                        <input type=\\\"radio\\\"\\r\\n                                               name=\\\"IncomeStatisticsDatePeriod\\\"\\r\\n                                               class=\\\"toggle\\\"\\r\\n                                               [value]=\\\"appIncomeStatisticsDateInterval.Weekly\\\">\\r\\n                                        {{\\\"Weekly\\\" | localize}}\\r\\n                                    </label>\\r\\n                                    <label class=\\\"btn m-btn--pill btn-secondary\\\" [ngClass]=\\\"{'active': selectedIncomeStatisticsDateInterval ==  appIncomeStatisticsDateInterval.Monthly}\\\" (click)=\\\"incomeStatisticsDateIntervalChange(appIncomeStatisticsDateInterval.Monthly)\\\">\\r\\n                                        <input type=\\\"radio\\\"\\r\\n                                               name=\\\"IncomeStatisticsDatePeriod\\\"\\r\\n                                               class=\\\"toggle\\\"\\r\\n                                               [value]=\\\"appIncomeStatisticsDateInterval.Monthly\\\">\\r\\n                                        {{\\\"Monthly\\\" | localize}}\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"m-portlet__body\\\">\\r\\n                            <ngx-charts-area-chart *ngIf=\\\"incomeStatisticsHasData\\\" [busyIf]=\\\"loadingIncomeStatistics\\\" [results]=\\\"incomeStatisticsData\\\"\\r\\n                                                   [showXAxisLabel]=\\\"true\\\" showYAxisLabel=\\\"true\\\" [xAxis]=\\\"true\\\" [yAxis]=\\\"true\\\" [showGridLines]=\\\"true\\\">\\r\\n                                <ng-template #tooltipTemplate let-model=\\\"model\\\">\\r\\n                                    <span>{{model.name}}</span>\\r\\n                                    <br />\\r\\n                                    <span>{{'IncomeWithAmount' | localize:model.value + ' ' + currency}}</span>\\r\\n                                </ng-template>\\r\\n                            </ngx-charts-area-chart>\\r\\n                            <div class=\\\"note note-info text-center chart\\\"\\r\\n                                 [hidden]=\\\"incomeStatisticsHasData\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{\\\"NoData\\\" | localize}}</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n                    <div class=\\\"m-portlet m-portlet--full-height edition-statistics\\\" style=\\\"max-height: 383px; height: 383px;\\\">\\r\\n                        <div class=\\\"m-portlet__head\\\">\\r\\n                            <div class=\\\"m-portlet__head-caption\\\">\\r\\n                                <div class=\\\"m-portlet__head-title\\\">\\r\\n                                    <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                                        <i class=\\\"la la-pie-chart m--font-success\\\"></i>\\r\\n                                        <span class=\\\"caption-subject font-green-seagreen\\\">{{\\\"EditionStatistics\\\" | localize}}</span>\\r\\n                                        <small>\\r\\n                                            <span class=\\\"caption-helper\\\">\\r\\n                                                {{selectedDateRange[0] | momentFormat: 'L'}} - {{selectedDateRange[1] | momentFormat: 'L'}}\\r\\n                                            </span>\\r\\n                                        </small>\\r\\n                                    </h3>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"m-portlet__body\\\">\\r\\n                            <ngx-charts-pie-chart *ngIf=\\\"editionStatisticsHasData\\\" [results]=\\\"editionStatisticsData\\\" [legend]=\\\"true\\\" [doughnut]=\\\"true\\\" [arcWidth]=\\\"0.75\\\">\\r\\n                            </ngx-charts-pie-chart>\\r\\n                            <div class=\\\"note note-info text-center text-muted \\\"\\r\\n                                 [hidden]=\\\"editionStatisticsHasData\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{\\\"NoData\\\" | localize}}</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n                    <div class=\\\"m-portlet m-portlet--full-height expiring-tenants\\\">\\r\\n                        <div class=\\\"m-portlet__head\\\">\\r\\n                            <div class=\\\"m-portlet__head-caption\\\">\\r\\n                                <div class=\\\"m-portlet__head-title\\\">\\r\\n                                    <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                                        <i class=\\\"icon-graduation font-red-pink\\\"></i>\\r\\n                                        <span class=\\\"caption-subject font-red-pink bold uppercase\\\">{{\\\"SubscriptionExpiringTenants\\\" | localize}}</span><br />\\r\\n                                        <small>\\r\\n                                            <span class=\\\"caption-helper\\\" *ngIf=\\\"hostDashboardData\\\">\\r\\n                                                {{\\\"ExpiringTenantsHelpText\\\" | localize:hostDashboardData.subscriptionEndAlertDayCount : hostDashboardData.maxExpiringTenantsShownCount}}\\r\\n                                            </span>\\r\\n                                        </small>\\r\\n                                    </h3>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"m-portlet__body\\\">\\r\\n                            <div class=\\\"scroller chart m-scrollable\\\" data-always-visible=\\\"1\\\" data-rail-visible=\\\"0\\\" data-scrollable=\\\"true\\\">\\r\\n                                <div class=\\\"primeng-datatable-container expiring-tenants-table\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                                    <p-table #ExpiringTenantsTable\\r\\n                                             [value]=\\\"expiringTenantsData\\\"\\r\\n                                             rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                             [paginator]=\\\"false\\\"\\r\\n                                             [lazy]=\\\"false\\\"\\r\\n                                             [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                                        <ng-template pTemplate=\\\"header\\\">\\r\\n                                            <tr>\\r\\n                                                <th>{{'TenantName' | localize}}</th>\\r\\n                                                <th>{{'RemainingDay' | localize}}</th>\\r\\n                                            </tr>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <span class=\\\"ui-column-title\\\">{{'TenantName' | localize}}</span>\\r\\n                                                    {{record.tenantName}}\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span class=\\\"ui-column-title\\\">{{'RemainingDay' | localize}}</span>\\r\\n                                                    {{record.remainingDayCount}}\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </ng-template>\\r\\n                                    </p-table>\\r\\n                                    <div class=\\\"primeng-no-data\\\" *ngIf=\\\"expiringTenantsData.length == 0\\\">\\r\\n                                        {{'NoData' | localize}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"scroller-footer\\\">\\r\\n                                <div class=\\\"btn-arrow-link pull-right\\\">\\r\\n                                    <a href=\\\"javascript:;\\\" class=\\\"see-all-expiring-tenants\\\" (click)=\\\"gotoAllExpiringTenants()\\\">{{\\\"SeeAllRecords\\\" | localize}}</a>\\r\\n                                    <i class=\\\"icon-arrow-right\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n                    <div class=\\\"m-portlet m-portlet--full-height recent-tenants\\\">\\r\\n                        <div class=\\\"m-portlet__head\\\">\\r\\n                            <div class=\\\"m-portlet__head-caption\\\">\\r\\n                                <div class=\\\"m-portlet__head-title\\\">\\r\\n                                    <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                                        <i class=\\\"icon-user-follow font-purple-soft\\\"></i>\\r\\n                                        <span class=\\\"caption-subject font-purple-soft\\\">{{\\\"RecentTenants\\\" | localize}}</span><br />\\r\\n                                        <small>\\r\\n                                            <span class=\\\"caption-helper\\\" *ngIf=\\\"hostDashboardData\\\">\\r\\n                                                {{\\\"RecentTenantsHelpText\\\" | localize:hostDashboardData.recentTenantsDayCount : hostDashboardData.maxRecentTenantsShownCount}}\\r\\n                                            </span>\\r\\n                                        </small>\\r\\n                                    </h3>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"m-portlet__body\\\">\\r\\n                            <div class=\\\"scroller chart m-scrollable\\\" data-always-visible=\\\"1\\\" data-rail-visible=\\\"0\\\" data-scrollable=\\\"true\\\">\\r\\n                                <div class=\\\"primeng-datatable-container recent-tenants-table\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                                    <p-table #RecentTenantsTable\\r\\n                                             [value]=\\\"recentTenantsData\\\"\\r\\n                                             rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                             [paginator]=\\\"false\\\"\\r\\n                                             [lazy]=\\\"false\\\"\\r\\n                                             [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                                        <ng-template pTemplate=\\\"header\\\">\\r\\n                                            <tr>\\r\\n                                                <th>{{'TenantName' | localize}}</th>\\r\\n                                                <th>{{'CreationTime' | localize}}</th>\\r\\n                                            </tr>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <span class=\\\"ui-column-title\\\">{{'TenantName' | localize}}</span>\\r\\n                                                    {{record.name}}\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span class=\\\"ui-column-title\\\">{{'CreationTime' | localize}}</span>\\r\\n                                                    {{ record.creationTime | momentFormat:'L LT'}}\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </ng-template>\\r\\n                                    </p-table>\\r\\n                                    <div class=\\\"primeng-no-data\\\" *ngIf=\\\"recentTenantsData.length == 0\\\">\\r\\n                                        {{'NoData' | localize}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"scroller-footer\\\">\\r\\n                                <div class=\\\"btn-arrow-link pull-right\\\">\\r\\n                                    <a href=\\\"javascript:;\\\" class=\\\"see-all-recent-tenants\\\" (click)=\\\"gotoAllRecentTenants()\\\">{{\\\"SeeAllRecords\\\" | localize}}</a>\\r\\n                                    <i class=\\\"icon-arrow-right\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"#HostDashboard div.chart {\\n  height: 260px;\\n  width: 100%;\\n}\\n#HostDashboard div.chart h3 small {\\n  padding-left: 0px !important;\\n}\\n#HostDashboard .expiring-tenants-table thead th {\\n  background-color: #E08283 !important;\\n  color: white;\\n}\\n#HostDashboard .recent-tenants-table thead th {\\n  background-color: #8877a9 !important;\\n  color: white;\\n}\\n#HostDashboard .expiring-tenants-table {\\n  color: green;\\n}\\n#HostDashboard div.pie-chart-label {\\n  border: 1px solid grey;\\n  font-size: 8pt;\\n  text-align: center;\\n  padding: 5px;\\n  color: white;\\n}\\n#HostDashboard div.portlet div.portlet-title div.caption div.caption-helper {\\n  margin-top: 5px;\\n}\\n#HostDashboard div.portlet div.portlet-title div.actions {\\n  padding: 0;\\n}\\n#HostDashboard div.portlet div.portlet-body {\\n  min-height: 330px;\\n}\\n#HostDashboard div.flot-x-axis > div {\\n  white-space: nowrap;\\n  transform: translate(0px, 0) rotate(-25deg);\\n  text-indent: -6%;\\n  transform-origin: bottom;\\n}\\n#HostDashboard input[type=\\\"radio\\\"] {\\n  display: none;\\n}\\n#HostDashboard .portlet > .portlet-title > .caption > .caption-helper {\\n  font-size: 11px;\\n}\\n#HostDashboard .m-subheader .m-subheader__daterange > .btn > i {\\n  font-size: 22px !important;\\n}\\n#HostDashboard .m-subheader .m-subheader__daterange .m-subheader__daterange-label {\\n  padding: 0rem 0.75rem 0rem 0.75rem !important;\\n}\\n@media (max-width: 768px) {\\n  #HostDashboard .m-subheader .m-subheader__daterange {\\n    padding: 0px !important;\\n  }\\n  #HostDashboard .m-subheader__daterange.dashboard-report-range a.btn-primary {\\n    padding: 19px !important;\\n  }\\n}\\nbs-daterangepicker-container {\\n  top: 130px !important;\\n  margin-left: 220px !important;\\n}\\n.income-statistics svg.ngx-charts {\\n  margin-left: -40px;\\n  margin-top: -20px;\\n}\\n.edition-statistics svg.ngx-charts {\\n  margin-left: -40px;\\n  margin-top: -30px;\\n}\\n.dashboard-report-range {\\n  margin-left: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL0Q6L0RyaW1hIEFzcE5ldFplcm8vYW5ndWxhci9zcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9ob3N0LWRhc2hib2FyZC5jb21wb25lbnQubGVzcyIsInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2hvc3QtZGFzaGJvYXJkLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBSVEsYUFBQTtFQUNBLFdBQUE7QUNGUjtBREhBO0VBU2dCLDRCQUFBO0FDSGhCO0FETkE7RUFnQlksb0NBQUE7RUFDQSxZQUFBO0FDUFo7QURWQTtFQWdCWSxvQ0FBQTtFQUNBLFlBQUE7QUNIWjtBRGRBO0VBOEJRLFlBQUE7QUNiUjtBRGpCQTtFQWtDUSxzQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FDZFI7QUR4QkE7RUE2Q29CLGVBQUE7QUNsQnBCO0FEM0JBO0VBa0RnQixVQUFBO0FDcEJoQjtBRDlCQTtFQXVEWSxpQkFBQTtBQ3RCWjtBRGpDQTtFQTREUSxtQkFBQTtFQUNBLDJDQUFBO0VBQ0EsZ0JBQUE7RUFDQSx3QkFBQTtBQ3hCUjtBRHZDQTtFQW1FUSxhQUFBO0FDekJSO0FEMUNBO0VBdUVRLGVBQUE7QUMxQlI7QUQ3Q0E7RUEyRVEsMEJBQUE7QUMzQlI7QURoREE7RUErRVEsNkNBQUE7QUM1QlI7QUQrQkk7RUFBQTtJQUVRLHVCQUFBO0VDN0JWO0VEMkJFO0lBT1ksd0JBQUE7RUMvQmQ7QUFDRjtBRG9DQTtFQUNJLHFCQUFBO0VBQ0EsNkJBQUE7QUNsQ0o7QURxQ0E7RUFFUSxrQkFBQTtFQUNBLGlCQUFBO0FDcENSO0FEd0NBO0VBRVEsa0JBQUE7RUFDQSxpQkFBQTtBQ3ZDUjtBRDJDQTtFQUNJLGdCQUFBO0FDekNKIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2hvc3QtZGFzaGJvYXJkLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiI0hvc3REYXNoYm9hcmQge1xuICAgIEBjaGFydEhlaWdodDogMjYwO1xuXG4gICAgZGl2LmNoYXJ0IHtcbiAgICAgICAgaGVpZ2h0OiBAY2hhcnRIZWlnaHQqMXB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICBoMyB7XG4gICAgICAgICAgICBzbWFsbCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHggIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5wcmltZU5nRGF0YVRhYmxlVGhlbWUoQGJhY2tncm91bmRDb2xvcikge1xuICAgICAgICB0aGVhZCB0aCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAYmFja2dyb3VuZENvbG9yICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuZXhwaXJpbmctdGVuYW50cy10YWJsZSB7XG4gICAgICAgIC5wcmltZU5nRGF0YVRhYmxlVGhlbWUoI0UwODI4Myk7XG4gICAgfVxuXG4gICAgLnJlY2VudC10ZW5hbnRzLXRhYmxlIHtcbiAgICAgICAgLnByaW1lTmdEYXRhVGFibGVUaGVtZSgjODg3N2E5KTtcbiAgICB9XG5cbiAgICAuZXhwaXJpbmctdGVuYW50cy10YWJsZSB7XG4gICAgICAgIGNvbG9yOiBncmVlblxuICAgIH1cblxuICAgIGRpdi5waWUtY2hhcnQtbGFiZWwge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xuICAgICAgICBmb250LXNpemU6IDhwdDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG5cbiAgICBkaXYucG9ydGxldCB7XG4gICAgICAgIGRpdi5wb3J0bGV0LXRpdGxlIHtcbiAgICAgICAgICAgIGRpdi5jYXB0aW9uIHtcbiAgICAgICAgICAgICAgICBkaXYuY2FwdGlvbi1oZWxwZXIge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBkaXYuYWN0aW9ucyB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGRpdi5wb3J0bGV0LWJvZHkge1xuICAgICAgICAgICAgbWluLWhlaWdodDogKEBjaGFydEhlaWdodCArIDcwKSoxcHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXYuZmxvdC14LWF4aXMgPiBkaXYge1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsIDApIHJvdGF0ZSgtMjVkZWcpO1xuICAgICAgICB0ZXh0LWluZGVudDogLTYlO1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAucG9ydGxldCA+IC5wb3J0bGV0LXRpdGxlID4gLmNhcHRpb24gPiAuY2FwdGlvbi1oZWxwZXIge1xuICAgICAgICBmb250LXNpemU6IDExcHg7XG4gICAgfVxuXG4gICAgLm0tc3ViaGVhZGVyIC5tLXN1YmhlYWRlcl9fZGF0ZXJhbmdlID4gLmJ0biA+IGkge1xuICAgICAgICBmb250LXNpemU6IDIycHggIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAubS1zdWJoZWFkZXIgLm0tc3ViaGVhZGVyX19kYXRlcmFuZ2UgLm0tc3ViaGVhZGVyX19kYXRlcmFuZ2UtbGFiZWwge1xuICAgICAgICBwYWRkaW5nOiAwcmVtIDAuNzVyZW0gMC4wcmVtIDAuNzVyZW0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLm0tc3ViaGVhZGVyIC5tLXN1YmhlYWRlcl9fZGF0ZXJhbmdlIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG5cbiAgICAgICAgLm0tc3ViaGVhZGVyX19kYXRlcmFuZ2UuZGFzaGJvYXJkLXJlcG9ydC1yYW5nZSB7XG4gICAgICAgICAgICBhLmJ0bi1wcmltYXJ5IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxOXB4ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmJzLWRhdGVyYW5nZXBpY2tlci1jb250YWluZXIge1xuICAgIHRvcDogMTMwcHggIWltcG9ydGFudDtcbiAgICBtYXJnaW4tbGVmdDogMjIwcHggIWltcG9ydGFudDtcbn1cblxuLmluY29tZS1zdGF0aXN0aWNzIHtcbiAgICBzdmcubmd4LWNoYXJ0cyB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtNDBweDtcbiAgICAgICAgbWFyZ2luLXRvcDogLTIwcHg7XG4gICAgfVxufVxuXG4uZWRpdGlvbi1zdGF0aXN0aWNzIHtcbiAgICBzdmcubmd4LWNoYXJ0cyB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtNDBweDtcbiAgICAgICAgbWFyZ2luLXRvcDogLTMwcHg7XG4gICAgfVxufVxuXG4uZGFzaGJvYXJkLXJlcG9ydC1yYW5nZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbn1cbiIsIiNIb3N0RGFzaGJvYXJkIGRpdi5jaGFydCB7XG4gIGhlaWdodDogMjYwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuI0hvc3REYXNoYm9hcmQgZGl2LmNoYXJ0IGgzIHNtYWxsIHtcbiAgcGFkZGluZy1sZWZ0OiAwcHggIWltcG9ydGFudDtcbn1cbiNIb3N0RGFzaGJvYXJkIC5leHBpcmluZy10ZW5hbnRzLXRhYmxlIHRoZWFkIHRoIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0UwODI4MyAhaW1wb3J0YW50O1xuICBjb2xvcjogd2hpdGU7XG59XG4jSG9zdERhc2hib2FyZCAucmVjZW50LXRlbmFudHMtdGFibGUgdGhlYWQgdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODg3N2E5ICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiNIb3N0RGFzaGJvYXJkIC5leHBpcmluZy10ZW5hbnRzLXRhYmxlIHtcbiAgY29sb3I6IGdyZWVuO1xufVxuI0hvc3REYXNoYm9hcmQgZGl2LnBpZS1jaGFydC1sYWJlbCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XG4gIGZvbnQtc2l6ZTogOHB0O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDVweDtcbiAgY29sb3I6IHdoaXRlO1xufVxuI0hvc3REYXNoYm9hcmQgZGl2LnBvcnRsZXQgZGl2LnBvcnRsZXQtdGl0bGUgZGl2LmNhcHRpb24gZGl2LmNhcHRpb24taGVscGVyIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuI0hvc3REYXNoYm9hcmQgZGl2LnBvcnRsZXQgZGl2LnBvcnRsZXQtdGl0bGUgZGl2LmFjdGlvbnMge1xuICBwYWRkaW5nOiAwO1xufVxuI0hvc3REYXNoYm9hcmQgZGl2LnBvcnRsZXQgZGl2LnBvcnRsZXQtYm9keSB7XG4gIG1pbi1oZWlnaHQ6IDMzMHB4O1xufVxuI0hvc3REYXNoYm9hcmQgZGl2LmZsb3QteC1heGlzID4gZGl2IHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCAwKSByb3RhdGUoLTI1ZGVnKTtcbiAgdGV4dC1pbmRlbnQ6IC02JTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tO1xufVxuI0hvc3REYXNoYm9hcmQgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiNIb3N0RGFzaGJvYXJkIC5wb3J0bGV0ID4gLnBvcnRsZXQtdGl0bGUgPiAuY2FwdGlvbiA+IC5jYXB0aW9uLWhlbHBlciB7XG4gIGZvbnQtc2l6ZTogMTFweDtcbn1cbiNIb3N0RGFzaGJvYXJkIC5tLXN1YmhlYWRlciAubS1zdWJoZWFkZXJfX2RhdGVyYW5nZSA+IC5idG4gPiBpIHtcbiAgZm9udC1zaXplOiAyMnB4ICFpbXBvcnRhbnQ7XG59XG4jSG9zdERhc2hib2FyZCAubS1zdWJoZWFkZXIgLm0tc3ViaGVhZGVyX19kYXRlcmFuZ2UgLm0tc3ViaGVhZGVyX19kYXRlcmFuZ2UtbGFiZWwge1xuICBwYWRkaW5nOiAwcmVtIDAuNzVyZW0gMHJlbSAwLjc1cmVtICFpbXBvcnRhbnQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgI0hvc3REYXNoYm9hcmQgLm0tc3ViaGVhZGVyIC5tLXN1YmhlYWRlcl9fZGF0ZXJhbmdlIHtcbiAgICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcbiAgfVxuICAjSG9zdERhc2hib2FyZCAubS1zdWJoZWFkZXJfX2RhdGVyYW5nZS5kYXNoYm9hcmQtcmVwb3J0LXJhbmdlIGEuYnRuLXByaW1hcnkge1xuICAgIHBhZGRpbmc6IDE5cHggIWltcG9ydGFudDtcbiAgfVxufVxuYnMtZGF0ZXJhbmdlcGlja2VyLWNvbnRhaW5lciB7XG4gIHRvcDogMTMwcHggIWltcG9ydGFudDtcbiAgbWFyZ2luLWxlZnQ6IDIyMHB4ICFpbXBvcnRhbnQ7XG59XG4uaW5jb21lLXN0YXRpc3RpY3Mgc3ZnLm5neC1jaGFydHMge1xuICBtYXJnaW4tbGVmdDogLTQwcHg7XG4gIG1hcmdpbi10b3A6IC0yMHB4O1xufVxuLmVkaXRpb24tc3RhdGlzdGljcyBzdmcubmd4LWNoYXJ0cyB7XG4gIG1hcmdpbi1sZWZ0OiAtNDBweDtcbiAgbWFyZ2luLXRvcDogLTMwcHg7XG59XG4uZGFzaGJvYXJkLXJlcG9ydC1yYW5nZSB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG4iXX0= */\"","import { Component, ElementRef, Injector, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { HostDashboardData, HostDashboardServiceProxy, ChartDateInterval } from '@shared/service-proxies/service-proxies';\r\nimport * as moment from 'moment';\r\nimport * as _ from 'lodash';\r\nimport { Table } from 'primeng/components/table/table';\r\n\r\n@Component({\r\n    templateUrl: './host-dashboard.component.html',\r\n    styleUrls: ['./host-dashboard.component.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class HostDashboardComponent extends AppComponentBase implements OnInit {\r\n    @ViewChild('EditionStatisticsChart') editionStatisticsChart: ElementRef;\r\n    @ViewChild('IncomeStatisticsChart') incomeStatisticsChart: ElementRef;\r\n\r\n    @ViewChild('RecentTenantsTable') recentTenantsTable: Table;\r\n    @ViewChild('ExpiringTenantsTable') expiringTenantsTable: Table;\r\n\r\n    loading = false;\r\n    loadingIncomeStatistics = false;\r\n    isInitialized: boolean;\r\n    hostDashboardData: HostDashboardData;\r\n    currency = '$';\r\n    appIncomeStatisticsDateInterval = ChartDateInterval;\r\n    selectedIncomeStatisticsDateInterval: number;\r\n\r\n    editionStatisticsHasData = false;\r\n    incomeStatisticsHasData = false;\r\n\r\n    incomeStatisticsData: any = [];\r\n    editionStatisticsData: any = [];\r\n\r\n    selectedDateRange: Date[] = [moment().add(-7, 'days').startOf('day').toDate(), moment().endOf('day').toDate()];\r\n\r\n    expiringTenantsData = [];\r\n    recentTenantsData = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _hostDashboardService: HostDashboardServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    init(): void {\r\n        this.selectedIncomeStatisticsDateInterval = ChartDateInterval.Daily;\r\n        this.getDashboardStatisticsData(this.selectedDateRange);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.init();\r\n    }\r\n\r\n    getDashboardStatisticsData(dates: any): void {\r\n\r\n        if (!dates || !dates[0] || !dates[1]) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this._hostDashboardService\r\n            .getDashboardStatisticsData(\r\n                this.selectedIncomeStatisticsDateInterval,\r\n                dates[0],\r\n                dates[1]\r\n            )\r\n            .subscribe(result => {\r\n                this.hostDashboardData = result;\r\n\r\n                this.incomeStatisticsData = this.normalizeIncomeStatisticsData(result.incomeStatistics);\r\n                this.incomeStatisticsHasData = _.filter(this.incomeStatisticsData[0].series, data => data.value > 0).length > 0;\r\n\r\n                this.editionStatisticsData = this.normalizeEditionStatisticsData(result.editionStatistics);\r\n                this.editionStatisticsHasData = _.filter(this.editionStatisticsData, data => data.value > 0).length > 0;\r\n\r\n                this.recentTenantsData = result.recentTenants;\r\n                this.expiringTenantsData = result.expiringTenants;\r\n\r\n                this.loading = false;\r\n            });\r\n    }\r\n\r\n    /*\r\n    * Edition statistics pie chart\r\n    */\r\n\r\n    normalizeEditionStatisticsData(data): Array<any> {\r\n        const chartData = new Array(data.length);\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            chartData[i] = {\r\n                name: data[i].label,\r\n                value: data[i].value\r\n            };\r\n        }\r\n\r\n        return chartData;\r\n    }\r\n\r\n    /*\r\n     * Income statistics line chart\r\n     */\r\n\r\n\r\n    normalizeIncomeStatisticsData(data): any {\r\n        const chartData = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            chartData.push({\r\n                'name': moment(moment(data[i].date).utc().valueOf()).format('L'),\r\n                'value': data[i].amount\r\n            });\r\n        }\r\n\r\n        return [{\r\n            name: '',\r\n            series: chartData\r\n        }];\r\n    }\r\n\r\n    incomeStatisticsDateIntervalChange(interval: number) {\r\n        this.selectedIncomeStatisticsDateInterval = interval;\r\n        this.refreshIncomeStatisticsData();\r\n    }\r\n\r\n    refreshIncomeStatisticsData(): void {\r\n        this.loadingIncomeStatistics = true;\r\n        this._hostDashboardService.getIncomeStatistics(\r\n            this.selectedIncomeStatisticsDateInterval,\r\n            moment(this.selectedDateRange[0]),\r\n            moment(this.selectedDateRange[1]))\r\n            .subscribe(result => {\r\n                this.incomeStatisticsData = this.normalizeIncomeStatisticsData(result.incomeStatistics);\r\n                this.incomeStatisticsHasData = _.filter(this.incomeStatisticsData[0].series, data => data.value > 0).length > 0;\r\n                this.loadingIncomeStatistics = false;\r\n            });\r\n    }\r\n\r\n    gotoAllRecentTenants(): void {\r\n        window.open(abp.appPath + 'app/admin/tenants?' +\r\n            'creationDateStart=' + encodeURIComponent(this.hostDashboardData.tenantCreationStartDate.format()));\r\n    }\r\n\r\n    gotoAllExpiringTenants(): void {\r\n        const url = abp.appPath +\r\n            'app/admin/tenants?' +\r\n            'subscriptionEndDateStart=' +\r\n            encodeURIComponent(this.hostDashboardData.subscriptionEndDateStart.format()) +\r\n            '&' +\r\n            'subscriptionEndDateEnd=' +\r\n            encodeURIComponent(this.hostDashboardData.subscriptionEndDateEnd.format());\r\n\r\n        window.open(url);\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title\\\">\\r\\n                    <span>{{\\\"DemoUiComponents\\\" | localize}}</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"col-lg-12 alert alert-success\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\"></button>\\r\\n            {{\\\"DemoUiComponents_Info\\\" | localize}}<br />\\r\\n            <a href=\\\"https://keenthemes.com/metronic/\\\" class=\\\"alert-link\\\" target=\\\"_blank\\\">{{\\\"DemoUiComponents_Info_Metronic_Link_Text\\\" | localize}}</a>\\r\\n        </div>   \\r\\n    \\r\\n        <demo-ui-date-time #demoUiDateTime></demo-ui-date-time>\\r\\n\\r\\n        <demo-ui-file-upload #demoUiFileUpload></demo-ui-file-upload>\\r\\n\\r\\n        <demo-ui-selection #demoUiSelection></demo-ui-selection>\\r\\n\\r\\n        <demo-ui-input-mask #demoUiInputMask></demo-ui-input-mask>\\r\\n\\r\\n        <demo-ui-editor #demoUiEditor></demo-ui-editor>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, Injector } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    templateUrl: './demo-ui-components.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class DemoUiComponentsComponent extends AppComponentBase {\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n            <div class=\\\"m-portlet__head-title\\\">\\r\\n                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                    {{\\\"DateAndTimePickers\\\" | localize}}\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-portlet__body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n\\r\\n            <div class=\\\"form-group m-form__group row\\\">\\r\\n                <label for=\\\"SampleDatePicker\\\" class=\\\"col-md-12\\\">Default date picker</label>\\r\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\r\\n                    <input id=\\\"SampleDatePicker\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           #SampleDatePicker\\r\\n                           name=\\\"SampleDatePicker\\\"\\r\\n                           class=\\\"form-control\\\"\\r\\n                           [(ngModel)]=\\\"sampleDate\\\"\\r\\n                           bsDatepicker>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitDate()\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group m-form__group row\\\">\\r\\n                <label for=\\\"SampleDateRangePicker\\\" class=\\\"col-md-12\\\">Default daterange picker</label>\\r\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\r\\n                    <input name=\\\"SampleDateRangePicker\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           class=\\\"form-control\\\"\\r\\n                           id=\\\"SampleDateRangePicker\\\"\\r\\n                           bsDaterangepicker\\r\\n                           [(ngModel)]=\\\"sampleDateRange\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitDateRange()\\\" type=\\\"button\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, Injector, ViewChild } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'demo-ui-date-time',\r\n    templateUrl: './demo-ui-date-time.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiDateTimeComponent extends AppComponentBase {\r\n\r\n    @ViewChild('SampleDatePicker') sampleDatePicker: ElementRef;\r\n    @ViewChild('SampleDateTimePicker') sampleDateTimePicker: ElementRef;\r\n\r\n    sampleDate: moment.Moment;\r\n    sampleDateRange: moment.Moment[] = [moment().add(-7, 'days').endOf('day'), moment().startOf('day')];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    // default date picker - post\r\n    submitDate(): void {\r\n        this.demoUiComponentsService.sendAndGetDate(this.sampleDate)\r\n            .subscribe(data => {\r\n                this.message.info(data.dateString, this.l('PostedValue'));\r\n            });\r\n    }\r\n\r\n    // default date range picker - post\r\n    submitDateRange(): void {\r\n        this.demoUiComponentsService.sendAndGetDateRange(this.sampleDateRange[0], this.sampleDateRange[1])\r\n            .subscribe(data => {\r\n                this.message.info(data.dateString, this.l('PostedValue'));\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n            <div class=\\\"m-portlet__head-title\\\">\\r\\n                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                    Editor\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <form class=\\\"m-form m-form--fit m-form--label-align-right\\\">\\r\\n        <div class=\\\"m-portlet__body\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <p-editor [(ngModel)]=\\\"htmlEditorInput\\\" name=\\\"HtmlEditorInput\\\" [style]=\\\"{'height':'300px'}\\\"></p-editor>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"m-portlet__foot m-portlet__foot--fit\\\">\\r\\n            <div class=\\\"m-form__actions\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"submitValue()\\\" type=\\\"button\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"","import { Component, Injector } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    selector: 'demo-ui-editor',\r\n    templateUrl: './demo-ui-editor.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiEditorComponent extends AppComponentBase {\r\n\r\n    htmlEditorInput: string;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    // input mask - post\r\n    submitValue(): void {\r\n\r\n        this.demoUiComponentsService.sendAndGetValue(this.htmlEditorInput)\r\n            .subscribe(data => {\r\n                this.message.info(data.output, this.l('PostedValue'), true);\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n            <div class=\\\"m-portlet__head-title\\\">\\r\\n                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                    {{\\\"FileUpload\\\" | localize}}\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-portlet__body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"DefaultFileUploadFileInput\\\" class=\\\"control-label\\\">Default file uploader</label>\\r\\n                <p-fileUpload multiple=\\\"multiple\\\"\\r\\n                              id=\\\"DefaultFileUploadFileInput\\\"\\r\\n                              name=\\\"DefaultFileUploadFileInput[]\\\"\\r\\n                              [url]=\\\"uploadUrl\\\"\\r\\n                              accept=\\\"image/*\\\"\\r\\n                              maxFileSize=\\\"1000000\\\"\\r\\n                              (onUpload)=\\\"onUpload($event)\\\"\\r\\n                              (onBeforeSend)=\\\"onBeforeSend($event)\\\">\\r\\n\\r\\n                    <ng-template pTemplate=\\\"content\\\">\\r\\n                        <ul *ngIf=\\\"uploadedFiles.length\\\">\\r\\n                            <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\r\\n                        </ul>\\r\\n                    </ng-template>\\r\\n                </p-fileUpload>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector } from '@angular/core';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    selector: 'demo-ui-file-upload',\r\n    templateUrl: './demo-ui-file-upload.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiFileUploadComponent extends AppComponentBase {\r\n\r\n    uploadUrl: string;\r\n    uploadedFiles: any[] = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n        this.uploadUrl = AppConsts.remoteServiceBaseUrl + '/DemoUiComponents/UploadFiles';\r\n    }\r\n\r\n    // upload completed event\r\n    onUpload(event): void {\r\n        for (const file of event.files) {\r\n            this.uploadedFiles.push(file);\r\n        }\r\n    }\r\n\r\n    onBeforeSend(event): void {\r\n        event.xhr.setRequestHeader('Authorization', 'Bearer ' + abp.auth.getToken());\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n            <div class=\\\"m-portlet__head-title\\\">\\r\\n                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                    Input Mask\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-portlet__body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n\\r\\n            <div class=\\\"form-group m-form__group row\\\">\\r\\n                <label for=\\\"DateInputMask\\\" class=\\\"col-lg-12\\\">Date</label>\\r\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\r\\n                    <p-inputMask id=\\\"DateInputMask\\\" [(ngModel)]=\\\"dateValue\\\" name=\\\"dateValue\\\" mask=\\\"99/99/9999\\\" placeholder=\\\"mm/dd/yyyy\\\" slotChar=\\\"mm/dd/yyyy\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitDateValue()\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group m-form__group row\\\">\\r\\n                <label for=\\\"PhoneInputMask\\\" class=\\\"col-lg-12\\\">Phone</label>\\r\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\r\\n                    <p-inputMask id=\\\"PhoneInputMask\\\" [(ngModel)]=\\\"phoneValue\\\" name=\\\"phoneValue\\\" mask=\\\"(999) 999-9999\\\" placeholder=\\\"(999) 999-9999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submiPhoneValue()\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group m-form__group row\\\">\\r\\n                <label for=\\\"PhoneExtInputMask\\\" class=\\\"col-lg-12\\\">Phone Ext</label>\\r\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\r\\n                    <p-inputMask id=\\\"PhoneExtInputMask\\\" mask=\\\"(999) 999-9999? x99999\\\" name=\\\"phoneExtValue\\\" [(ngModel)]=\\\"phoneExtValue\\\" placeholder=\\\"(999) 999-9999? x99999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitPhoneExtValue()\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group m-form__group row\\\">\\r\\n                <label for=\\\"SerialInputMask\\\" class=\\\"col-lg-12\\\">Serial</label>\\r\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\r\\n                    <p-inputMask id=\\\"SerialInputMask\\\" [(ngModel)]=\\\"serialValue\\\" name=\\\"serialValue\\\" mask=\\\"a*-999-a999\\\" placeholder=\\\"a*-999-a999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitSerialValue()\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    selector: 'demo-ui-input-mask',\r\n    templateUrl: './demo-ui-input-mask.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiInputMaskComponent extends AppComponentBase {\r\n\r\n    dateValue = '';\r\n    phoneValue = '';\r\n    serialValue = '';\r\n    phoneExtValue = '';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    submitDateValue(): void {\r\n        this.submitValue(this.dateValue);\r\n    }\r\n\r\n    submiPhoneValue(): void {\r\n        this.submitValue(this.phoneValue);\r\n    }\r\n\r\n    submitSerialValue(): void {\r\n        this.submitValue(this.serialValue);\r\n    }\r\n\r\n    submitPhoneExtValue(): void {\r\n        this.submitValue(this.phoneExtValue);\r\n    }\r\n\r\n    // input mask - post\r\n    submitValue(value: any): void {\r\n\r\n        this.demoUiComponentsService.sendAndGetValue(value)\r\n            .subscribe(data => {\r\n                this.message.info(data.output, this.l('PostedValue'));\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n            <div class=\\\"m-portlet__head-title\\\">\\r\\n                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                    Prime NG Autocomplete\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-portlet__body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <div class=\\\"form-group m-form__group row\\\">\\r\\n                <label for=\\\"SingleSelectInput\\\" class=\\\"col-lg-12\\\">Single select</label>\\r\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\r\\n                    <p-autoComplete [(ngModel)]=\\\"country\\\"\\r\\n                                    id=\\\"SingleSelectInput\\\"\\r\\n                                    [suggestions]=\\\"filteredCountries\\\"\\r\\n                                    (completeMethod)=\\\"filterCountries($event)\\\"\\r\\n                                    field=\\\"name\\\"\\r\\n                                    placeholder=\\\"Country\\\"\\r\\n                                    [minLength]=\\\"1\\\"\\r\\n                                    name=\\\"SingleSelectInput\\\"\\r\\n                                    inputStyleClass=\\\"form-control\\\"\\r\\n                                    styleClass=\\\"width-percent-100\\\">\\r\\n                    </p-autoComplete>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitSelectedCountry()\\\" type=\\\"button\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group row\\\">\\r\\n                <label for=\\\"MultiSelectInput\\\" class=\\\"col-lg-12\\\">Multi select</label>\\r\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\r\\n                    <p-autoComplete [(ngModel)]=\\\"countries\\\"\\r\\n                                    [suggestions]=\\\"filteredCountries\\\"\\r\\n                                    (completeMethod)=\\\"filterCountries($event)\\\"\\r\\n                                    field=\\\"name\\\"\\r\\n                                    placeholder=\\\"Countries\\\"\\r\\n                                    [minLength]=\\\"1\\\"\\r\\n                                    name=\\\"MultiSelectInput\\\"\\r\\n                                    id=\\\"MultiSelectInput\\\"\\r\\n                                    [multiple]=\\\"true\\\"\\r\\n                                    inputStyleClass=\\\"form-control\\\"\\r\\n                                    styleClass=\\\"width-percent-100\\\">\\r\\n                    </p-autoComplete>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitSelectedCountries()\\\" type=\\\"button\\\">{{\\\"Submit\\\" | localize}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { DemoUiComponentsServiceProxy, NameValueOfString } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'demo-ui-selection',\r\n    templateUrl: './demo-ui-selection.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiSelectionComponent extends AppComponentBase {\r\n\r\n    filteredCountries: NameValueOfString[];\r\n    country: any;\r\n    countries: NameValueOfString[] = new Array<NameValueOfString>();\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    // get countries\r\n    filterCountries(event): void {\r\n        this.demoUiComponentsService.getCountries(event.query).subscribe(countries => {\r\n            this.filteredCountries = countries;\r\n        });\r\n    }\r\n\r\n    // single select - post\r\n    submitSelectedCountry(): void {\r\n        let selectedCountries = new Array<NameValueOfString>();\r\n\r\n        selectedCountries.push(this.country);\r\n\r\n        this.demoUiComponentsService.sendAndGetSelectedCountries(selectedCountries)\r\n            .subscribe((countries: NameValueOfString[]) => {\r\n                let message = '';\r\n\r\n                _.forEach(countries, item => {\r\n                    message += `<div><strong>id</strong>: ${item.value} - <strong>name</strong>: ${item.name}</div>`;\r\n                });\r\n\r\n                this.message.info(message, this.l('PostedValue'), true);\r\n            });\r\n    }\r\n\r\n    // multi select - post\r\n    submitSelectedCountries(): void {\r\n        this.demoUiComponentsService.sendAndGetSelectedCountries(this.countries)\r\n            .subscribe((countries: NameValueOfString[]) => {\r\n                let message = '';\r\n\r\n                _.forEach(countries, item => {\r\n                    message += `<div><strong>id</strong>: ${item.value} - <strong>name</strong>: ${item.name}</div>`;\r\n                });\r\n\r\n                this.message.info(message, this.l('PostedValue'), true);\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #editionForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">\\r\\n                        <span>{{\\\"CreateNewEdition\\\" | localize}}</span>\\r\\n                    </h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                        <tab heading=\\\"{{'EditionProperties' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"EditionDisplayName\\\">{{\\\"EditionName\\\" | localize}} *</label>\\r\\n                                <input id=\\\"EditionDisplayName\\\" #editionNameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"EditionDisplayName\\\" [(ngModel)]=\\\"edition.edition.displayName\\\" required maxlength=\\\"64\\\">\\r\\n                                <validation-messages [formCtrl]=\\\"editionNameInput\\\"></validation-messages>\\r\\n                            </div>\\r\\n\\r\\n                            <label>{{\\\"SubscriptionPrice\\\" | localize}}</label>\\r\\n                            <div class=\\\"m-radio-inline\\\">\\r\\n                                <label for=\\\"EditEdition_IsFree\\\" class=\\\"m-radio\\\">\\r\\n                                    <input id=\\\"EditEdition_IsFree\\\" name=\\\"SubscriptionPrice\\\" [(ngModel)]=\\\"isFree\\\" (ngModelChange)=\\\"resetPrices($event)\\\" [value]=\\\"true\\\" type=\\\"radio\\\">\\r\\n                                    {{\\\"Free\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"EditEdition_IsPaid\\\" class=\\\"m-radio\\\">\\r\\n                                    <input id=\\\"EditEdition_IsPaid\\\" name=\\\"SubscriptionPrice\\\" [(ngModel)]=\\\"isFree\\\" [value]=\\\"false\\\" type=\\\"radio\\\">\\r\\n                                    {{\\\"Paid\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" *ngIf=\\\"!isFree\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"MonthlyPrice\\\">{{\\\"MonthlyPrice\\\" | localize}}</label>\\r\\n                                        <div class=\\\"input-group m-input-group\\\">\\r\\n                                            <div class=\\\"input-group-prepend\\\"><span class=\\\"input-group-text\\\">{{appSession.application.currencySign}}</span></div>\\r\\n                                            <input #monthlyPriceInput=\\\"ngModel\\\"\\r\\n                                                   type=\\\"text\\\"\\r\\n                                                   name=\\\"MonthlyPrice\\\"\\r\\n                                                   id=\\\"MonthlyPrice\\\"\\r\\n                                                   class=\\\"form-control\\\"\\r\\n                                                   autocomplete=\\\"off\\\"\\r\\n                                                   [ngClass]=\\\"{'edited':edition.edition.monthlyPrice}\\\"\\r\\n                                                   [required]=\\\"!isFree\\\"\\r\\n                                                   [(ngModel)]=\\\"edition.edition.monthlyPrice\\\"\\r\\n                                                   [textMask]=\\\"{mask: currencyMask}\\\" />\\r\\n                                        </div>\\r\\n                                        <validation-messages [formCtrl]=\\\"monthlyPriceInput\\\"></validation-messages>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"AnnualPrice\\\">{{\\\"AnnualPrice\\\" | localize}}</label>\\r\\n                                        <div class=\\\"input-group m-input-group\\\">\\r\\n                                            <div class=\\\"input-group-prepend\\\"><span class=\\\"input-group-text\\\">{{appSession.application.currencySign}}</span></div>\\r\\n                                            <input #annualPriceInput=\\\"ngModel\\\"\\r\\n                                                   type=\\\"text\\\"\\r\\n                                                   name=\\\"AnnualPrice\\\"\\r\\n                                                   id=\\\"AnnualPrice\\\"\\r\\n                                                   class=\\\"form-control\\\"\\r\\n                                                   autocomplete=\\\"off\\\"\\r\\n                                                   [ngClass]=\\\"{'edited':edition.edition.annualPrice}\\\"\\r\\n                                                   [required]=\\\"!isFree\\\"\\r\\n                                                   [(ngModel)]=\\\"edition.edition.annualPrice\\\"\\r\\n                                                   [textMask]=\\\"{mask: currencyMask}\\\" />\\r\\n                                        </div>\\r\\n                                        <validation-messages [formCtrl]=\\\"annualPriceInput\\\"></validation-messages>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [hidden]=\\\"isFree\\\" class=\\\"paid-features\\\">\\r\\n                                <div class=\\\"m-checkbox-list\\\">\\r\\n                                    <label for=\\\"EditEdition_IsTrialActive\\\" class=\\\"m-checkbox\\\">\\r\\n                                        <input id=\\\"EditEdition_IsTrialActive\\\" type=\\\"checkbox\\\" name=\\\"isTrialActive\\\" [(ngModel)]=\\\"isTrialActive\\\" />\\r\\n                                        {{\\\"IsTrialActive\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group trial-day-count\\\" *ngIf=\\\"isTrialActive\\\">\\r\\n                                    <label for=\\\"TrialDayCount\\\">{{\\\"TrialDayCount\\\" | localize}}</label>\\r\\n                                    <input #trialDayCountInput=\\\"ngModel\\\"\\r\\n                                           class=\\\"form-control\\\"\\r\\n                                           type=\\\"number\\\"\\r\\n                                           name=\\\"TrialDayCount\\\"\\r\\n                                           id=\\\"TrialDayCount\\\"\\r\\n                                           [required]=\\\"isTrialActive\\\"\\r\\n                                           [(ngModel)]=\\\"edition.edition.trialDayCount\\\"\\r\\n                                           [ngClass]=\\\"{'edited':edition.edition.trialDayCount}\\\">\\r\\n                                    <validation-messages [formCtrl]=\\\"trialDayCountInput\\\"></validation-messages>\\r\\n                                </div>\\r\\n                                <div class=\\\"m-checkbox-list\\\">\\r\\n                                    <label for=\\\"EditEdition_IsWaitingDayActive\\\" class=\\\"m-checkbox\\\">\\r\\n                                        <input id=\\\"EditEdition_IsWaitingDayActive\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsWaitingDayActive\\\" [(ngModel)]=\\\"isWaitingDayActive\\\" />\\r\\n                                        {{\\\"WaitAfterSubscriptionExpireDate\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group waiting-day-after-expire\\\" *ngIf=\\\"isWaitingDayActive\\\">\\r\\n                                    <label for=\\\"WaitingDayAfterExpire\\\">{{\\\"WaitingDayAfterExpire\\\" | localize}}</label>\\r\\n                                    <input #waitingDayAfterExpireInput=\\\"ngModel\\\"\\r\\n                                           class=\\\"form-control\\\"\\r\\n                                           type=\\\"number\\\"\\r\\n                                           name=\\\"WaitingDayAfterExpire\\\"\\r\\n                                           id=\\\"WaitingDayAfterExpire\\\"\\r\\n                                           [required]=\\\"isWaitingDayActive\\\"\\r\\n                                           [(ngModel)]=\\\"edition.edition.waitingDayAfterExpire\\\"\\r\\n                                           [ngClass]=\\\"{'edited':edition.edition.waitingDayAfterExpire}\\\">\\r\\n                                    <validation-messages [formCtrl]=\\\"waitingDayAfterExpireInput\\\"></validation-messages>\\r\\n                                </div>\\r\\n                                <label>{{\\\"WhatWillDoneAfterSubscriptionExpiry\\\" | localize}}</label>\\r\\n                                <div class=\\\"m-radio-inline\\\">\\r\\n                                    <label for=\\\"EditEdition_ExpireAction_DeactiveUser\\\" class=\\\"m-radio\\\">\\r\\n                                        <input id=\\\"EditEdition_ExpireAction_DeactiveUser\\\" name=\\\"ExpireAction\\\" [(ngModel)]=\\\"expireAction\\\" [value]=\\\"expireActionEnum.DeactiveTenant\\\" (ngModelChange)=\\\"removeExpiringEdition($event)\\\" type=\\\"radio\\\">\\r\\n                                        {{\\\"DeactiveTenant\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                    <label for=\\\"EditEdition_ExpireAction_AssignEdition\\\" class=\\\"m-radio\\\">\\r\\n                                        <input id=\\\"EditEdition_ExpireAction_AssignEdition\\\" name=\\\"ExpireAction\\\" [(ngModel)]=\\\"expireAction\\\" [value]=\\\"expireActionEnum.AssignToAnotherEdition\\\" type=\\\"radio\\\">\\r\\n                                        {{\\\"AssignToAnotherEdition\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group edition-list\\\" *ngIf=\\\"expireAction == expireActionEnum.AssignToAnotherEdition\\\">\\r\\n                                    <select name=\\\"expiringEdition\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"edition.edition.expiringEditionId\\\" [attr.min]=\\\"expireAction == expireActionEnum.AssignToAnotherEdition ? 1:0\\\">\\r\\n                                        <option *ngFor=\\\"let expiringEdition of expiringEditions\\\" [value]=\\\"expiringEdition.value\\\">{{expiringEdition.displayText}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </tab>\\r\\n                        <tab heading=\\\"{{'Features' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <feature-tree #featureTree></feature-tree>\\r\\n                        </tab>\\r\\n                    </tabset>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editionForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppEditionExpireAction } from '@shared/AppEnums';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ComboboxItemDto, CommonLookupServiceProxy, CreateEditionDto, EditionServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { FeatureTreeComponent } from '../shared/feature-tree.component';\r\nimport { finalize } from 'rxjs/operators';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\r\n\r\n\r\n@Component({\r\n    selector: 'createEditionModal',\r\n    templateUrl: './create-edition-modal.component.html'\r\n})\r\nexport class CreateEditionModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createModal') modal: ModalDirective;\r\n    @ViewChild('featureTree') featureTree: FeatureTreeComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n    currencyMask = createNumberMask({\r\n        prefix: '',\r\n        allowDecimal: true\r\n    });\r\n\r\n    edition: CreateEditionDto = new CreateEditionDto();\r\n    expiringEditions: ComboboxItemDto[] = [];\r\n\r\n    expireAction: AppEditionExpireAction = AppEditionExpireAction.DeactiveTenant;\r\n    expireActionEnum: typeof AppEditionExpireAction = AppEditionExpireAction;\r\n    isFree = true;\r\n    isTrialActive = false;\r\n    isWaitingDayActive = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _editionService: EditionServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(editionId?: number): void {\r\n        this.active = true;\r\n\r\n        this._commonLookupService.getEditionsForCombobox(true).subscribe(editionsResult => {\r\n            this.expiringEditions = editionsResult.items;\r\n            this.expiringEditions.unshift(new ComboboxItemDto({ value: null, displayText: this.l('NotAssigned'), isSelected: true }));\r\n\r\n            this._editionService.getEditionForEdit(editionId).subscribe(editionResult => {\r\n                this.featureTree.editData = editionResult;\r\n                this.modal.show();\r\n            });\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        document.getElementById('EditionDisplayName').focus();\r\n    }\r\n\r\n    resetPrices(isFree) {\r\n        this.edition.edition.annualPrice = undefined;\r\n        this.edition.edition.monthlyPrice = undefined;\r\n    }\r\n\r\n    removeExpiringEdition(isDeactivateTenant) {\r\n        this.edition.edition.expiringEditionId = null;\r\n    }\r\n\r\n    save(): void {\r\n        const input = new CreateEditionDto();\r\n        input.edition = this.edition.edition;\r\n        input.featureValues = this.featureTree.getGrantedFeatures();\r\n\r\n        this.saving = true;\r\n        this._editionService.createEdition(input)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #editionForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">\\r\\n                        <span>{{l(\\\"EditEdition\\\")}}: {{edition.edition.displayName}}</span>\\r\\n                    </h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                        <tab heading=\\\"{{l('EditionProperties')}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"EditionDisplayName\\\">{{l(\\\"EditionName\\\")}} *</label>\\r\\n                                <input id=\\\"EditionDisplayName\\\" #editionNameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"EditionDisplayName\\\" [ngClass]=\\\"edition.edition.displayName\\\" [(ngModel)]=\\\"edition.edition.displayName\\\" required maxlength=\\\"64\\\">\\r\\n                                <validation-messages [formCtrl]=\\\"editionNameInput\\\"></validation-messages>\\r\\n                            </div>\\r\\n                        </tab>\\r\\n                        <tab heading=\\\"{{l('Features')}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <feature-tree #featureTree></feature-tree>\\r\\n                        </tab>\\r\\n                    </tabset>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editionForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppEditionExpireAction } from '@shared/AppEnums';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ComboboxItemDto, CommonLookupServiceProxy, UpdateEditionDto, EditionServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { FeatureTreeComponent } from '../shared/feature-tree.component';\r\nimport { finalize } from 'rxjs/operators';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\r\n\r\n\r\n@Component({\r\n    selector: 'editEditionModal',\r\n    templateUrl: './edit-edition-modal.component.html'\r\n})\r\nexport class EditEditionModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('editModal') modal: ModalDirective;\r\n    @ViewChild('featureTree') featureTree: FeatureTreeComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n    currencyMask = createNumberMask({\r\n        prefix: '',\r\n        allowDecimal: true\r\n    });\r\n\r\n    edition: UpdateEditionDto = new UpdateEditionDto();\r\n    expiringEditions: ComboboxItemDto[] = [];\r\n\r\n    expireAction: AppEditionExpireAction = AppEditionExpireAction.DeactiveTenant;\r\n    expireActionEnum: typeof AppEditionExpireAction = AppEditionExpireAction;\r\n    isFree = false;\r\n    isTrialActive = false;\r\n    isWaitingDayActive = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _editionService: EditionServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(editionId?: number): void {\r\n        this.active = true;\r\n\r\n        this._commonLookupService.getEditionsForCombobox(true).subscribe(editionsResult => {\r\n            this._editionService.getEditionForEdit(editionId).subscribe(editionResult => {\r\n                this.featureTree.editData = editionResult;\r\n                this.edition.edition = editionResult.edition;\r\n                this.modal.show();\r\n            });\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        document.getElementById('EditionDisplayName').focus();\r\n    }\r\n\r\n    save(): void {\r\n        const input = new UpdateEditionDto();\r\n        input.edition = this.edition.edition;\r\n        input.featureValues = this.featureTree.getGrantedFeatures();\r\n\r\n        this.saving = true;\r\n        this._editionService.updateEdition(input)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{(\\\"Editions\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"EditionsHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col text-right mt-3 mt-md-0\\\">\\r\\n                <button *ngIf=\\\"'Pages.Editions.Create' | permission\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createEdition()\\\"><i class=\\\"fa fa-plus\\\"></i> {{\\\"CreateNewEdition\\\" | localize}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-TurboTable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                 (onLazyLoad)=\\\"getEditions()\\\"\\r\\n                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 [paginator]=\\\"false\\\"\\r\\n                                 [lazy]=\\\"true\\\"\\r\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px;\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Editions.Edit', 'Pages.Editions.Delete')\\\">\\r\\n                                        {{'Actions' | localize}}\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'EditionName' | localize}}\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'Price' | localize}}\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'IsTrialActive' | localize}}\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'WaitingDayAfterExpire' | localize}}\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'ExpiringEdition' | localize}}\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px;text-align:center\\\">\\r\\n                                        <div class=\\\"btn-group dropdown\\\" dropdown>\\r\\n                                            <button dropdownToggle class=\\\"dropdown-toggle btn btn-sm btn-primary\\\">\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{\\\"Actions\\\" | localize}}\\r\\n                                            </button>\\r\\n                                            <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Editions.Edit' | permission\\\"\\r\\n                                                       (click)=\\\"editEditionModal.show(record.id)\\\">{{'Edit' | localize}}</a>\\r\\n                                                </li>\\r\\n\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Editions.Delete' | permission\\\"\\r\\n                                                       (click)=\\\"deleteEdition(record)\\\">{{'Delete' | localize}}</a>\\r\\n                                                </li>\\r\\n\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Editions.MoveTenantsToAnotherEdition' | permission\\\"\\r\\n                                                       (click)=\\\"moveTenantsToAnotherEditionModal.show(record.id)\\\">{{'MoveTenantsToAnotherEdition' | localize}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'EditionName' | localize}}</span>\\r\\n                                        {{record.displayName}}\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Price' | localize}}</span>\\r\\n                                        <span *ngIf=\\\"record.monthlyPrice || record.annualPrice\\\">\\r\\n                                            $ {{record.monthlyPrice}} {{\\\"Monthly\\\" | localize }} / $ {{record.annualPrice}} {{\\\"Annual\\\" | localize }}\\r\\n                                        </span>\\r\\n                                        <span *ngIf=\\\"!record.monthlyPrice && !record.annualPrice\\\">\\r\\n                                            {{\\\"Free\\\" | localize}}\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'IsTrialActive' | localize}}</span>\\r\\n                                        <span *ngIf=\\\"record.trialDayCount\\\">\\r\\n                                            {{\\\"Yes\\\" | localize}}, {{record.trialDayCount}} {{\\\"Days\\\" | localize}}\\r\\n                                        </span>\\r\\n                                        <span *ngIf=\\\"!record.trialDayCount\\\">\\r\\n                                            {{\\\"No\\\" | localize}}\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'WaitingDayAfterExpire' | localize}}</span>\\r\\n                                        {{record.waitingDayAfterExpire}}\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'ExpiringEdition' | localize}}</span>\\r\\n                                        {{record.expiringEditionDisplayName}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{'NoData' | localize}}\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-table-footer\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-TurboTable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createEditionModal #createEditionModal (modalSave)=\\\"getEditions()\\\"></createEditionModal>\\r\\n    <editEditionModal #editEditionModal (modalSave)=\\\"getEditions()\\\"></editEditionModal>\\r\\n    <moveTenantsToAnotherEditionModal #moveTenantsToAnotherEditionModal></moveTenantsToAnotherEditionModal>\\r\\n</div>\\r\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { EditionListDto, EditionServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { CreateEditionModalComponent } from './create-edition-modal.component';\r\nimport { EditEditionModalComponent } from './edit-edition-modal.component';\r\nimport { MoveTenantsToAnotherEditionModalComponent } from './move-tenants-to-another-edition-modal.component';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './editions.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class EditionsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createEditionModal') createEditionModal: CreateEditionModalComponent;\r\n    @ViewChild('editEditionModal') editEditionModal: EditEditionModalComponent;\r\n    @ViewChild('moveTenantsToAnotherEditionModal') moveTenantsToAnotherEditionModal: MoveTenantsToAnotherEditionModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _editionService: EditionServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getEditions(): void {\r\n        this.primengTableHelper.showLoadingIndicator();\r\n        this._editionService.getEditions()\r\n            .pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator()))\r\n            .subscribe(result => {\r\n                this.primengTableHelper.totalRecordsCount = result.items.length;\r\n                this.primengTableHelper.records = result.items;\r\n                this.primengTableHelper.hideLoadingIndicator();\r\n            });\r\n    }\r\n\r\n    createEdition(): void {\r\n        this.createEditionModal.show();\r\n    }\r\n\r\n    deleteEdition(edition: EditionListDto): void {\r\n        this.message.confirm(\r\n            this.l('EditionDeleteWarningMessage', edition.displayName),\r\n            this.l('AreYouSure'),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._editionService.deleteEdition(edition.id).subscribe(() => {\r\n                        this.getEditions();\r\n                        this.notify.success(this.l('SuccessfullyDeleted'));\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #MoveTenantsForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">\\r\\n                        <span>{{\\\"MoveTenantsOfEdition\\\" | localize}}</span>\\r\\n                    </h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <a [href]=\\\"appBaseUrl + '/app/admin/tenants?editionId=' + moveTenantsInput.sourceEditionId\\\" target=\\\"_blank\\\"\\r\\n                            [routerLink]=\\\"['/app/admin/tenants']\\\"\\r\\n                           [queryParams]=\\\"{editionId: moveTenantsInput.sourceEditionId}\\\">\\r\\n                        {{\\\"MoveTenantsOfEditionDescription\\\" | localize: tenantCount}}\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>{{\\\"Edition\\\" | localize}}</label>\\r\\n                        <select name=\\\"expiringEdition\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"moveTenantsInput.targetEditionId\\\">\\r\\n                            <option value=\\\"\\\">{{\\\"Select\\\" | localize}}</option>\\r\\n                            <option *ngFor=\\\"let targetEdition of targetEditions\\\" [value]=\\\"targetEdition.value\\\">{{targetEdition.displayText}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!MoveTenantsForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, ViewChild, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { MoveTenantsToAnotherEditionDto, ComboboxItemDto, CommonLookupServiceProxy, EditionServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'moveTenantsToAnotherEditionModal',\r\n    templateUrl: './move-tenants-to-another-edition-modal.component.html'\r\n})\r\nexport class MoveTenantsToAnotherEditionModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('editModal') modal: ModalDirective;\r\n\r\n    active = false;\r\n    saving = false;\r\n    appBaseUrl = '';\r\n    tenantCount = 0;\r\n\r\n    moveTenantsInput: MoveTenantsToAnotherEditionDto = new MoveTenantsToAnotherEditionDto();\r\n    targetEditions: ComboboxItemDto[] = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _editionService: EditionServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(editionId: number): void {\r\n        this.active = true;\r\n\r\n        this.moveTenantsInput.sourceEditionId = editionId;\r\n\r\n        this._commonLookupService.getEditionsForCombobox(undefined).subscribe(editionsResult => {\r\n            this.targetEditions = editionsResult.items;\r\n            this.modal.show();\r\n        });\r\n\r\n        this._editionService.getTenantCount(editionId)\r\n            .subscribe(editionCountResult => {\r\n                this.tenantCount = editionCountResult;\r\n                this.appBaseUrl = AppConsts.appBaseUrl;\r\n            });\r\n    }\r\n\r\n    save(): void {\r\n\r\n        this.saving = true;\r\n        this._editionService.moveTenantsToAnotherEdition(this.moveTenantsInput)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('MoveTenantsToAnotherEditionStartedNotification'));\r\n                this.close();\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  \\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"Forms\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"FormsHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n              \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getForms()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"m-separator m-separator--border-dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"NameFilter\\\">{{l(\\\"Name\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameFilter\\\" name=\\\"nameFilter\\\" [(ngModel)]=\\\"nameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"CountryFilter\\\">{{l(\\\"Country\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"CountryFilter\\\" name=\\\"countryFilter\\\" [(ngModel)]=\\\"countryFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"DocumentTypeFilter\\\">{{l(\\\"DocumentType\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DocumentTypeFilter\\\" name=\\\"documentTypeFilter\\\" [(ngModel)]=\\\"documentTypeFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row mb-2\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container col-12\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getForms($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Forms.Edit', 'Pages.Administration.Forms.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"form.name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"country\\\">\\r\\n                                        {{l('Country')}}\\r\\n                                        <p-sortIcon field=\\\"form.country\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"documentType\\\">\\r\\n                                        {{l('DocumentType')}}\\r\\n                                        <p-sortIcon field=\\\"form.documentType\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\">\\r\\n                                      \\r\\n                                            <button (click)=\\\"createBlankPdf(record.form)\\\" \\r\\n                                            class=\\\"btn btn-sm btn-primary\\\">{{l(\\\"CreateBlankPdf\\\")}}</button>\\r\\n                                     \\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.form.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Country')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.form.country}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('DocumentType')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.form.documentType}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getForms($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  \\r\\n</div>\\r\\n\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormsServiceProxy, FormDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './forms.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class FormsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    nameFilter = '';\r\n    countryFilter = '';\r\n    maxDocumentFilter : number;\r\n\t\tmaxDocumentFilterEmpty : number;\r\n\t\tminDocumentFilter : number;\r\n\t\tminDocumentFilterEmpty : number;\r\n    documentTypeFilter = '';\r\n\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _formsServiceProxy: FormsServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getForms(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._formsServiceProxy.getAll(\r\n            this.filterText,\r\n            this.nameFilter,\r\n            this.countryFilter,\r\n            this.documentTypeFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createBlankPdf(form : FormDto)\r\n    {\r\n        this._formsServiceProxy.getBlankPdf(form.id)\r\n        .subscribe((result) => {\r\n           \r\n            this._fileDownloadService.downloadTempFile(result);\r\n        });\r\n\r\n  \r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition] style=\\\"background-image: url('/assets/metronic/app/img/bg/bg-1.jpg');\\\">\\r\\n    <div class=\\\"content col-lg-12\\\">\\r\\n        <div class=\\\"m-content\\\">\\r\\n            <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                <div class=\\\"m-portlet__head\\\">\\r\\n                    <div class=\\\"m-portlet__head-caption\\\">\\r\\n                        <div class=\\\"m-portlet__head-title\\\">\\r\\n                            <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                                Drima Installation\\r\\n                            </h3>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <form id=\\\"installForm\\\" class=\\\"m-form m-form--fit\\\">\\r\\n                    <div class=\\\"m-portlet__body\\\">\\r\\n                        <div class=\\\"form-group m-form__group\\\">\\r\\n                            <div class=\\\"m-alert m-alert--icon alert alert-warning\\\" role=\\\"alert\\\">\\r\\n                                <div class=\\\"m-alert__icon\\\">\\r\\n                                    <i class=\\\"la la-warning\\\"></i>\\r\\n                                </div>\\r\\n                                <div class=\\\"m-alert__text\\\">\\r\\n                                    <strong>\\r\\n                                        Clear your cookies before installing Drima ! Otherwise, you might have some problems.\\r\\n                                    </strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"m-form__section\\\">\\r\\n                            <div class=\\\"m-form__heading\\\">\\r\\n                                <h5 class=\\\"m-form__heading-title\\\">\\r\\n                                    Connection String\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Connection String\\\" [(ngModel)]=\\\"setupSettings.connectionString\\\" name=\\\"connectionString\\\" value=\\\"{{setupSettings.connectionString}}\\\" autocomplete=\\\"off\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\r\\n                            <div class=\\\"m-form__heading\\\">\\r\\n                                <h5 class=\\\"m-form__heading-title\\\">\\r\\n                                    Admin Password\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Admin Password\\\" [(ngModel)]=\\\"setupSettings.adminPassword\\\" name=\\\"adminPassword\\\" autocomplete=\\\"off\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\r\\n                            <div class=\\\"m-form__heading\\\">\\r\\n                                <h5 class=\\\"m-form__heading-title\\\">\\r\\n                                    Client Side URL\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Client Side URL\\\" [(ngModel)]=\\\"setupSettings.webSiteUrl\\\" name=\\\"webSiteUrl\\\" value=\\\"{{setupSettings.webSiteUrl}}\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"m-form__heading\\\">\\r\\n                                <h5 class=\\\"m-form__heading-title\\\">\\r\\n                                    Server Side URL\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Server Side URL\\\" [(ngModel)]=\\\"setupSettings.serverUrl\\\" name=\\\"serverUrl\\\" value=\\\"{{setupSettings.serverUrl}}\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\r\\n                            <div class=\\\"m-form__heading\\\">\\r\\n                                <h5 class=\\\"m-form__heading-title\\\">\\r\\n                                    Default Language\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <select class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.defaultLanguage\\\" name=\\\"defaultLanguage\\\">\\r\\n                                    <option *ngFor=\\\"let language of languages\\\" value=\\\"{{language.value}}\\\">\\r\\n                                        {{language.name}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\r\\n                            <div class=\\\"m-form__heading\\\">\\r\\n                                <h5 class=\\\"m-form__heading-title\\\">\\r\\n                                    SMTP Settings\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"email\\\" placeholder=\\\"Default from address\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.defaultFromAddress\\\" name=\\\"defaultFromAddress\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"text\\\" placeholder=\\\"Default from displayName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.defaultFromDisplayName\\\" name=\\\"defaultFromDisplayName\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"text\\\" placeholder=\\\"SMTP host\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpHost\\\" name=\\\"smtpHost\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"number\\\" placeholder=\\\"SMTP port\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpPort\\\" name=\\\"smtpPort\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <label class=\\\"control-label col-md-12\\\"></label>\\r\\n                                <div class=\\\"m-checkbox-list\\\">\\r\\n                                    <label class=\\\"m-checkbox\\\">\\r\\n                                        <input id=\\\"Settings_SmtpEnableSsl\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpEnableSsl\\\" name=\\\"smtpEnableSsl\\\" value=\\\"true\\\">\\r\\n                                        UseSsl\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                    <label class=\\\"m-checkbox\\\">\\r\\n                                        <input id=\\\"Settings_SmtpUseDefaultCredentials\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpUseDefaultCredentials\\\" name=\\\"smtpUseDefaultCredentials\\\" value=\\\"true\\\">\\r\\n                                        Use Default Credentials\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"text\\\" placeholder=\\\"Domain name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpDomain\\\" name=\\\"smtpDomain\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"text\\\" placeholder=\\\"User name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpUserName\\\" name=\\\"smtpUserName\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpPassword\\\" name=\\\"smtpPassword\\\" id=\\\"SmtpPassword\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\r\\n                            <div class=\\\"m-form__heading\\\">\\r\\n                                <h5 class=\\\"m-form__heading-title\\\">\\r\\n                                    Invoice Info\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"legalName\\\" [(ngModel)]=\\\"setupSettings.billInfo.legalName\\\" placeholder=\\\"Legal name\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <textarea class=\\\"form-control\\\" name=\\\"billAddress\\\" rows=\\\"5\\\" [(ngModel)]=\\\"setupSettings.billInfo.address\\\" placeholder=\\\"Address\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"m-portlet__foot m-portlet__no-border m-portlet__foot--fit\\\">\\r\\n                        <div class=\\\"m-form__actions m-form__actions--solid\\\">\\r\\n                            <button id=\\\"SaveButton\\\" class=\\\"btn btn-primary\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" (click)=\\\"saveAll()\\\">Save</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"#m_aside_left {\\n  display: none !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaW5zdGFsbC9EOi9EcmltYSBBc3BOZXRaZXJvL2FuZ3VsYXIvc3JjL2FwcC9hZG1pbi9pbnN0YWxsL2luc3RhbGwuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FkbWluL2luc3RhbGwvaW5zdGFsbC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHdCQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9pbnN0YWxsL2luc3RhbGwuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbV9hc2lkZV9sZWZ0XG57XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuIiwiI21fYXNpZGVfbGVmdCB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cbiJdfQ== */\"","import { Component, Injector, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CommonLookupServiceProxy, EmailSettingsEditDto, HostBillingSettingsEditDto, InstallDto, InstallServiceProxy, NameValue } from '@shared/service-proxies/service-proxies';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './install.component.html',\r\n    animations: [appModuleAnimation()],\r\n    styleUrls: ['./install.component.less'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class InstallComponent extends AppComponentBase implements OnInit {\r\n\r\n    saving = false;\r\n    setupSettings: InstallDto;\r\n    languages: NameValue[];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _installSettingService: InstallServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    loadAppSettingsJson(): void {\r\n        let self = this;\r\n        self._installSettingService.getAppSettingsJson()\r\n            .subscribe(result => {\r\n                this.setupSettings.webSiteUrl = result.webSiteUrl;\r\n                this.setupSettings.serverUrl = result.serverSiteUrl;\r\n                this.languages = result.languages;\r\n            });\r\n    }\r\n\r\n    init(): void {\r\n        this._installSettingService.checkDatabase()\r\n            .subscribe(result => {\r\n                if (result.isDatabaseExist) {\r\n                    window.location.href = '/';\r\n                }\r\n            });\r\n\r\n        this.setupSettings = new InstallDto();\r\n        this.setupSettings.smtpSettings = new EmailSettingsEditDto();\r\n        this.setupSettings.billInfo = new HostBillingSettingsEditDto();\r\n        this.setupSettings.defaultLanguage = 'en';\r\n        this.loadAppSettingsJson();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let self = this;\r\n        self.init();\r\n    }\r\n\r\n    saveAll(): void {\r\n        this.saving = true;\r\n        this._installSettingService.setup(this.setupSettings)\r\n            .pipe(finalize(() => { this.saving = false; }))\r\n            .subscribe(() => {\r\n                window.location.href = '/';\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #instructorForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"instructor.id\\\">{{l(\\\"EditInstructor\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!instructor.id\\\">{{l(\\\"CreateNewInstructor\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group m-form__group\\\">\\r\\n                        <label for=\\\"LicenseClassClass\\\">{{l(\\\"LicenseClass\\\")}}</label>\\r\\n                        <!-- <div class=\\\"input-group\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"LicenseClassClass\\\" name=\\\"licenseClassClass\\\" [(ngModel)]=\\\"licenseClassClass\\\" type=\\\"text\\\" disabled>     \\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <button class=\\\"btn btn-primary blue\\\" (click)=\\\"openSelectLicenseClassModal()\\\" type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i> {{l(\\\"Pick\\\")}}</button>\\r\\n                            </div> <div class=\\\"input-group-prepend\\\">\\r\\n                                <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"setAllowedClassesToTeachNull()\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t\\t<ng-multiselect-dropdown\\r\\n\\t\\t\\t\\t\\t\\t[placeholder]=\\\"placeholder\\\"\\r\\n\\t\\t\\t\\t\\t\\t[data]=\\\"dropdownList\\\"\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"selectedItems\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t[settings]=\\\"dropdownSettings\\\"\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t</ng-multiselect-dropdown>\\r\\n                    </div>\\r\\n                    <input class=\\\"form-control\\\" name=\\\"instructor.allowedClassesToTeach\\\" [(ngModel)]=\\\"instructor.allowedClassesToTeach\\\" type=\\\"text\\\"  hidden>\\r\\n\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_FirstName\\\">{{l(\\\"FirstName\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_FirstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.firstName\\\" name=\\\"FirstName\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_LastName\\\">{{l(\\\"LastName\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_LastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.lastName\\\" name=\\\"LastName\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_Email\\\">{{l(\\\"Email\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_Email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.email\\\" name=\\\"Email\\\"    required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_PhoneNumber\\\">{{l(\\\"PhoneNumber\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_PhoneNumber\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.phoneNumber\\\" name=\\\"PhoneNumber\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_DateOfBirth\\\">{{l(\\\"DateOfBirth\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <input required class=\\\"form-control m-input\\\" type=\\\"datetime\\\" bsDatepicker [(ngModel)]=\\\"instructor.dateOfBirth._d\\\" id=\\\"Instructor_DateOfBirth\\\" name=\\\"Instructor_DateOfBirth\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_Street\\\">{{l(\\\"Street\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_Street\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.street\\\" name=\\\"Street\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_City\\\">{{l(\\\"City\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_City\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.city\\\" name=\\\"City\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_ZipCode\\\">{{l(\\\"ZipCode\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_ZipCode\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.zipCode\\\" name=\\\"ZipCode\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_State\\\">{{l(\\\"State\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_State\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.state\\\" name=\\\"State\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Instructor_Country\\\">{{l(\\\"Country\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Instructor_Country\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"instructor.country\\\" name=\\\"Country\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group m-form__group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"DefaultOffice\\\">{{l(\\\"DefaultOffice\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" id=\\\"defaultOffice\\\" name=\\\"defaultOffice\\\" [(ngModel)]=\\\"defaultOffice\\\" type=\\\"text\\\" disabled>     \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-append\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary blue\\\" (click)=\\\"openSelectOfficeModal()\\\" type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i> {{l(\\\"Pick\\\")}}</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> <div class=\\\"input-group-prepend\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-danger btn-icon\\\" type=\\\"button\\\" (click)=\\\"setOfficeNull()\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"instructor.defaultOfficeId\\\" [(ngModel)]=\\\"instructor.defaultOfficeId\\\" type=\\\"text\\\"  hidden>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!instructorForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<officeLookupTableModal #officeLookupTableModal (modalSave)=\\\"getOffice()\\\"></officeLookupTableModal>\\r\\n\\t\\t \\r\\n</div>\"","import { Component, ViewChild, Injector, Output, EventEmitter, OnInit} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { InstructorsServiceProxy, CreateOrEditInstructorDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\nimport { LicenseClassLookupTableModalComponent } from './licenseClass-lookup-table-modal.component';\r\nimport { OfficeLookupTableModalComponent } from './office-lookup-table-modal.component';\r\n\r\n\r\n@Component({\r\n    selector: 'createOrEditInstructorModal',\r\n    templateUrl: './create-or-edit-instructor-modal.component.html'\r\n})\r\nexport class CreateOrEditInstructorModalComponent extends AppComponentBase implements OnInit{\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('licenseClassLookupTableModal') licenseClassLookupTableModal: LicenseClassLookupTableModalComponent;\r\n    @ViewChild('officeLookupTableModal') officeLookupTableModal: OfficeLookupTableModalComponent;\r\n\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    instructor: CreateOrEditInstructorDto = new CreateOrEditInstructorDto();\r\n\r\n    dropdownList = [];\r\n    selectedItems = [];\r\n    dropdownSettings = {};\r\n    placeholder = 'None';\r\n\r\n    defaultOffice = '';\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _instructorsServiceProxy: InstructorsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'item_id',\r\n            textField: 'item_text',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'Unselect All',\r\n            allowSearchFilter: false\r\n        };\r\n    }\r\n\r\n    show(instructorId?: number): void {\r\n\r\n        if (!instructorId) {\r\n            this.instructor = new CreateOrEditInstructorDto();\r\n            this.instructor.id = instructorId;\r\n            this.instructor.dateOfBirth = moment().startOf('day');\r\n            this.defaultOffice = '';\r\n\r\n            this.active = true;\r\n            this.updateLicenseClass(false);\r\n            this.modal.show();\r\n        } else {\r\n            this._instructorsServiceProxy.getInstructorForEdit(instructorId).subscribe(result => {\r\n                this.instructor = result.instructor;\r\n                this.defaultOffice = result.defaultOfficeName;\r\n            \r\n                this.active = true;\r\n                this.updateLicenseClass(true);\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n            this.instructor.licenseClasses = [];\r\n\r\n            for (var licenseClass of this.selectedItems)\r\n            {\r\n                this.instructor.licenseClasses.push(\r\n                    licenseClass.item_text\r\n                );\r\n            }\r\n\t\t\t\r\n            this._instructorsServiceProxy.createOrEdit(this.instructor)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n    updateLicenseClass(instructorAvailable : boolean ) : void\r\n    {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._instructorsServiceProxy.getAllLicenseClassForLookupTable(\r\n            \"\",\r\n            \"\",\r\n            0,\r\n            1000).subscribe(result => {\r\n\r\n                // for(var r = 0; r < result.items.length; r++)\r\n                //     console.log(result.items[r].id);\r\n    \r\n                this.dropdownList = [];\r\n                this.selectedItems = [];\r\n\r\n                for (var _i = 0; _i < result.items.length; _i++) \r\n                {   \r\n                    this.dropdownList.push(\r\n                    {\r\n                        item_id: _i, \r\n                        item_text: result.items[_i].displayName\r\n                    });\r\n                }\r\n\r\n                if(instructorAvailable)\r\n                {\r\n                    for (var item of this.dropdownList) {\r\n                        for (var instructorClasses of this.instructor.licenseClasses) {\r\n                            //console.log(item.item_text);\r\n                            //console.log(studentClasses);\r\n                            if(item.item_text == instructorClasses)\r\n                            {\r\n                                //console.log(\"Add it now\");\r\n                                this.selectedItems.push(\r\n                                    {\r\n                                        item_id: item.item_id,\r\n                                        item_text: item.item_text\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n\r\n                    //console.log(this.selectedItems.length);\r\n                }\r\n\r\n                this.primengTableHelper.hideLoadingIndicator();\r\n            });\r\n    }\r\n\r\n        openSelectOfficeModal() {\r\n        // this.licenseClassLookupTableModal.id = this.instructor.allowedClassesToTeach;\r\n        // this.licenseClassLookupTableModal.displayName = this.licenseClassClass;\r\n        this.officeLookupTableModal.show();\r\n        }\r\n\r\n\r\n        setOfficeNull() {\r\n        this.instructor.defaultOfficeId = null;\r\n        this.defaultOffice = '';\r\n        }\r\n\r\n\r\n        getOffice() {\r\n        this.instructor.defaultOfficeId = this.officeLookupTableModal.id;\r\n        this.defaultOffice = this.officeLookupTableModal.name;\r\n        }\r\n\r\n    \r\n\r\n\r\n    close(): void {\r\n\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #userForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"user.id\\\">{{\\\"EditUser\\\" | localize}}: {{user.userName}}</span>\\r\\n                        <span *ngIf=\\\"!user.id\\\">{{\\\"CreateNewUser\\\" | localize}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <!-- <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                        <tab heading=\\\"{{'UserInformations' | localize}}\\\" customClass=\\\"m-tabs__item\\\"> -->\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-3 text-center margin-bottom-15 margin-top-15\\\">\\r\\n                                    <img src=\\\"{{profilePicture}}\\\" width=\\\"128\\\" height=\\\"128\\\" class=\\\"img-thumbnail img-rounded\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"Name\\\">{{\\\"Name\\\" | localize}}</label>\\r\\n                                        <input name=\\\"Name\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userLastName\\\" readonly>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"Surname\\\">{{\\\"Surname\\\" | localize}}</label>\\r\\n                                        <input name=\\\"Surname\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userFirstName\\\" readonly>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"Email\\\">{{\\\"Email\\\" | localize}}</label>\\r\\n                                <input name=\\\"Email\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userEmail\\\" readonly>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"UserName\\\">{{\\\"UserName\\\" | localize}} *</label>\\r\\n                                <input id=\\\"UserName\\\" #userNameInput=\\\"ngModel\\\" type=\\\"text\\\" [disabled]=\\\"!canChangeUserName\\\" name=\\\"UserName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.userName\\\" required maxlength=\\\"32\\\">\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"!canChangeUserName\\\">{{\\\"CanNotChangeAdminUserName\\\" | localize}}</span>\\r\\n                                <validation-messages [formCtrl]=\\\"userNameInput\\\"></validation-messages>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"EditUser_SetRandomPassword\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_SetRandomPassword\\\" type=\\\"checkbox\\\" name=\\\"SetRandomPassword\\\" [(ngModel)]=\\\"setRandomPassword\\\">\\r\\n                                    {{\\\"SetRandomPassword\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                                <div class=\\\"right\\\">\\r\\n                                    <label for=\\\"Password\\\">{{\\\"Password\\\" | localize}}</label>\\r\\n                                    <input id=\\\"Password\\\" type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" id=\\\"Password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.password\\\" [required]=\\\"!user.id && !setRandomPassword\\\" maxlength=\\\"32\\\"\\r\\n                                           [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                                           [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\r\\n                                           validateEqual=\\\"PasswordRepeat\\\" reverse=\\\"true\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [hidden]=\\\"setRandomPassword || userForm.form.valid || userForm.form.pristine\\\">\\r\\n                                <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"userForm.controls['Password'] && userForm.controls['Password'].errors\\\">\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireDigit\\\">{{\\\"PasswordComplexity_RequireDigit_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireLowercase\\\">{{\\\"PasswordComplexity_RequireLowercase_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireUppercase\\\">{{\\\"PasswordComplexity_RequireUppercase_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireNonAlphanumeric\\\">{{\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requiredLength\\\">{{\\\"PasswordComplexity_RequiredLength_Hint\\\" | localize:passwordComplexitySetting.requiredLength}}</li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                                <div class=\\\"right\\\">\\r\\n                                    <label for=\\\"PasswordRepeat\\\">{{\\\"PasswordRepeat\\\" | localize}}</label>\\r\\n                                    <input id=\\\"PasswordRepeat\\\" type=\\\"password\\\" name=\\\"PasswordRepeat\\\" #PasswordRepeat=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.passwordRepeat\\\" [required]=\\\"!user.id && !setRandomPassword\\\" maxlength=\\\"32\\\"\\r\\n                                           [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                                           [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\r\\n                                           validateEqual=\\\"Password\\\" reverse=\\\"false\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [hidden]=\\\"setRandomPassword || userForm.form.valid || userForm.form.pristine\\\">\\r\\n                                <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"userForm.controls['PasswordRepeat'] && userForm.controls['PasswordRepeat'].errors\\\">\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireDigit\\\">{{\\\"PasswordComplexity_RequireDigit_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireLowercase\\\">{{\\\"PasswordComplexity_RequireLowercase_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireUppercase\\\">{{\\\"PasswordComplexity_RequireUppercase_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireNonAlphanumeric\\\">{{\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requiredLength\\\">{{\\\"PasswordComplexity_RequiredLength_Hint\\\" | localize:passwordComplexitySetting.requiredLength}}</li>\\r\\n                                    <li [hidden]=\\\"userForm.controls['PasswordRepeat'].valid\\\">{{\\\"PasswordsDontMatch\\\" | localize}}</li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"EditUser_ShouldChangePasswordOnNextLogin\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_ShouldChangePasswordOnNextLogin\\\" type=\\\"checkbox\\\" name=\\\"ShouldChangePasswordOnNextLogin\\\" [(ngModel)]=\\\"user.shouldChangePasswordOnNextLogin\\\">\\r\\n                                    {{\\\"ShouldChangePasswordOnNextLogin\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n\\r\\n                                <label for=\\\"EditUser_SendActivationEmail\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_SendActivationEmail\\\" type=\\\"checkbox\\\" name=\\\"SendActivationEmail\\\" [(ngModel)]=\\\"sendActivationEmail\\\">\\r\\n                                    {{\\\"SendActivationEmail\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n\\r\\n                                <label for=\\\"EditUser_IsActive\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_IsActive\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"user.isActive\\\">\\r\\n                                    {{\\\"Active\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n\\r\\n                                <label *ngIf=\\\"isTwoFactorEnabled\\\" for=\\\"EditUser_IsTwoFactorEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_IsTwoFactorEnabled\\\" type=\\\"checkbox\\\" name=\\\"IsTwoFactorEnabled\\\" [(ngModel)]=\\\"user.isTwoFactorEnabled\\\">\\r\\n                                    {{\\\"IsTwoFactorEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n\\r\\n                                <label *ngIf=\\\"isLockoutEnabled\\\" for=\\\"EditUser_IsLockoutEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_IsLockoutEnabled\\\" type=\\\"checkbox\\\" name=\\\"IsLockoutEnabled\\\" [(ngModel)]=\\\"user.isLockoutEnabled\\\">\\r\\n                                    {{\\\"IsLockoutEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        <!-- </tab> -->\\r\\n                        <!-- <tab heading=\\\"{{'Roles' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <ng-template tabHeading>\\r\\n                                <span class=\\\"badge badge-primary\\\">{{getAssignedRoleCount()}}</span>\\r\\n                            </ng-template>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label attr.for=\\\"EditUser_{{role.roleName}}\\\" class=\\\"m-checkbox\\\" *ngFor=\\\"let role of roles\\\">\\r\\n                                    <input id=\\\"EditUser_{{role.roleName}}\\\" type=\\\"checkbox\\\" name=\\\"{{role.roleName}}\\\" [(ngModel)]=\\\"role.isAssigned\\\">\\r\\n                                    {{role.roleDisplayName}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </tab> -->\\r\\n                    <!-- </tabset> -->\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!userForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { AfterViewChecked, Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CreateOrUpdateUserInput, OrganizationUnitDto, PasswordComplexitySetting, ProfileServiceProxy, UserEditDto, UserRoleDto, UserServiceProxy, InstructorDto, InstructorsServiceProxy, CreateInstructorUserInput } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport * as _ from 'lodash';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'createOrEditInstructorUserModal',\r\n    templateUrl: './create-or-edit-instructor-user-modal.component.html',\r\n    styles: [`.user-edit-dialog-profile-image {\r\n             margin-bottom: 20px;\r\n        }`\r\n    ]\r\n})\r\nexport class CreateOrEditInstructorUserModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n    canChangeUserName = true;\r\n    isTwoFactorEnabled: boolean = this.setting.getBoolean('Abp.Zero.UserManagement.TwoFactorLogin.IsEnabled');\r\n    isLockoutEnabled: boolean = this.setting.getBoolean('Abp.Zero.UserManagement.UserLockOut.IsEnabled');\r\n    passwordComplexitySetting: PasswordComplexitySetting = new PasswordComplexitySetting();\r\n\r\n    user: UserEditDto = new UserEditDto();\r\n    roles: UserRoleDto[];\r\n    sendActivationEmail = true;\r\n    setRandomPassword = true;\r\n    passwordComplexityInfo = '';\r\n    profilePicture: string;\r\n\r\n    userLastName : string;\r\n    userFirstName : string;\r\n    userEmail: string;\r\n\r\n    allOrganizationUnits: OrganizationUnitDto[];\r\n    memberedOrganizationUnits: string[];\r\n\r\n    instructor: InstructorDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _instructorService: InstructorsServiceProxy,\r\n        private _userService: UserServiceProxy,\r\n        private _profileService: ProfileServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(lastName: string, firstName: string, email: string, instructor: InstructorDto, userId?: number): void {\r\n\r\n\r\n        if (!userId) {\r\n            this.active = true;\r\n            this.setRandomPassword = true;\r\n            this.sendActivationEmail = true;\r\n           \r\n          \r\n            this.userLastName = lastName;\r\n            this.userFirstName = firstName;\r\n            this.userEmail = email;\r\n            this.instructor = instructor;\r\n        }\r\n\r\n        this._userService.getUserForEdit(userId).subscribe(userResult => {\r\n            this.user = userResult.user;\r\n            this.roles = userResult.roles;\r\n            this.canChangeUserName = this.user.userName !== AppConsts.userManagement.defaultAdminUserName;\r\n\r\n            this.allOrganizationUnits = userResult.allOrganizationUnits;\r\n            this.memberedOrganizationUnits = userResult.memberedOrganizationUnits;\r\n\r\n            this.getProfilePicture(userResult.profilePictureId);\r\n\r\n            if (userId) {\r\n                this.active = true;\r\n\r\n                setTimeout(() => {\r\n                    this.setRandomPassword = false;\r\n                }, 0);\r\n\r\n                this.sendActivationEmail = false;\r\n            }\r\n\r\n            this._profileService.getPasswordComplexitySetting().subscribe(passwordComplexityResult => {\r\n                this.passwordComplexitySetting = passwordComplexityResult.setting;\r\n                this.setPasswordComplexityInfo();\r\n                this.modal.show();\r\n            });\r\n        });\r\n    }\r\n\r\n    setPasswordComplexityInfo(): void {\r\n\r\n        this.passwordComplexityInfo = '<ul>';\r\n\r\n        if (this.passwordComplexitySetting.requireDigit) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireDigit_Hint') + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireLowercase) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireLowercase_Hint') + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireUppercase) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireUppercase_Hint') + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireNonAlphanumeric) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireNonAlphanumeric_Hint') + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requiredLength) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequiredLength_Hint', this.passwordComplexitySetting.requiredLength) + '</li>';\r\n        }\r\n\r\n        this.passwordComplexityInfo += '</ul>';\r\n    }\r\n\r\n    getProfilePicture(profilePictureId: string): void {\r\n        if (!profilePictureId) {\r\n            this.profilePicture = this.appRootUrl() + 'assets/common/images/default-profile-picture.png';\r\n        } else {\r\n            this._profileService.getProfilePictureById(profilePictureId).subscribe(result => {\r\n\r\n                if (result && result.profilePicture) {\r\n                    this.profilePicture = 'data:image/jpeg;base64,' + result.profilePicture;\r\n                } else {\r\n                    this.profilePicture = this.appRootUrl() + 'assets/common/images/default-profile-picture.png';\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onShown(): void {\r\n\r\n        document.getElementById('UserName').focus();\r\n    }\r\n\r\n    save(): void {\r\n        let input = new CreateInstructorUserInput();\r\n\r\n        input.user = this.user;\r\n        input.user.name = this.userLastName;\r\n        input.user.surname = this.userFirstName; \r\n        input.user.emailAddress = this.userEmail;\r\n\r\n        input.setRandomPassword = this.setRandomPassword;\r\n        input.sendActivationEmail = this.sendActivationEmail;\r\n\r\n        input.instructor = this.instructor;\r\n\r\n        this.saving = true;\r\n        this._instructorService.createUserAsync(input)\r\n            .pipe(finalize(() => { this.saving = false; }))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    getAssignedRoleCount(): number {\r\n        return _.filter(this.roles, { isAssigned: true }).length;\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"Instructors\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"InstructorsHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\t\\t\\t\\t<button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.Instructors.Create')\\\" (click)=\\\"createInstructor()\\\" \\r\\n\\t\\t\\tclass=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewInstructor\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getInstructors()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row m--margin-bottom-10\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"m-separator m-separator--dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"FirstNameFilter\\\">{{l(\\\"FirstName\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"FirstNameFilter\\\" name=\\\"firstNameFilter\\\" [(ngModel)]=\\\"firstNameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"LastNameFilter\\\">{{l(\\\"LastName\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"LastNameFilter\\\" name=\\\"lastNameFilter\\\" [(ngModel)]=\\\"lastNameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label  for=\\\"MinDateOfBirthFilter\\\">{{l(\\\"MinMax\\\")}} {{l(\\\"DateOfBirth\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\r\\n                                        <input class=\\\"form-control m-input\\\" id=\\\"MinDateOfBirthFilter\\\" name=\\\"MinDateOfBirthFilter\\\" type=\\\"datetime\\\" bsDatepicker  placeholder=\\\"{{l('MinValue')}}\\\" [(ngModel)]=\\\"minDateOfBirthFilter\\\">\\r\\n                                        <input class=\\\"form-control m-input\\\" id=\\\"MaxDateOfBirthFilter\\\" name=\\\"MaxDateOfBirthFilter\\\" type=\\\"datetime\\\" bsDatepicker  placeholder=\\\"{{l('MaxValue')}}\\\" [(ngModel)]=\\\"maxDateOfBirthFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"CityFilter\\\">{{l(\\\"City\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"CityFilter\\\" name=\\\"cityFilter\\\" [(ngModel)]=\\\"cityFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ZipCodeFilter\\\">{{l(\\\"ZipCode\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ZipCodeFilter\\\" name=\\\"zipCodeFilter\\\" [(ngModel)]=\\\"zipCodeFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"StateFilter\\\">{{l(\\\"State\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"StateFilter\\\" name=\\\"stateFilter\\\" [(ngModel)]=\\\"stateFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"CountryFilter\\\">{{l(\\\"Country\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"CountryFilter\\\" name=\\\"countryFilter\\\" [(ngModel)]=\\\"countryFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"LicenseClassClassFilter\\\">{{l(\\\"LicenseClass\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"LicenseClassClassFilter\\\" name=\\\"licenseClassClassFilter\\\" [(ngModel)]=\\\"licenseClassClassFilter\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getInstructors($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Instructors.Edit', 'Pages.Administration.Instructors.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"instructor.firstName\\\">\\r\\n                                        {{l('FirstName')}}\\r\\n                                        <p-sortIcon field=\\\"instructor.firstName\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"instructor.lastName\\\">\\r\\n                                        {{l('LastName')}}\\r\\n                                        <p-sortIcon field=\\\"instructor.lastName\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"instructor.email\\\">\\r\\n                                        {{l('Email')}}\\r\\n                                        <p-sortIcon field=\\\"instructor.email\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 80px\\\" pSortableColumn=\\\"userExists\\\">\\r\\n                                        {{l('UserExists')}}\\r\\n                                        <p-sortIcon field=\\\"userExists\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"userName\\\">\\r\\n                                        {{l('UserName')}}\\r\\n                                        <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Instructors.Edit', 'Pages.Administration.Instructors.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewInstructorModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Instructors.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditInstructorModal.show(record.instructor.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Instructors.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteInstructor(record.instructor)\\\">{{l('Delete')}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Instructors.Edit') && !record.userExists\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createUserAccount(record.instructor)\\\">{{l('CreateUser')}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record.instructor)\\\">{{l('History')}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('FirstName')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.instructor.firstName}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('LastName')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.instructor.lastName}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Email')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.instructor.email}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                        <td style=\\\"width:80px\\\">\\r\\n                                            <div *ngIf=\\\"record.userExists\\\" class=\\\"text-center\\\"><i class=\\\"fa fa-check-circle m--font-success\\\" title=\\\"True\\\"></i></div>\\r\\n                                            <div *ngIf=\\\"!record.userExists\\\" class=\\\"text-center\\\"><i class=\\\"fa fa-times-circle\\\" title=\\\"False\\\"></i></div>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('UserName')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.userName}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getInstructors($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditInstructorModal #createOrEditInstructorModal (modalSave)=\\\"getInstructors()\\\"></createOrEditInstructorModal>\\r\\n    <viewInstructorModal #viewInstructorModal></viewInstructorModal>\\r\\n     <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n     <createOrEditInstructorUserModal #createOrEditInstructorUserModal (modalSave)=\\\"userAccountCreated()\\\"></createOrEditInstructorUserModal>\\r\\n</div>\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Http } from '@angular/http';\r\nimport { InstructorsServiceProxy, InstructorDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditInstructorModalComponent } from './create-or-edit-instructor-modal.component';\r\nimport { ViewInstructorModalComponent } from './view-instructor-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\nimport { CreateOrEditInstructorUserModalComponent } from './create-or-edit-instructor-user-modal.component';\r\n\r\n@Component({\r\n    templateUrl: './instructors.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class InstructorsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditInstructorModal') createOrEditInstructorModal: CreateOrEditInstructorModalComponent;\r\n    @ViewChild('viewInstructorModalComponent') viewInstructorModal: ViewInstructorModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    @ViewChild('createOrEditInstructorUserModal') createOrEditInstructorUserModal: CreateOrEditInstructorUserModalComponent;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    firstNameFilter = '';\r\n    lastNameFilter = '';\r\n    maxDateOfBirthFilter : moment.Moment;\r\n\t\tminDateOfBirthFilter : moment.Moment;\r\n    cityFilter = '';\r\n    zipCodeFilter = '';\r\n    stateFilter = '';\r\n    countryFilter = '';\r\n        licenseClassClassFilter = '';\r\n\r\n\r\n    _entityTypeFullName = 'Drima.Instructors.Instructor';\r\n    entityHistoryEnabled = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _instructorsServiceProxy: InstructorsServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getInstructors(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._instructorsServiceProxy.getAll(\r\n            this.filterText,\r\n            this.firstNameFilter,\r\n            this.lastNameFilter,\r\n            this.maxDateOfBirthFilter,\r\n            this.minDateOfBirthFilter,\r\n            this.cityFilter,\r\n            this.zipCodeFilter,\r\n            this.stateFilter,\r\n            this.countryFilter,\r\n            this.licenseClassClassFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createInstructor(): void {\r\n        this.createOrEditInstructorModal.show();\r\n    }\r\n\r\n    showHistory(instructor: InstructorDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: instructor.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: ''\r\n        });\r\n    }\r\n\r\n    deleteInstructor(instructor: InstructorDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._instructorsServiceProxy.delete(instructor.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._instructorsServiceProxy.getInstructorsToExcel(\r\n        this.filterText,\r\n            this.firstNameFilter,\r\n            this.lastNameFilter,\r\n            this.maxDateOfBirthFilter,\r\n            this.minDateOfBirthFilter,\r\n            this.cityFilter,\r\n            this.zipCodeFilter,\r\n            this.stateFilter,\r\n            this.countryFilter,\r\n            this.licenseClassClassFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n\r\n    createUserAccount(instructor : InstructorDto): void {\r\n        this.createOrEditInstructorUserModal.show(instructor.lastName, instructor.firstName, instructor.email, instructor);\r\n    }\r\n\r\n    userAccountCreated()\r\n    {\r\n        this.reloadPage();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"PickLicenseClass\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n                    <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                        <div class=\\\"m-portlet__body\\\">\\r\\n                            <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                                <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                                    <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                                        <div class=\\\"col-xl-12\\\">\\r\\n                                            <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                                <div class=\\\"input-group\\\">\\r\\n                                                    <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                                    <span class=\\\"input-group-btn\\\">\\r\\n                                                        <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                            <div class=\\\"row align-items-center\\\">\\r\\n                                <div class=\\\"primeng-datatable-container\\\"\\r\\n                                     [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                                    <p-table #dataTable\\r\\n                                                 (onLazyLoad)=\\\"getAll($event)\\\"\\r\\n                                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                                 rows =\\\"5\\\"\\r\\n                                                 [paginator]=\\\"false\\\"\\r\\n                                                 [lazy]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\t [scrollable]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t ScrollWidth=\\\"100%\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 130px\\\" >{{l('Actions')}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 150px\\\" pSortableColumn=\\\"displayName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('Class')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon field=\\\"displayName\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                                    <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\" (click)=\\\"setAndSave(record)\\\">\\r\\n                                                        {{l(\\\"Select\\\")}}\\r\\n                                                    </button>\\r\\n                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Class')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.displayName}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n                                    </p-table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('NoData')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                    <div class=\\\"primeng-paging-container\\\">\\r\\n                                        <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                                     #paginator\\r\\n                                                     styleClass=\\\"licenseClass-lookup-table-paginator\\\"\\r\\n                                                     (onPageChange)=\\\"getAll($event)\\\"\\r\\n                                                     [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                                     [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                        </p-paginator>\\r\\n                                        <span class=\\\"total-records-count\\\">\\r\\n                                            {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".licenseClass-lookup-table-paginator .ui-paginator-rpp-options {\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaW5zdHJ1Y3RvcnMvaW5zdHJ1Y3RvcnMvRDovRHJpbWEgQXNwTmV0WmVyby9hbmd1bGFyL3NyYy9hcHAvYWRtaW4vaW5zdHJ1Y3RvcnMvaW5zdHJ1Y3RvcnMvbGljZW5zZUNsYXNzLWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQubGVzcyIsInNyYy9hcHAvYWRtaW4vaW5zdHJ1Y3RvcnMvaW5zdHJ1Y3RvcnMvbGljZW5zZUNsYXNzLWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGFBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2luc3RydWN0b3JzL2luc3RydWN0b3JzL2xpY2Vuc2VDbGFzcy1sb29rdXAtdGFibGUtbW9kYWwuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGljZW5zZUNsYXNzLWxvb2t1cC10YWJsZS1wYWdpbmF0b3Ige1xuICAgIC51aS1wYWdpbmF0b3ItcnBwLW9wdGlvbnMge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cbiIsIi5saWNlbnNlQ2xhc3MtbG9va3VwLXRhYmxlLXBhZ2luYXRvciAudWktcGFnaW5hdG9yLXJwcC1vcHRpb25zIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */\"","import { Component, ViewChild, Injector, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport {InstructorsServiceProxy, InstructorLicenseClassLookupTableDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\n@Component({\r\n    selector: 'licenseClassLookupTableModal',\r\n    styleUrls: ['./licenseClass-lookup-table-modal.component.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './licenseClass-lookup-table-modal.component.html'\r\n})\r\nexport class LicenseClassLookupTableModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    filterText = '';\r\n    id: number;\r\n    displayName: string;\r\n    \r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n    active = false;\r\n    saving = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _instructorsServiceProxy: InstructorsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(): void {\r\n        this.active = true;\r\n        this.paginator.rows = 5;\r\n        this.getAll();\r\n        this.modal.show();\r\n    }\r\n\r\n    getAll(event?: LazyLoadEvent) {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._instructorsServiceProxy.getAllLicenseClassForLookupTable(\r\n            this.filterText,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    setAndSave(licenseClass: InstructorLicenseClassLookupTableDto) {\r\n        this.id = licenseClass.id;\r\n        this.displayName = licenseClass.displayName;\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"PickDefaultOffice\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n                    <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                        <div class=\\\"m-portlet__body\\\">\\r\\n                            <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                                <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                                    <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                                        <div class=\\\"col-xl-12\\\">\\r\\n                                            <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                                <div class=\\\"input-group\\\">\\r\\n                                                    <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                                    <span class=\\\"input-group-btn\\\">\\r\\n                                                        <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                            <div class=\\\"row align-items-center\\\">\\r\\n                                <div class=\\\"primeng-datatable-container\\\"\\r\\n                                     [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                                    <p-table #dataTable\\r\\n                                                 (onLazyLoad)=\\\"getAll($event)\\\"\\r\\n                                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                                 rows =\\\"5\\\"\\r\\n                                                 [paginator]=\\\"false\\\"\\r\\n                                                 [lazy]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\t [scrollable]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t ScrollWidth=\\\"100%\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 130px\\\" >{{l('Actions')}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('Name')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon field=\\\"name\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                                    <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\" (click)=\\\"setAndSave(record)\\\">\\r\\n                                                        {{l(\\\"Select\\\")}}\\r\\n                                                    </button>\\r\\n                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Class')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n                                    </p-table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('NoData')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                    <div class=\\\"primeng-paging-container\\\">\\r\\n                                        <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                                     #paginator\\r\\n                                                     styleClass=\\\"licenseClass-lookup-table-paginator\\\"\\r\\n                                                     (onPageChange)=\\\"getAll($event)\\\"\\r\\n                                                     [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                                     [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                        </p-paginator>\\r\\n                                        <span class=\\\"total-records-count\\\">\\r\\n                                            {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".licenseClass-lookup-table-paginator .ui-paginator-rpp-options {\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaW5zdHJ1Y3RvcnMvaW5zdHJ1Y3RvcnMvRDovRHJpbWEgQXNwTmV0WmVyby9hbmd1bGFyL3NyYy9hcHAvYWRtaW4vaW5zdHJ1Y3RvcnMvaW5zdHJ1Y3RvcnMvb2ZmaWNlLWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQubGVzcyIsInNyYy9hcHAvYWRtaW4vaW5zdHJ1Y3RvcnMvaW5zdHJ1Y3RvcnMvb2ZmaWNlLWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGFBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2luc3RydWN0b3JzL2luc3RydWN0b3JzL29mZmljZS1sb29rdXAtdGFibGUtbW9kYWwuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGljZW5zZUNsYXNzLWxvb2t1cC10YWJsZS1wYWdpbmF0b3Ige1xuICAgIC51aS1wYWdpbmF0b3ItcnBwLW9wdGlvbnMge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cbiIsIi5saWNlbnNlQ2xhc3MtbG9va3VwLXRhYmxlLXBhZ2luYXRvciAudWktcGFnaW5hdG9yLXJwcC1vcHRpb25zIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */\"","import { Component, ViewChild, Injector, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { InstructorsServiceProxy, InstructorOfficeLookupTableDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\n@Component({\r\n    selector: 'officeLookupTableModal',\r\n    styleUrls: ['./office-lookup-table-modal.component.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './office-lookup-table-modal.component.html'\r\n})\r\nexport class OfficeLookupTableModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    filterText = '';\r\n    id: number;\r\n    name: string;\r\n    \r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n    active = false;\r\n    saving = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _instructorsServiceProxy: InstructorsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(): void {\r\n        this.active = true;\r\n        this.paginator.rows = 5;\r\n        this.getAll();\r\n        this.modal.show();\r\n    }\r\n\r\n    getAll(event?: LazyLoadEvent) {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._instructorsServiceProxy.getAllOfficesForLookupTable(\r\n            this.filterText,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    setAndSave(office: InstructorOfficeLookupTableDto) {\r\n        this.id = office.id;\r\n        this.name = office.name;\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"FirstName\\\")}} :</h6>\\r\\n                        {{item.instructor.firstName}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"LastName\\\")}} :</h6>\\r\\n                        {{item.instructor.lastName}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Email\\\")}} :</h6>\\r\\n                        {{item.instructor.email}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"PhoneNumber\\\")}} :</h6>\\r\\n                        {{item.instructor.phoneNumber}}\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"LicenseClass\\\")}} :</h6>\\r\\n                        {{licenseClasses}}\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetInstructorForViewDto, InstructorDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewInstructorModal',\r\n    templateUrl: './view-instructor-modal.component.html'\r\n})\r\nexport class ViewInstructorModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetInstructorForViewDto;\r\n    licenseClasses = 'None';\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetInstructorForViewDto();\r\n        this.item.instructor = new InstructorDto();\r\n        this.updateLicenseClass();\r\n    }\r\n\r\n    show(item: GetInstructorForViewDto): void {\r\n        this.item = item;\r\n        this.updateLicenseClass();\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    updateLicenseClass() : void \r\n    {\r\n        if(this.item.instructor.licenseClasses == null)\r\n            return;\r\n\r\n        for(var i = 0; i < this.item.instructor.licenseClasses.length; i++)\r\n        {\r\n            if(i == 0)\r\n                this.licenseClasses = this.item.instructor.licenseClasses[i];\r\n            else\r\n                this.licenseClasses += ', ' + this.item.instructor.licenseClasses[i];\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"language.id\\\">{{\\\"EditLanguage\\\" | localize}}: {{language.name}}</span>\\r\\n                        <span *ngIf=\\\"!language.id\\\">{{\\\"CreateNewLanguage\\\" | localize}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <select #languageCombobox\\r\\n                                name=\\\"languageName\\\"\\r\\n                                class=\\\"form-control\\\"\\r\\n                                [(ngModel)]=\\\"language.name\\\"\\r\\n                                required>\\r\\n                            <option value=\\\"\\\">{{emptyText}}</option>\\r\\n                            <option *ngFor=\\\"let languageName of languageNames\\\" [value]=\\\"languageName.value\\\">{{languageName.displayText}}</option>\\r\\n                        </select>\\r\\n                        <validation-messages [formCtrl]=\\\"languageCombobox\\\"></validation-messages>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <select #iconCombobox\\r\\n                                name=\\\"languageIcon\\\"\\r\\n                                class=\\\"form-control\\\"\\r\\n                                [(ngModel)]=\\\"language.icon\\\">\\r\\n                            <option value=\\\"\\\">{{emptyText}}</option>\\r\\n                            <option *ngFor=\\\"let flag of flags\\\" [value]=\\\"flag.value\\\" [attr.data-icon]=\\\"flag.value\\\">{{flag.displayText}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"m-checkbox-list\\\">\\r\\n                        <label for=\\\"EditLanguage_IsEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"EditLanguage_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"languageIsEnabled\\\"\\r\\n                                   [(ngModel)]=\\\"language.isEnabled\\\">\\r\\n                            {{\\\"IsEnabled\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ApplicationLanguageEditDto, ComboboxItemDto, CreateOrUpdateLanguageInput, LanguageServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'createOrEditLanguageModal',\r\n    templateUrl: './create-or-edit-language-modal.component.html'\r\n})\r\nexport class CreateOrEditLanguageModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('languageCombobox') languageCombobox: ElementRef;\r\n    @ViewChild('iconCombobox') iconCombobox: ElementRef;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    language: ApplicationLanguageEditDto = new ApplicationLanguageEditDto();\r\n\r\n    languageNames: ComboboxItemDto[] = [];\r\n    flags: ComboboxItemDto[] = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _languageService: LanguageServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(languageId?: number): void {\r\n        this.active = true;\r\n\r\n        this._languageService.getLanguageForEdit(languageId).subscribe(result => {\r\n            this.language = result.language;\r\n            this.languageNames = result.languageNames;\r\n            this.flags = result.flags;\r\n\r\n            if (!languageId) {\r\n                this.language.isEnabled = true;\r\n            }\r\n\r\n            this.modal.show();\r\n        });\r\n    }\r\n\r\n    save(): void {\r\n        let input = new CreateOrUpdateLanguageInput();\r\n        input.language = this.language;\r\n\r\n        this.saving = true;\r\n        this._languageService.createOrUpdateLanguage(input)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" (onShown)=\\\"onShown()\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>{{\\\"EditText\\\" | localize}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>{{\\\"Key\\\" | localize}}</label>\\r\\n                        <div><strong>{{model.key}}</strong></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <label for=\\\"BaseLanguageDisplayName\\\"><i class=\\\"{{baseLanguage.icon}}\\\"></i> {{baseLanguage.displayName}} </label>\\r\\n                        <textarea id=\\\"BaseLanguageDisplayName\\\" readonly class=\\\"form-control edited\\\" rows=\\\"4\\\" [ngModel]=\\\"baseText\\\" name=\\\"baseText\\\"></textarea>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <label for=\\\"TargetLanguageDisplayName\\\"><i class=\\\"{{targetLanguage.icon}}\\\"></i> {{targetLanguage.displayName}} </label>\\r\\n                        <textarea id=\\\"TargetLanguageDisplayName\\\" #targetValueInput class=\\\"form-control\\\" [ngClass]=\\\"{'edited':model.value}\\\" rows=\\\"4\\\" [(ngModel)]=\\\"model.value\\\" name=\\\"value\\\"></textarea>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { LanguageServiceProxy, UpdateLanguageTextInput } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'editTextModal',\r\n    templateUrl: './edit-text-modal.component.html'\r\n})\r\nexport class EditTextModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('targetValueInput') targetValueInput: ElementRef;\r\n    @ViewChild('modal') modal: ModalDirective;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    model: UpdateLanguageTextInput = new UpdateLanguageTextInput();\r\n\r\n    baseText: string;\r\n    baseLanguage: abp.localization.ILanguageInfo;\r\n    targetLanguage: abp.localization.ILanguageInfo;\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _languageService: LanguageServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(baseLanguageName: string, targetLanguageName: string, sourceName: string, key: string, baseText: string, targetText: string): void {\r\n        this.model.sourceName = sourceName;\r\n        this.model.key = key;\r\n        this.model.languageName = targetLanguageName;\r\n        this.model.value = targetText;\r\n\r\n        this.baseText = baseText;\r\n        this.baseLanguage = _.find(abp.localization.languages, l => l.name === baseLanguageName);\r\n        this.targetLanguage = _.find(abp.localization.languages, l => l.name === targetLanguageName);\r\n\r\n        this.active = true;\r\n\r\n        this.modal.show();\r\n    }\r\n\r\n    onShown(): void {\r\n        (this.targetValueInput.nativeElement as any).focus();\r\n    }\r\n\r\n    save(): void {\r\n        this.saving = true;\r\n        this._languageService.updateLanguageText(this.model)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    private findLanguage(name: string): abp.localization.ILanguageInfo {\r\n        return _.find(abp.localization.languages, l => l.name === name);\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"LanguageTexts\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"LanguageTextsHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <form autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\" id=\\\"TextsFilterForm\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"TextBaseLanguageSelectionCombobox\\\">{{\\\"BaseLanguage\\\" | localize}}</label>\\r\\n                                    <select #baseLanguageNameCombobox\\r\\n                                            name=\\\"baseLanguageName\\\"\\r\\n                                            class=\\\"form-control bs-select\\\"\\r\\n                                            [(ngModel)]=\\\"baseLanguageName\\\">\\r\\n                                        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language.name\\\" [attr.data-icon]=\\\"language.icon\\\">{{language.displayName}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"TextTargetLanguageSelectionCombobox\\\">{{\\\"TargetLanguage\\\" | localize}}</label>\\r\\n                                    <select #targetLanguageNameCombobox\\r\\n                                            name=\\\"targetLanguageName\\\"\\r\\n                                            class=\\\"form-control bs-select\\\"\\r\\n                                            [(ngModel)]=\\\"targetLanguageName\\\">\\r\\n                                        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language.name\\\" [attr.data-icon]=\\\"language.icon\\\">{{language.displayName}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"TextSourceSelectionCombobox\\\">{{\\\"Source\\\" | localize}}</label>\\r\\n                                    <select #sourceNameCombobox\\r\\n                                            name=\\\"sourceName\\\"\\r\\n                                            class=\\\"form-control bs-select\\\"\\r\\n                                            [(ngModel)]=\\\"sourceName\\\">\\r\\n                                        <option *ngFor=\\\"let sourceName of sourceNames\\\" [value]=\\\"sourceName\\\">{{sourceName}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"TargetValueFilterSelectionCombobox\\\">{{\\\"TargetValue\\\" | localize}}</label>\\r\\n                                    <select #targetValueFilterCombobox\\r\\n                                            name=\\\"targetValueFilter\\\"\\r\\n                                            class=\\\"form-control bs-select\\\"\\r\\n                                            [(ngModel)]=\\\"targetValueFilter\\\">\\r\\n                                        <option value=\\\"ALL\\\">{{\\\"All\\\" | localize}}</option>\\r\\n                                        <option value=\\\"EMPTY\\\">{{\\\"EmptyOnes\\\" | localize}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control\\\" placeholder=\\\"{{'SearchWithThreeDot' | localize}}\\\" type=\\\"text\\\">\\r\\n                                    <span class=\\\"input-group-btn\\\">\\r\\n                                        <button (click)=\\\"applyFilters()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"icon-refresh\\\"></i> {{\\\"Refresh\\\" | localize}}</button>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-TurboTable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                 (onLazyLoad)=\\\"getLanguageTexts($event)\\\"\\r\\n                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 [paginator]=\\\"false\\\"\\r\\n                                 [lazy]=\\\"true\\\"\\r\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th pSortableColumn=\\\"key\\\">\\r\\n                                        {{'Key' | localize}}\\r\\n                                        <p-sortIcon field=\\\"key\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th pSortableColumn=\\\"baseValue\\\">\\r\\n                                        {{'BaseValue' | localize}}\\r\\n                                        <p-sortIcon field=\\\"baseValue\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th pSortableColumn=\\\"targetValue\\\">\\r\\n                                        {{'TargetValue' | localize}}\\r\\n                                        <p-sortIcon field=\\\"targetValue\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th>{{'Edit' | localize}}</th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Key' | localize}}</span>\\r\\n                                        <span title=\\\"{{record.key}}\\\">{{truncateString(record.key)}}</span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'BaseValue' | localize}}</span>\\r\\n                                        <span title=\\\"{{record.baseValue}}\\\">{{truncateString(record.baseValue)}}</span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'TargetValue' | localize}}</span>\\r\\n                                        <span title=\\\"{{record.targetValue}}\\\">{{truncateString(record.targetValue) }}</span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <button class=\\\"btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill\\\"\\r\\n                                                (click)=\\\"editTextModal.show(baseLanguageName,targetLanguageName,sourceName,record.key,record.baseValue,record.targetValue)\\\"\\r\\n                                                title=\\\"{{'Edit' | localize}}\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\" [attr.aria-label]=\\\"l('Edit')\\\"></i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{'NoData' | localize}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getLanguageTexts($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-TurboTable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <editTextModal #editTextModal (modalSave)=\\\"refreshTextValueFromModal()\\\"></editTextModal>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xhbmd1YWdlcy9sYW5ndWFnZS10ZXh0cy5jb21wb25lbnQubGVzcyJ9 */\"","import { AfterViewInit, Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { LanguageServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { EditTextModalComponent } from './edit-text-modal.component';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './language-texts.component.html',\r\n    styleUrls: ['./language-texts.component.less'],\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class LanguageTextsComponent extends AppComponentBase implements AfterViewInit, OnInit {\r\n\r\n    @ViewChild('targetLanguageNameCombobox') targetLanguageNameCombobox: ElementRef;\r\n    @ViewChild('baseLanguageNameCombobox') baseLanguageNameCombobox: ElementRef;\r\n    @ViewChild('sourceNameCombobox') sourceNameCombobox: ElementRef;\r\n    @ViewChild('targetValueFilterCombobox') targetValueFilterCombobox: ElementRef;\r\n    @ViewChild('textsTable') textsTable: ElementRef;\r\n    @ViewChild('editTextModal') editTextModal: EditTextModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    sourceNames: string[] = [];\r\n    languages: abp.localization.ILanguageInfo[] = [];\r\n    targetLanguageName: string;\r\n    sourceName: string;\r\n    baseLanguageName: string;\r\n    targetValueFilter: string;\r\n    filterText: string;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _languageService: LanguageServiceProxy,\r\n        private _router: Router,\r\n        private _activatedRoute: ActivatedRoute\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.sourceNames = _.map(_.filter(abp.localization.sources, source => source.type === 'MultiTenantLocalizationSource'), value => value.name);\r\n        this.languages = abp.localization.languages;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            this.init();\r\n        });\r\n    }\r\n\r\n    getLanguageTexts(event?: LazyLoadEvent) {\r\n        if (!this.paginator || !this.dataTable || !this.sourceName) {\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._languageService.getLanguageTexts(\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.sourceName,\r\n            this.baseLanguageName,\r\n            this.targetLanguageName,\r\n            this.targetValueFilter,\r\n            this.filterText\r\n        ).pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator())).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    init(): void {\r\n        this._activatedRoute.params.subscribe((params: Params) => {\r\n            this.baseLanguageName = params['baseLanguageName'] || abp.localization.currentLanguage.name;\r\n            this.targetLanguageName = params['name'];\r\n            this.sourceName = params['sourceName'] || 'Drima';\r\n            this.targetValueFilter = params['targetValueFilter'] || 'ALL';\r\n            this.filterText = params['filterText'] || '';\r\n\r\n            this.reloadPage();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    applyFilters(): void {\r\n        this._router.navigate(['app/admin/languages', this.targetLanguageName, 'texts', {\r\n            sourceName: this.sourceName,\r\n            baseLanguageName: this.baseLanguageName,\r\n            targetValueFilter: this.targetValueFilter,\r\n            filterText: this.filterText\r\n        }]);\r\n\r\n        if (this.paginator.getPage() !== 0) {\r\n            this.paginator.changePage(0);\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    truncateString(text): string {\r\n        return abp.utils.truncateStringWithPostfix(text, 32, '...');\r\n    }\r\n\r\n    refreshTextValueFromModal(): void {\r\n        for (let i = 0; i < this.primengTableHelper.records.length; i++) {\r\n            if (this.primengTableHelper.records[i].key === this.editTextModal.model.key) {\r\n                this.primengTableHelper.records[i].targetValue = this.editTextModal.model.value;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"Languages\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"LanguagesHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col text-right mt-3 mt-md-0\\\">\\r\\n                <button *ngIf=\\\"('Pages.Administration.Languages.Create' | permission) && multiTenancySideIsHost\\\" (click)=\\\"createOrEditLanguageModal.show()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus\\\"></i> {{\\\"CreateNewLanguage\\\" | localize}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-TurboTable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                 (onLazyLoad)=\\\"getLanguages()\\\"\\r\\n                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 [paginator]=\\\"false\\\"\\r\\n                                 [lazy]=\\\"true\\\"\\r\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Languages.Edit', 'Pages.Administration.Languages.ChangeTexts', 'Pages.Administration.Languages.Delete')\\\">\\r\\n                                        {{'Actions' | localize}}\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'Name' | localize}}\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'Code' | localize}}\\r\\n                                    </th>\\r\\n                                    <th *ngIf=\\\"appSession.tenantId ? true : false\\\">\\r\\n                                        {{'Default' | localize}} *\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'CreationTime' | localize}}\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'IsEnabled' | localize}}\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px; text-align: center\\\">\\r\\n                                        <div class=\\\"btn-group dropdown\\\" dropdown>\\r\\n                                            <button dropdownToggle class=\\\"dropdown-toggle btn btn-sm btn-primary\\\">\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{\\\"Actions\\\" | localize}}\\r\\n                                            </button>\\r\\n                                            <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"('Pages.Administration.Languages.Edit' | permission) && record.tenantId === appSession.tenantId\\\"\\r\\n                                                       (click)=\\\"createOrEditLanguageModal.show(record.id)\\\">{{'Edit' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Administration.Languages.ChangeTexts' | permission\\\"\\r\\n                                                       (click)=\\\"changeTexts(record)\\\">{{'ChangeTexts' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Administration.Languages.Edit' | permission\\\"\\r\\n                                                       (click)=\\\"setAsDefaultLanguage(record)\\\">{{'SetAsDefaultLanguage' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"('Pages.Administration.Languages.Delete' | permission) && record.tenantId === appSession.tenantId\\\"\\r\\n                                                       (click)=\\\"deleteLanguage(record)\\\">{{'Delete' | localize}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Name' | localize}}</span>\\r\\n                                        <span [ngClass]=\\\"{'text-bold' : defaultLanguageName === record.name}\\\">\\r\\n                                            <i [ngClass]=\\\"record.icon\\\" class=\\\"margin-right-5\\\"></i>\\r\\n                                            {{record.displayName}} <span *ngIf=\\\"defaultLanguageName === record.name\\\">({{'Default' | localize}})</span>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Code' | localize}}</span>\\r\\n                                        {{record.name}}\\r\\n                                    </td>\\r\\n                                    <td *ngIf=\\\"appSession.tenantId ? true : false\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Default' | localize}}</span>\\r\\n                                        <span class=\\\"label m-badge m-badge--success m-badge--wide\\\"\\r\\n                                              *ngIf=\\\"record.tenantId !== appSession.tenantId\\\">\\r\\n                                            {{'Yes' | localize}}\\r\\n                                        </span>\\r\\n                                        <span class=\\\"label m-badge m-badge--metal m-badge--wide\\\"\\r\\n                                              *ngIf=\\\"record.tenantId === appSession.tenantId\\\">\\r\\n                                            {{'No' | localize}}\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'CreationTime' | localize}}</span>\\r\\n                                        {{record.creationTime | momentFormat:'L'}}\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'IsEnabled' | localize}}</span>\\r\\n                                        <span class=\\\"label m-badge m-badge--success m-badge--wide\\\"\\r\\n                                              *ngIf=\\\"!record.isDisabled\\\">\\r\\n                                            {{'Yes' | localize}}\\r\\n                                        </span>\\r\\n                                        <span class=\\\"label m-badge m-badge--metal m-badge--wide\\\"\\r\\n                                              *ngIf=\\\"record.isDisabled\\\">\\r\\n                                            {{'No' | localize}}\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{'NoData' | localize}}\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-table-footer\\\">\\r\\n                            {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-TurboTable-End>-->\\r\\n\\r\\n                    <p class=\\\"margin-top-20\\\" *ngIf=\\\"appSession.tenantId\\\">\\r\\n                        * {{\\\"CanNotEditOrDeleteDefaultLanguages\\\" | localize}}\\r\\n                    </p>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditLanguageModal #createOrEditLanguageModal (modalSave)=\\\"getLanguages()\\\"></createOrEditLanguageModal>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ApplicationLanguageListDto, LanguageServiceProxy, SetDefaultLanguageInput } from '@shared/service-proxies/service-proxies';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { CreateOrEditLanguageModalComponent } from './create-or-edit-language-modal.component';\r\nimport { AbpSessionService } from '@abp/session/abp-session.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './languages.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class LanguagesComponent extends AppComponentBase {\r\n\r\n    @ViewChild('languagesTable') languagesTable: ElementRef;\r\n    @ViewChild('createOrEditLanguageModal') createOrEditLanguageModal: CreateOrEditLanguageModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    defaultLanguageName: string;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _languageService: LanguageServiceProxy,\r\n        private _sessionService: AbpSessionService,\r\n        private _router: Router\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getLanguages(): void {\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._languageService.getLanguages()\r\n            .pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator()))\r\n            .subscribe(result => {\r\n            this.defaultLanguageName = result.defaultLanguageName;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.totalRecordsCount = result.items.length;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    changeTexts(language: ApplicationLanguageListDto): void {\r\n        this._router.navigate(['app/admin/languages', language.name, 'texts']);\r\n    }\r\n\r\n    setAsDefaultLanguage(language: ApplicationLanguageListDto): void {\r\n        const input = new SetDefaultLanguageInput();\r\n        input.name = language.name;\r\n        this._languageService.setDefaultLanguage(input).subscribe(() => {\r\n            this.getLanguages();\r\n            this.notify.success(this.l('SuccessfullySaved'));\r\n        });\r\n    }\r\n\r\n    deleteLanguage(language: ApplicationLanguageListDto): void {\r\n        this.message.confirm(\r\n            this.l('LanguageDeleteWarningMessage', language.displayName),\r\n            this.l('AreYouSure'),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._languageService.deleteLanguage(language.id).subscribe(() => {\r\n                        this.getLanguages();\r\n                        this.notify.success(this.l('SuccessfullyDeleted'));\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    get multiTenancySideIsHost(): boolean {\r\n        return !this._sessionService.tenantId;\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #predefinedDrivingLessonForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"predefinedDrivingLesson.id\\\">{{l(\\\"EditPredefinedDrivingLesson\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!predefinedDrivingLesson.id\\\">{{l(\\\"CreateNewPredefinedDrivingLesson\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedDrivingLesson_Name\\\">{{l(\\\"Name\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedDrivingLesson_Name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedDrivingLesson.name\\\" name=\\\"Name\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedDrivingLesson_Number\\\">{{l(\\\"Number\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" id=\\\"PredefinedDrivingLesson_Number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedDrivingLesson.number\\\" name=\\\"Number\\\"  />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedDrivingLesson_LessonIdString\\\">{{l(\\\"LessonIdString\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedDrivingLesson_LessonIdString\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedDrivingLesson.lessonIdString\\\" name=\\\"LessonIdString\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedDrivingLesson_Length\\\">{{l(\\\"Length\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" id=\\\"PredefinedDrivingLesson_Length\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedDrivingLesson.length\\\" name=\\\"Length\\\"  />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedDrivingLesson_RequiredForClasses\\\">{{l(\\\"RequiredForClasses\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedDrivingLesson_RequiredForClasses\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedDrivingLesson.requiredForClasses\\\" name=\\\"RequiredForClasses\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedDrivingLesson_NotRequiredIfClasses\\\">{{l(\\\"NotRequiredIfClasses\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedDrivingLesson_NotRequiredIfClasses\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedDrivingLesson.notRequiredIfClasses\\\" name=\\\"NotRequiredIfClasses\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!predefinedDrivingLessonForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","﻿import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PredefinedDrivingLessonsServiceProxy, CreateOrEditPredefinedDrivingLessonDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'createOrEditPredefinedDrivingLessonModal',\r\n    templateUrl: './create-or-edit-predefinedDrivingLesson-modal.component.html'\r\n})\r\nexport class CreateOrEditPredefinedDrivingLessonModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    predefinedDrivingLesson: CreateOrEditPredefinedDrivingLessonDto = new CreateOrEditPredefinedDrivingLessonDto();\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _predefinedDrivingLessonsServiceProxy: PredefinedDrivingLessonsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(predefinedDrivingLessonId?: number): void {\r\n\r\n        if (!predefinedDrivingLessonId) {\r\n            this.predefinedDrivingLesson = new CreateOrEditPredefinedDrivingLessonDto();\r\n            this.predefinedDrivingLesson.id = predefinedDrivingLessonId;\r\n\r\n            this.active = true;\r\n            this.modal.show();\r\n        } else {\r\n            this._predefinedDrivingLessonsServiceProxy.getPredefinedDrivingLessonForEdit(predefinedDrivingLessonId).subscribe(result => {\r\n                this.predefinedDrivingLesson = result.predefinedDrivingLesson;\r\n\r\n\r\n                this.active = true;\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n\t\t\t\r\n            this._predefinedDrivingLessonsServiceProxy.createOrEdit(this.predefinedDrivingLesson)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"PredefinedDrivingLessons\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"PredefinedDrivingLessonsHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.PredefinedDrivingLessons.Create')\\\" (click)=\\\"createPredefinedDrivingLesson()\\\" \\r\\n                class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewPredefinedDrivingLesson\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getPredefinedDrivingLessons()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t        <div class=\\\"m-separator m-separator--dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row mb-2\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container col-12\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getPredefinedDrivingLessons($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.PredefinedDrivingLessons.Edit', 'Pages.Administration.PredefinedDrivingLessons.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedDrivingLesson.name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"number\\\">\\r\\n                                        {{l('Number')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedDrivingLesson.number\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"lessonIdString\\\">\\r\\n                                        {{l('LessonIdString')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedDrivingLesson.lessonIdString\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"length\\\">\\r\\n                                        {{l('Length')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedDrivingLesson.length\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"requiredForClasses\\\">\\r\\n                                        {{l('RequiredForClasses')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedDrivingLesson.requiredForClasses\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"notRequiredIfClasses\\\">\\r\\n                                        {{l('NotRequiredIfClasses')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedDrivingLesson.notRequiredIfClasses\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.PredefinedDrivingLessons.Edit', 'Pages.Administration.PredefinedDrivingLessons.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewPredefinedDrivingLessonModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.PredefinedDrivingLessons.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditPredefinedDrivingLessonModal.show(record.predefinedDrivingLesson.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.PredefinedDrivingLessons.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deletePredefinedDrivingLesson(record.predefinedDrivingLesson)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedDrivingLesson.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Number')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedDrivingLesson.number}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('LessonIdString')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedDrivingLesson.lessonIdString}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Length')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedDrivingLesson.length}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('RequiredForClasses')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedDrivingLesson.requiredForClasses}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('NotRequiredIfClasses')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedDrivingLesson.notRequiredIfClasses}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getPredefinedDrivingLessons($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditPredefinedDrivingLessonModal #createOrEditPredefinedDrivingLessonModal (modalSave)=\\\"getPredefinedDrivingLessons()\\\"></createOrEditPredefinedDrivingLessonModal>\\r\\n    <viewPredefinedDrivingLessonModal #viewPredefinedDrivingLessonModal></viewPredefinedDrivingLessonModal>\\r\\n    \\r\\n  \\r\\n</div>\\r\\n\"","﻿import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PredefinedDrivingLessonsServiceProxy, PredefinedDrivingLessonDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditPredefinedDrivingLessonModalComponent } from './create-or-edit-predefinedDrivingLesson-modal.component';\r\nimport { ViewPredefinedDrivingLessonModalComponent } from './view-predefinedDrivingLesson-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './predefinedDrivingLessons.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class PredefinedDrivingLessonsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditPredefinedDrivingLessonModal') createOrEditPredefinedDrivingLessonModal: CreateOrEditPredefinedDrivingLessonModalComponent;\r\n    @ViewChild('viewPredefinedDrivingLessonModalComponent') viewPredefinedDrivingLessonModal: ViewPredefinedDrivingLessonModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _predefinedDrivingLessonsServiceProxy: PredefinedDrivingLessonsServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getPredefinedDrivingLessons(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._predefinedDrivingLessonsServiceProxy.getAll(\r\n            this.filterText,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createPredefinedDrivingLesson(): void {\r\n        this.createOrEditPredefinedDrivingLessonModal.show();\r\n    }\r\n\r\n    deletePredefinedDrivingLesson(predefinedDrivingLesson: PredefinedDrivingLessonDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            this.l('AreYouSure'),\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._predefinedDrivingLessonsServiceProxy.delete(predefinedDrivingLesson.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"Details\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Name\\\")}} :</h6>\\r\\n                        {{ item.predefinedDrivingLesson.name }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Number\\\")}} :</h6>\\r\\n                        {{ item.predefinedDrivingLesson.number }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"LessonIdString\\\")}} :</h6>\\r\\n                        {{ item.predefinedDrivingLesson.lessonIdString }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Length\\\")}} :</h6>\\r\\n                        {{ item.predefinedDrivingLesson.length }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"RequiredForClasses\\\")}} :</h6>\\r\\n                        {{ item.predefinedDrivingLesson.requiredForClasses }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"NotRequiredIfClasses\\\")}} :</h6>\\r\\n                        {{ item.predefinedDrivingLesson.notRequiredIfClasses }}\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","﻿import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetPredefinedDrivingLessonForViewDto, PredefinedDrivingLessonDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewPredefinedDrivingLessonModal',\r\n    templateUrl: './view-predefinedDrivingLesson-modal.component.html'\r\n})\r\nexport class ViewPredefinedDrivingLessonModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetPredefinedDrivingLessonForViewDto;\r\n\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetPredefinedDrivingLessonForViewDto();\r\n        this.item.predefinedDrivingLesson = new PredefinedDrivingLessonDto();\r\n    }\r\n\r\n    show(item: GetPredefinedDrivingLessonForViewDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #predefinedTheoryLessonForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"predefinedTheoryLesson.id\\\">{{l(\\\"EditPredefinedTheoryLesson\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!predefinedTheoryLesson.id\\\">{{l(\\\"CreateNewPredefinedTheoryLesson\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedTheoryLesson_Name\\\">{{l(\\\"Name\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedTheoryLesson_Name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedTheoryLesson.name\\\" name=\\\"Name\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedTheoryLesson_Number\\\">{{l(\\\"Number\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedTheoryLesson_Number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedTheoryLesson.number\\\" name=\\\"Number\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedTheoryLesson_LessonIdString\\\">{{l(\\\"LessonIdString\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedTheoryLesson_LessonIdString\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedTheoryLesson.lessonIdString\\\" name=\\\"LessonIdString\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedTheoryLesson_Length\\\">{{l(\\\"Length\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" id=\\\"PredefinedTheoryLesson_Length\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedTheoryLesson.length\\\" name=\\\"Length\\\"  />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedTheoryLesson_RequiredForClasses\\\">{{l(\\\"RequiredForClasses\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedTheoryLesson_RequiredForClasses\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedTheoryLesson.requiredForClasses\\\" name=\\\"RequiredForClasses\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PredefinedTheoryLesson_NotRequiredIfClasses\\\">{{l(\\\"NotRequiredIfClasses\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"PredefinedTheoryLesson_NotRequiredIfClasses\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"predefinedTheoryLesson.notRequiredIfClasses\\\" name=\\\"NotRequiredIfClasses\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!predefinedTheoryLessonForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","﻿import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PredefinedTheoryLessonsServiceProxy, CreateOrEditPredefinedTheoryLessonDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'createOrEditPredefinedTheoryLessonModal',\r\n    templateUrl: './create-or-edit-predefinedTheoryLesson-modal.component.html'\r\n})\r\nexport class CreateOrEditPredefinedTheoryLessonModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    predefinedTheoryLesson: CreateOrEditPredefinedTheoryLessonDto = new CreateOrEditPredefinedTheoryLessonDto();\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _predefinedTheoryLessonsServiceProxy: PredefinedTheoryLessonsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(predefinedTheoryLessonId?: number): void {\r\n\r\n        if (!predefinedTheoryLessonId) {\r\n            this.predefinedTheoryLesson = new CreateOrEditPredefinedTheoryLessonDto();\r\n            this.predefinedTheoryLesson.id = predefinedTheoryLessonId;\r\n\r\n            this.active = true;\r\n            this.modal.show();\r\n        } else {\r\n            this._predefinedTheoryLessonsServiceProxy.getPredefinedTheoryLessonForEdit(predefinedTheoryLessonId).subscribe(result => {\r\n                this.predefinedTheoryLesson = result.predefinedTheoryLesson;\r\n\r\n\r\n                this.active = true;\r\n                this.modal.show();\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n\t\t\t\r\n            this._predefinedTheoryLessonsServiceProxy.createOrEdit(this.predefinedTheoryLesson)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  \\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"PredefinedTheoryLessons\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"PredefinedTheoryLessonsHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.PredefinedTheoryLessons.Create')\\\" (click)=\\\"createPredefinedTheoryLesson()\\\" \\r\\n                class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewPredefinedTheoryLesson\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n                <form class=\\\"kt-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getPredefinedTheoryLessons()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"m-separator m-separator--dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"NameFilter\\\">{{l(\\\"Name\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameFilter\\\" name=\\\"nameFilter\\\" [(ngModel)]=\\\"nameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"MinLengthFilter\\\">{{l(\\\"MinMax\\\")}} {{l(\\\"Length\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\r\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"MinLengthFilter\\\" [(ngModel)]=\\\"minLengthFilter\\\" placeholder=\\\"{{l('MinValue')}}\\\" name=\\\"minLengthFilter\\\" />\\r\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"maxLengthFilter\\\" placeholder=\\\"{{l('MaxValue')}}\\\" name=\\\"maxLengthFilter\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row mb-2\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container col-12\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getPredefinedTheoryLessons($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.PredefinedTheoryLessons.Edit', 'Pages.Administration.PredefinedTheoryLessons.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedTheoryLesson.name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"number\\\">\\r\\n                                        {{l('Number')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedTheoryLesson.number\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"lessonIdString\\\">\\r\\n                                        {{l('LessonIdString')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedTheoryLesson.lessonIdString\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"length\\\">\\r\\n                                        {{l('Length')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedTheoryLesson.length\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"requiredForClasses\\\">\\r\\n                                        {{l('RequiredForClasses')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedTheoryLesson.requiredForClasses\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"notRequiredIfClasses\\\">\\r\\n                                        {{l('NotRequiredIfClasses')}}\\r\\n                                        <p-sortIcon field=\\\"predefinedTheoryLesson.notRequiredIfClasses\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.PredefinedTheoryLessons.Edit', 'Pages.Administration.PredefinedTheoryLessons.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewPredefinedTheoryLessonModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.PredefinedTheoryLessons.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditPredefinedTheoryLessonModal.show(record.predefinedTheoryLesson.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.PredefinedTheoryLessons.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deletePredefinedTheoryLesson(record.predefinedTheoryLesson)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record.predefinedTheoryLesson)\\\">{{l('History')}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedTheoryLesson.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Number')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedTheoryLesson.number}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('LessonIdString')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedTheoryLesson.lessonIdString}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Length')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedTheoryLesson.length}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('RequiredForClasses')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedTheoryLesson.requiredForClasses}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('NotRequiredIfClasses')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.predefinedTheoryLesson.notRequiredIfClasses}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getPredefinedTheoryLessons($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditPredefinedTheoryLessonModal #createOrEditPredefinedTheoryLessonModal (modalSave)=\\\"getPredefinedTheoryLessons()\\\"></createOrEditPredefinedTheoryLessonModal>\\r\\n    <viewPredefinedTheoryLessonModal #viewPredefinedTheoryLessonModal></viewPredefinedTheoryLessonModal>\\r\\n     <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n  \\r\\n</div>\\r\\n\"","﻿import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PredefinedTheoryLessonsServiceProxy, PredefinedTheoryLessonDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditPredefinedTheoryLessonModalComponent } from './create-or-edit-predefinedTheoryLesson-modal.component';\r\nimport { ViewPredefinedTheoryLessonModalComponent } from './view-predefinedTheoryLesson-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './predefinedTheoryLessons.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class PredefinedTheoryLessonsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditPredefinedTheoryLessonModal') createOrEditPredefinedTheoryLessonModal: CreateOrEditPredefinedTheoryLessonModalComponent;\r\n    @ViewChild('viewPredefinedTheoryLessonModalComponent') viewPredefinedTheoryLessonModal: ViewPredefinedTheoryLessonModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    nameFilter = '';\r\n    maxLengthFilter : number;\r\n\t\tmaxLengthFilterEmpty : number;\r\n\t\tminLengthFilter : number;\r\n\t\tminLengthFilterEmpty : number;\r\n\r\n\r\n    _entityTypeFullName = 'Drima.Lessons.PredefinedTheoryLesson';\r\n    entityHistoryEnabled = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _predefinedTheoryLessonsServiceProxy: PredefinedTheoryLessonsServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return this.isGrantedAny('Pages.Administration.AuditLogs') && customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getPredefinedTheoryLessons(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._predefinedTheoryLessonsServiceProxy.getAll(\r\n            this.filterText,\r\n            this.nameFilter,\r\n            this.maxLengthFilter == null ? this.maxLengthFilterEmpty: this.maxLengthFilter,\r\n            this.minLengthFilter == null ? this.minLengthFilterEmpty: this.minLengthFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createPredefinedTheoryLesson(): void {\r\n        this.createOrEditPredefinedTheoryLessonModal.show();\r\n    }\r\n\r\n    showHistory(predefinedTheoryLesson: PredefinedTheoryLessonDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: predefinedTheoryLesson.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: ''\r\n        });\r\n    }\r\n\r\n    deletePredefinedTheoryLesson(predefinedTheoryLesson: PredefinedTheoryLessonDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            this.l('AreYouSure'),\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._predefinedTheoryLessonsServiceProxy.delete(predefinedTheoryLesson.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"Details\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Name\\\")}} :</h6>\\r\\n                        {{ item.predefinedTheoryLesson.name }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Number\\\")}} :</h6>\\r\\n                        {{ item.predefinedTheoryLesson.number }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"LessonIdString\\\")}} :</h6>\\r\\n                        {{ item.predefinedTheoryLesson.lessonIdString }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Length\\\")}} :</h6>\\r\\n                        {{ item.predefinedTheoryLesson.length }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"RequiredForClasses\\\")}} :</h6>\\r\\n                        {{ item.predefinedTheoryLesson.requiredForClasses }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"NotRequiredIfClasses\\\")}} :</h6>\\r\\n                        {{ item.predefinedTheoryLesson.notRequiredIfClasses }}\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","﻿import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetPredefinedTheoryLessonForViewDto, PredefinedTheoryLessonDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewPredefinedTheoryLessonModal',\r\n    templateUrl: './view-predefinedTheoryLesson-modal.component.html'\r\n})\r\nexport class ViewPredefinedTheoryLessonModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetPredefinedTheoryLessonForViewDto;\r\n\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetPredefinedTheoryLessonForViewDto();\r\n        this.item.predefinedTheoryLesson = new PredefinedTheoryLessonDto();\r\n    }\r\n\r\n    show(item: GetPredefinedTheoryLessonForViewDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition] (window:resize)=\\\"onResize($event)\\\">\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title\\\">\\r\\n                    <span>{{\\\"Maintenance\\\" | localize}}</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                    <tab heading=\\\" {{'Caches' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-xl-6\\\">\\r\\n                                <p>{{\\\"CachesHeaderInfo\\\" | localize}}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xl-6 text-right\\\">\\r\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"clearAllCaches()\\\"><i class=\\\"fa fa-recycle\\\"></i> {{\\\"ClearAll\\\" | localize}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <table class=\\\"table table-striped table-hover table-bordered\\\">\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let cache of caches\\\">\\r\\n                                            <td>\\r\\n                                                <span>{{cache.name}}</span>\\r\\n                                                <button class=\\\"btn btn-primary btn-sm pull-right\\\" (click)=\\\"clearCache(cache.name);\\\">\\r\\n                                                    {{\\\"Clear\\\" | localize}}\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab heading=\\\"{{'WebSiteLogs' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-xl-6\\\">\\r\\n                                <p>{{\\\"WebSiteLogsHeaderInfo\\\" | localize}}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xl-6 text-right\\\">\\r\\n                                <button class=\\\"btn btn-metal\\\" (click)=\\\"downloadWebLogs()\\\"><i class=\\\"fa fa-download\\\"></i> {{\\\"DownloadAll\\\" | localize}}</button>\\r\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"getWebLogs()\\\"><i class=\\\"fa fa-sync\\\"></i> {{\\\"Refresh\\\" | localize}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"web-log-view full-height\\\">\\r\\n                                    <span class=\\\"log-line\\\" *ngFor=\\\"let log of logs\\\">\\r\\n                                        <span [class]=\\\"getLogClass(log)\\\">{{getLogType(log)}}</span>\\r\\n                                        {{getRawLogContent(log)}}\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                </tabset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".web-log-view {\\n  font-family: \\\"Courier New\\\";\\n  overflow-x: scroll;\\n  overflow-y: scroll;\\n  height: 100%;\\n  white-space: nowrap;\\n}\\n.web-log-view span.log-line {\\n  margin-bottom: 5px;\\n  display: block;\\n}\\n.web-log-view span.log-line span.label {\\n  width: 50px;\\n  display: inline-block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWFpbnRlbmFuY2UvRDovRHJpbWEgQXNwTmV0WmVyby9hbmd1bGFyL3NyYy9hcHAvYWRtaW4vbWFpbnRlbmFuY2UvbWFpbnRlbmFuY2UuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FkbWluL21haW50ZW5hbmNlL21haW50ZW5hbmNlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksMEJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FDQ0o7QUROQTtFQVFRLGtCQUFBO0VBQ0EsY0FBQTtBQ0NSO0FEVkE7RUFZWSxXQUFBO0VBQ0EscUJBQUE7QUNDWiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21haW50ZW5hbmNlL21haW50ZW5hbmNlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLndlYi1sb2ctdmlldyB7XG4gICAgZm9udC1mYW1pbHk6IFwiQ291cmllciBOZXdcIjtcbiAgICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gICAgc3Bhbi5sb2ctbGluZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgc3Bhbi5sYWJlbCB7XG4gICAgICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgfVxuICAgIH1cbn0iLCIud2ViLWxvZy12aWV3IHtcbiAgZm9udC1mYW1pbHk6IFwiQ291cmllciBOZXdcIjtcbiAgb3ZlcmZsb3cteDogc2Nyb2xsO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIGhlaWdodDogMTAwJTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi53ZWItbG9nLXZpZXcgc3Bhbi5sb2ctbGluZSB7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4ud2ViLWxvZy12aWV3IHNwYW4ubG9nLWxpbmUgc3Bhbi5sYWJlbCB7XG4gIHdpZHRoOiA1MHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4iXX0= */\"","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CachingServiceProxy, EntityDtoOfString, WebLogServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport * as _ from 'lodash';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './maintenance.component.html',\r\n    styleUrls: ['./maintenance.component.less'],\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class MaintenanceComponent extends AppComponentBase implements OnInit {\r\n\r\n    loading = false;\r\n    caches: any = null;\r\n    logs: any = '';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _cacheService: CachingServiceProxy,\r\n        private _webLogService: WebLogServiceProxy,\r\n        private _fileDownloadService: FileDownloadService) {\r\n        super(injector);\r\n    }\r\n\r\n    getCaches(): void {\r\n        const self = this;\r\n        self.loading = true;\r\n        self._cacheService.getAllCaches()\r\n            .pipe(finalize(() => { self.loading = false; }))\r\n            .subscribe((result) => {\r\n                self.caches = result.items;\r\n            });\r\n    }\r\n\r\n    clearCache(cacheName): void {\r\n        const self = this;\r\n        const input = new EntityDtoOfString();\r\n        input.id = cacheName;\r\n\r\n        self._cacheService.clearCache(input).subscribe(() => {\r\n            self.notify.success(self.l('CacheSuccessfullyCleared'));\r\n        });\r\n    }\r\n\r\n    clearAllCaches(): void {\r\n        const self = this;\r\n        self._cacheService.clearAllCaches().subscribe(() => {\r\n            self.notify.success(self.l('AllCachesSuccessfullyCleared'));\r\n        });\r\n    }\r\n\r\n    getWebLogs(): void {\r\n        const self = this;\r\n        self._webLogService.getLatestWebLogs().subscribe((result) => {\r\n            self.logs = result.latestWebLogLines;\r\n            self.fixWebLogsPanelHeight();\r\n        });\r\n    }\r\n\r\n    downloadWebLogs = function () {\r\n        const self = this;\r\n        self._webLogService.downloadWebLogs().subscribe((result) => {\r\n            self._fileDownloadService.downloadTempFile(result);\r\n        });\r\n    };\r\n\r\n    getLogClass(log: string): string {\r\n\r\n        if (log.startsWith('DEBUG')) {\r\n            return 'm-badge m-badge--wide m-badge--default';\r\n        }\r\n\r\n        if (log.startsWith('INFO')) {\r\n            return 'm-badge m-badge--wide m-badge--info';\r\n        }\r\n\r\n        if (log.startsWith('WARN')) {\r\n            return 'm-badge m-badge--wide m-badge--warning';\r\n        }\r\n\r\n        if (log.startsWith('ERROR')) {\r\n            return 'm-badge m-badge--wide m-badge--danger';\r\n        }\r\n\r\n        if (log.startsWith('FATAL')) {\r\n            return 'm-badge m-badge--wide m-badge--danger';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    getLogType(log: string): string {\r\n        if (log.startsWith('DEBUG')) {\r\n            return 'DEBUG';\r\n        }\r\n\r\n        if (log.startsWith('INFO')) {\r\n            return 'INFO';\r\n        }\r\n\r\n        if (log.startsWith('WARN')) {\r\n            return 'WARN';\r\n        }\r\n\r\n        if (log.startsWith('ERROR')) {\r\n            return 'ERROR';\r\n        }\r\n\r\n        if (log.startsWith('FATAL')) {\r\n            return 'FATAL';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    getRawLogContent(log: string): string {\r\n        return _.escape(log)\r\n            .replace('DEBUG', '')\r\n            .replace('INFO', '')\r\n            .replace('WARN', '')\r\n            .replace('ERROR', '')\r\n            .replace('FATAL', '');\r\n    }\r\n\r\n    fixWebLogsPanelHeight(): void {\r\n        let panel = document.getElementsByClassName('full-height')[0];\r\n        const windowHeight = document.body.clientHeight;\r\n        const panelHeight = panel.clientHeight;\r\n        const difference = windowHeight - panelHeight;\r\n        const fixedHeight = panelHeight + difference;\r\n        (panel as any).style.height = (fixedHeight - 420) + 'px';\r\n    }\r\n\r\n    onResize(event): void {\r\n        this.fixWebLogsPanelHeight();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const self = this;\r\n        self.getCaches();\r\n        self.getWebLogs();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal\\\"\\r\\n     (onShown)=\\\"shown()\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">\\r\\n                    <span>{{'SelectUsers' | localize}}</span>\\r\\n                </h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form novalidate (ngSubmit)=\\\"refreshTable()\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"input-group margin-bottom-10\\\">\\r\\n                        <input autoFocus [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" class=\\\"form-control\\\" placeholder=\\\"{{'SearchWithThreeDot' | localize}}\\\" type=\\\"text\\\">\\r\\n                        <span class=\\\"input-group-btn\\\">\\r\\n                            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <!--<Primeng-TurboTable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                 (onLazyLoad)=\\\"getRecordsIfNeeds($event)\\\"\\r\\n                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 [paginator]=\\\"false\\\"\\r\\n                                 [lazy]=\\\"true\\\"\\r\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                 [(selection)]=\\\"selectedMembers\\\"\\r\\n                                 selectionMode=\\\"multiple\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width:38px\\\">\\r\\n                                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'Name' | localize}}\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr [pSelectableRow]=\\\"record\\\">\\r\\n                                    <td style=\\\"width: 38px\\\">\\r\\n                                        <p-tableCheckbox [value]=\\\"record\\\"></p-tableCheckbox>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Name' | localize}}</span>\\r\\n                                        {{record.name}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{'NoData' | localize}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getRecordsIfNeeds($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-TurboTable-End>-->\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"addUsersToOrganizationUnit()\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FindOrganizationUnitUsersInput, NameValueDto, OrganizationUnitServiceProxy, UsersToOrganizationUnitInput } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'addMemberModal',\r\n    templateUrl: './add-member-modal.component.html'\r\n})\r\nexport class AddMemberModalComponent extends AppComponentBase {\r\n\r\n    organizationUnitId: number;\r\n\r\n    @Output() membersAdded: EventEmitter<IUsersWithOrganizationUnit> = new EventEmitter<IUsersWithOrganizationUnit>();\r\n\r\n    @ViewChild('modal') modal: ModalDirective;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    isShown = false;\r\n    filterText = '';\r\n    tenantId?: number;\r\n    saving = false;\r\n    selectedMembers: NameValueDto[];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(): void {\r\n        this.modal.show();\r\n    }\r\n\r\n    refreshTable(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    close(): void {\r\n        this.modal.hide();\r\n    }\r\n\r\n    shown(): void {\r\n        this.isShown = true;\r\n        this.getRecordsIfNeeds(null);\r\n    }\r\n\r\n    getRecordsIfNeeds(event: LazyLoadEvent): void {\r\n        if (!this.isShown) {\r\n            return;\r\n        }\r\n\r\n        this.getRecords(event);\r\n    }\r\n\r\n    getRecords(event?: LazyLoadEvent): void {\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        const input = new FindOrganizationUnitUsersInput();\r\n        input.organizationUnitId = this.organizationUnitId;\r\n        input.filter = this.filterText;\r\n        input.skipCount = this.primengTableHelper.getSkipCount(this.paginator, event);\r\n        input.maxResultCount = this.primengTableHelper.getMaxResultCount(this.paginator, event);\r\n\r\n        this._organizationUnitService\r\n            .findUsers(input)\r\n            .pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator()))\r\n            .subscribe(result => {\r\n                this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n                this.primengTableHelper.records = result.items;\r\n                this.primengTableHelper.hideLoadingIndicator();\r\n            });\r\n    }\r\n\r\n    addUsersToOrganizationUnit(): void {\r\n        const input = new UsersToOrganizationUnitInput();\r\n        input.organizationUnitId = this.organizationUnitId;\r\n        input.userIds = _.map(this.selectedMembers, selectedMember => Number(selectedMember.value));\r\n        this.saving = true;\r\n        this._organizationUnitService\r\n            .addUsersToOrganizationUnit(input)\r\n            .subscribe(() => {\r\n                this.notify.success(this.l('SuccessfullyAdded'));\r\n                this.membersAdded.emit({\r\n                    userIds: input.userIds,\r\n                    ouId: input.organizationUnitId\r\n                });\r\n                this.saving = false;\r\n                this.close();\r\n                this.selectedMembers = [];\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal\\\"\\r\\n     (onShown)=\\\"shown()\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">\\r\\n                    <span>{{'SelectRoles' | localize}}</span>\\r\\n                </h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form novalidate (ngSubmit)=\\\"refreshTable()\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"input-group margin-bottom-10\\\">\\r\\n                        <input autoFocus [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" class=\\\"form-control\\\" placeholder=\\\"{{'SearchWithThreeDot' | localize}}\\\" type=\\\"text\\\">\\r\\n                        <span class=\\\"input-group-btn\\\">\\r\\n                            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <!--<Primeng-TurboTable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                 (onLazyLoad)=\\\"getRecordsIfNeeds($event)\\\"\\r\\n                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 [paginator]=\\\"false\\\"\\r\\n                                 [lazy]=\\\"true\\\"\\r\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                 [(selection)]=\\\"selectedRoles\\\"\\r\\n                                 selectionMode=\\\"multiple\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width:38px\\\">\\r\\n                                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        {{'Name' | localize}}\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr [pSelectableRow]=\\\"record\\\">\\r\\n                                    <td style=\\\"width: 38px\\\">\\r\\n                                        <p-tableCheckbox [value]=\\\"record\\\"></p-tableCheckbox>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Name' | localize}}</span>\\r\\n                                        {{record.name}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{'NoData' | localize}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getRecordsIfNeeds($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-TurboTable-End>-->\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"addRolesToOrganizationUnit()\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FindOrganizationUnitRolesInput, NameValueDto, OrganizationUnitServiceProxy, RolesToOrganizationUnitInput } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { IRolesWithOrganizationUnit } from './roles-with-organization-unit';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'addRoleModal',\r\n    templateUrl: './add-role-modal.component.html'\r\n})\r\nexport class AddRoleModalComponent extends AppComponentBase {\r\n\r\n    organizationUnitId: number;\r\n\r\n    @Output() rolesAdded: EventEmitter<IRolesWithOrganizationUnit> = new EventEmitter<IRolesWithOrganizationUnit>();\r\n\r\n    @ViewChild('modal') modal: ModalDirective;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    isShown = false;\r\n    filterText = '';\r\n    tenantId?: number;\r\n    saving = false;\r\n    selectedRoles: NameValueDto[];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(): void {\r\n        this.modal.show();\r\n    }\r\n\r\n    refreshTable(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    close(): void {\r\n        this.modal.hide();\r\n    }\r\n\r\n    shown(): void {\r\n        this.isShown = true;\r\n        this.getRecordsIfNeeds(null);\r\n    }\r\n\r\n    getRecordsIfNeeds(event: LazyLoadEvent): void {\r\n        if (!this.isShown) {\r\n            return;\r\n        }\r\n\r\n        this.getRecords(event);\r\n    }\r\n\r\n    getRecords(event?: LazyLoadEvent): void {\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        const input = new FindOrganizationUnitRolesInput();\r\n        input.organizationUnitId = this.organizationUnitId;\r\n        input.filter = this.filterText;\r\n        input.skipCount = this.primengTableHelper.getSkipCount(this.paginator, event);\r\n        input.maxResultCount = this.primengTableHelper.getMaxResultCount(this.paginator, event);\r\n\r\n        this._organizationUnitService\r\n            .findRoles(input)\r\n            .pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator()))\r\n            .subscribe(result => {\r\n                this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n                this.primengTableHelper.records = result.items;\r\n                this.primengTableHelper.hideLoadingIndicator();\r\n            });\r\n    }\r\n\r\n    addRolesToOrganizationUnit(): void {\r\n        const input = new RolesToOrganizationUnitInput();\r\n        input.organizationUnitId = this.organizationUnitId;\r\n        input.roleIds = _.map(this.selectedRoles, selectedRole => Number(selectedRole.value));\r\n        this.saving = true;\r\n        this._organizationUnitService\r\n            .addRolesToOrganizationUnit(input)\r\n            .subscribe(() => {\r\n                this.notify.success(this.l('SuccessfullyAdded'));\r\n                this.rolesAdded.emit({\r\n                    roleIds: input.roleIds,\r\n                    ouId: input.organizationUnitId\r\n                });\r\n                this.saving = false;\r\n                this.close();\r\n                this.selectedRoles = [];\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"organizationUnit.id\\\">{{\\\"Edit\\\" | localize}}: {{organizationUnit.displayName}}</span>\\r\\n                        <span *ngIf=\\\"!organizationUnit.id\\\">{{\\\"NewOrganizationUnit\\\" | localize}}</span>\\r\\n                    </h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <label for=\\\"OrganizationUnitDisplayName\\\">{{\\\"Name\\\" | localize}} *</label>\\r\\n                        <input id=\\\"OrganizationUnitDisplayName\\\" #organizationUnitDisplayName=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"displayName\\\" [ngClass]=\\\"{'edited': organizationUnit.displayName}\\\" [(ngModel)]=\\\"organizationUnit.displayName\\\" required maxlength=\\\"128\\\">\\r\\n                        <validation-messages [formCtrl]=\\\"organizationUnitDisplayName\\\"></validation-messages>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CreateOrganizationUnitInput, OrganizationUnitDto, OrganizationUnitServiceProxy, UpdateOrganizationUnitInput } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nexport interface IOrganizationUnitOnEdit {\r\n    id?: number;\r\n    parentId?: number;\r\n    displayName?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'createOrEditOrganizationUnitModal',\r\n    templateUrl: './create-or-edit-unit-modal.component.html'\r\n})\r\nexport class CreateOrEditUnitModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('organizationUnitDisplayName') organizationUnitDisplayNameInput: ElementRef;\r\n\r\n    @Output() unitCreated: EventEmitter<OrganizationUnitDto> = new EventEmitter<OrganizationUnitDto>();\r\n    @Output() unitUpdated: EventEmitter<OrganizationUnitDto> = new EventEmitter<OrganizationUnitDto>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    organizationUnit: IOrganizationUnitOnEdit = {};\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy,\r\n        private _changeDetector: ChangeDetectorRef\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    onShown(): void {\r\n        document.getElementById('OrganizationUnitDisplayName').focus();\r\n    }\r\n\r\n    show(organizationUnit: IOrganizationUnitOnEdit): void {\r\n        this.organizationUnit = organizationUnit;\r\n        this.active = true;\r\n        this.modal.show();\r\n        this._changeDetector.detectChanges();\r\n    }\r\n\r\n    save(): void {\r\n        if (!this.organizationUnit.id) {\r\n            this.createUnit();\r\n        } else {\r\n            this.updateUnit();\r\n        }\r\n    }\r\n\r\n    createUnit() {\r\n        const createInput = new CreateOrganizationUnitInput();\r\n        createInput.parentId = this.organizationUnit.parentId;\r\n        createInput.displayName = this.organizationUnit.displayName;\r\n\r\n        this.saving = true;\r\n        this._organizationUnitService\r\n            .createOrganizationUnit(createInput)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe((result: OrganizationUnitDto) => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.unitCreated.emit(result);\r\n            });\r\n    }\r\n\r\n    updateUnit() {\r\n        const updateInput = new UpdateOrganizationUnitInput();\r\n        updateInput.id = this.organizationUnit.id;\r\n        updateInput.displayName = this.organizationUnit.displayName;\r\n\r\n        this.saving = true;\r\n        this._organizationUnitService\r\n            .updateOrganizationUnit(updateInput)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe((result: OrganizationUnitDto) => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.unitUpdated.emit(result);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.modal.hide();\r\n        this.active = false;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n            <div class=\\\"m-portlet__head-title\\\">\\r\\n                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                    {{\\\"OrganizationTree\\\" | localize}}\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"m-portlet__head-tools\\\">\\r\\n            <button *ngIf=\\\"'Pages.Administration.OrganizationUnits.ManageOrganizationTree' | permission\\\" (click)=\\\"addUnit(null)\\\" class=\\\"btn btn-primary\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i> {{\\\"AddRootUnit\\\" | localize}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-portlet__body\\\">\\r\\n        <p-tree [value]=\\\"treeData\\\"\\r\\n                selectionMode=\\\"single\\\"\\r\\n                [(selection)]=\\\"selectedOu\\\"\\r\\n                (onNodeSelect)=\\\"nodeSelect($event)\\\"\\r\\n                (onNodeDrop)=\\\"nodeDrop($event)\\\"\\r\\n                [contextMenu]=\\\"ouContextMenu\\\"\\r\\n                [draggableNodes]=\\\"canManageOrganizationUnits\\\" [droppableNodes]=\\\"canManageOrganizationUnits\\\">\\r\\n            <ng-template let-node pTemplate=\\\"default\\\">\\r\\n                <div>\\r\\n                    <span>\\r\\n                        {{node.label}}\\r\\n                    </span>\\r\\n                    <small style=\\\"font-size: .82em; opacity: .5;\\\">{{node.memberCount}} members, {{node.roleCount}} roles</small>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </p-tree>\\r\\n        <p-contextMenu #ouContextMenu [model]=\\\"ouContextMenuItems\\\" appendTo=\\\"body\\\" baseZIndex=\\\"99999\\\"></p-contextMenu>\\r\\n        <div *ngIf=\\\"!totalUnitCount\\\" class=\\\"text-muted\\\">\\r\\n            {{\\\"NoOrganizationUnitDefinedYet\\\" | localize}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<createOrEditOrganizationUnitModal #createOrEditOrganizationUnitModal (unitCreated)=\\\"unitCreated($event)\\\" (unitUpdated)=\\\"unitUpdated($event)\\\"></createOrEditOrganizationUnitModal>\\r\\n<entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n\"","import { OnInit, Component, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { HtmlHelper } from '@shared/helpers/HtmlHelper';\r\nimport { ListResultDtoOfOrganizationUnitDto, MoveOrganizationUnitInput, OrganizationUnitDto, OrganizationUnitServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { IBasicOrganizationUnitInfo } from './basic-organization-unit-info';\r\nimport { CreateOrEditUnitModalComponent } from './create-or-edit-unit-modal.component';\r\nimport { IUserWithOrganizationUnit } from './user-with-organization-unit';\r\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\r\nimport { IRoleWithOrganizationUnit } from './role-with-organization-unit';\r\nimport { IRolesWithOrganizationUnit } from './roles-with-organization-unit';\r\n\r\nimport { TreeNode, MenuItem } from 'primeng/api';\r\n\r\nimport { ArrayToTreeConverterService } from '@shared/utils/array-to-tree-converter.service';\r\nimport { TreeDataHelperService } from '@shared/utils/tree-data-helper.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\n\r\nexport interface IOrganizationUnitOnTree extends IBasicOrganizationUnitInfo {\r\n    id: number;\r\n    parent: string | number;\r\n    code: string;\r\n    displayName: string;\r\n    memberCount: number;\r\n    roleCount: number;\r\n    text: string;\r\n    state: any;\r\n}\r\n\r\n@Component({\r\n    selector: 'organization-tree',\r\n    templateUrl: './organization-tree.component.html'\r\n})\r\nexport class OrganizationTreeComponent extends AppComponentBase implements OnInit {\r\n\r\n    @Output() ouSelected = new EventEmitter<IBasicOrganizationUnitInfo>();\r\n\r\n    @ViewChild('createOrEditOrganizationUnitModal') createOrEditOrganizationUnitModal: CreateOrEditUnitModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n\r\n    treeData: any;\r\n    selectedOu: TreeNode;\r\n    ouContextMenuItems: MenuItem[];\r\n    canManageOrganizationUnits = false;\r\n\r\n    _entityTypeFullName = 'Abp.Organizations.OrganizationUnit';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy,\r\n        private _arrayToTreeConverterService: ArrayToTreeConverterService,\r\n        private _treeDataHelperService: TreeDataHelperService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    totalUnitCount = 0;\r\n\r\n    ngOnInit(): void {\r\n        this.canManageOrganizationUnits = this.isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree');\r\n        this.ouContextMenuItems = this.getContextMenuItems();\r\n        this.getTreeDataFromServer();\r\n    }\r\n\r\n    nodeSelect(event) {\r\n        this.ouSelected.emit(<IBasicOrganizationUnitInfo>{\r\n            id: event.node.data.id,\r\n            displayName: event.node.data.displayName\r\n        });\r\n    }\r\n\r\n    nodeDrop(event) {\r\n        this.message.confirm(\r\n            this.l('OrganizationUnitMoveConfirmMessage', event.dragNode.data.displayName, event.dropNode.data.displayName),\r\n            this.l('AreYouSure'),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    const input = new MoveOrganizationUnitInput();\r\n                    input.id = event.dragNode.data.id;\r\n                    input.newParentId = event.originalEvent.target.nodeName === 'SPAN' ? event.dropNode.data.id : event.dropNode.parent.data.id;\r\n\r\n                    this._organizationUnitService.moveOrganizationUnit(input)\r\n                        .pipe(catchError(error => {\r\n                            this.revertDragDrop();\r\n                            return Observable.throw(error);\r\n                        }))\r\n                        .subscribe(() => {\r\n                            this.notify.success(this.l('SuccessfullyMoved'));\r\n                            this.reload();\r\n                        });\r\n                } else {\r\n                    this.revertDragDrop();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    revertDragDrop() {\r\n        this.reload();\r\n    }\r\n\r\n    reload(): void {\r\n        this.getTreeDataFromServer();\r\n    }\r\n\r\n    private getTreeDataFromServer(): void {\r\n        let self = this;\r\n        this._organizationUnitService.getOrganizationUnits().subscribe((result: ListResultDtoOfOrganizationUnitDto) => {\r\n            this.totalUnitCount = result.items.length;\r\n            this.treeData = this._arrayToTreeConverterService.createTree(result.items,\r\n                'parentId',\r\n                'id',\r\n                null,\r\n                'children',\r\n                [\r\n                    {\r\n                        target: 'label',\r\n                        targetFunction(item) {\r\n                            return item.displayName;\r\n                        }\r\n                    }, {\r\n                        target: 'expandedIcon',\r\n                        value: 'fa fa-folder-open m--font-warning'\r\n                    },\r\n                    {\r\n                        target: 'collapsedIcon',\r\n                        value: 'fa fa-folder m--font-warning'\r\n                    },\r\n                    {\r\n                        target: 'selectable',\r\n                        value: true\r\n                    },\r\n                    {\r\n                        target: 'memberCount',\r\n                        targetFunction(item) {\r\n                            return item.memberCount;\r\n                        }\r\n                    },\r\n                    {\r\n                        target: 'roleCount',\r\n                        targetFunction(item) {\r\n                            return item.roleCount;\r\n                        }\r\n                    }\r\n                ]);\r\n        });\r\n    }\r\n\r\n    private isEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    private getContextMenuItems(): any[] {\r\n\r\n        const canManageOrganizationTree = this.isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree');\r\n\r\n        let items = [\r\n            {\r\n                label: this.l('Edit'),\r\n                disabled: !canManageOrganizationTree,\r\n                command: (event) => {\r\n                    this.createOrEditOrganizationUnitModal.show({\r\n                        id: this.selectedOu.data.id,\r\n                        displayName: this.selectedOu.data.displayName\r\n                    });\r\n                }\r\n            },\r\n            {\r\n                label: this.l('AddSubUnit'),\r\n                disabled: !canManageOrganizationTree,\r\n                command: () => {\r\n                    this.addUnit(this.selectedOu.data.id);\r\n                }\r\n            },\r\n            {\r\n                label: this.l('Delete'),\r\n                disabled: !canManageOrganizationTree,\r\n                command: () => {\r\n                    this.message.confirm(\r\n                        this.l('OrganizationUnitDeleteWarningMessage', this.selectedOu.data.displayName),\r\n                        this.l('AreYouSure'),\r\n                        isConfirmed => {\r\n                            if (isConfirmed) {\r\n                                this._organizationUnitService.deleteOrganizationUnit(this.selectedOu.data.id).subscribe(() => {\r\n                                    this.deleteUnit(this.selectedOu.data.id);\r\n                                    this.notify.success(this.l('SuccessfullyDeleted'));\r\n                                    this.selectedOu = null;\r\n                                });\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        if (this.isEntityHistoryEnabled()) {\r\n            items.push({\r\n                label: this.l('History'),\r\n                disabled: false,\r\n                command: (event) => {\r\n                    this.entityTypeHistoryModal.show({\r\n                        entityId: this.selectedOu.data.id.toString(),\r\n                        entityTypeFullName: this._entityTypeFullName,\r\n                        entityTypeDescription: this.selectedOu.data.displayName\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    addUnit(parentId?: number): void {\r\n        this.createOrEditOrganizationUnitModal.show({\r\n            parentId: parentId\r\n        });\r\n    }\r\n\r\n    unitCreated(ou: OrganizationUnitDto): void {\r\n        if (ou.parentId) {\r\n            let unit = this._treeDataHelperService.findNode(this.treeData, { data: { id: ou.parentId } });\r\n            if (!unit) {\r\n                return;\r\n            }\r\n\r\n            unit.children.push({\r\n                label: ou.displayName,\r\n                expandedIcon: 'fa fa-folder-open m--font-warning',\r\n                collapsedIcon: 'fa fa-folder m--font-warning',\r\n                selected: true,\r\n                children: [],\r\n                data: ou,\r\n                memberCount: ou.memberCount,\r\n                roleCount: ou.roleCount\r\n            });\r\n        } else {\r\n            this.treeData.push({\r\n                label: ou.displayName,\r\n                expandedIcon: 'fa fa-folder-open m--font-warning',\r\n                collapsedIcon: 'fa fa-folder m--font-warning',\r\n                selected: true,\r\n                children: [],\r\n                data: ou,\r\n                memberCount: ou.memberCount,\r\n                roleCount: ou.roleCount\r\n            });\r\n        }\r\n\r\n        this.totalUnitCount += 1;\r\n    }\r\n\r\n    deleteUnit(id) {\r\n        let node = this._treeDataHelperService.findNode(this.treeData, { data: { id: id } });\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        if (!node.data.parentId) {\r\n            _.remove(this.treeData, {\r\n                data: {\r\n                    id: id\r\n                }\r\n            });\r\n        }\r\n\r\n        let parentNode = this._treeDataHelperService.findNode(this.treeData, { data: { id: node.data.parentId } });\r\n        if (!parentNode) {\r\n            return;\r\n        }\r\n\r\n        _.remove(parentNode.children, {\r\n            data: {\r\n                id: id\r\n            }\r\n        });\r\n    }\r\n\r\n    unitUpdated(ou: OrganizationUnitDto): void {\r\n        let item = this._treeDataHelperService.findNode(this.treeData, { data: { id: ou.id } });\r\n        if (!item) {\r\n            return;\r\n        }\r\n\r\n        item.data.displayName = ou.displayName;\r\n        item.label = ou.displayName;\r\n        item.memberCount = ou.memberCount;\r\n        item.roleCount = ou.roleCount;\r\n    }\r\n\r\n    membersAdded(data: IUsersWithOrganizationUnit): void {\r\n        this.incrementMemberCount(data.ouId, data.userIds.length);\r\n    }\r\n\r\n    memberRemoved(data: IUserWithOrganizationUnit): void {\r\n        this.incrementMemberCount(data.ouId, -1);\r\n    }\r\n\r\n    incrementMemberCount(ouId: number, incrementAmount: number): void {\r\n        let item = this._treeDataHelperService.findNode(this.treeData, { data: { id: ouId } });\r\n        item.data.memberCount += incrementAmount;\r\n        item.memberCount = item.data.memberCount;\r\n    }\r\n\r\n    rolesAdded(data: IRolesWithOrganizationUnit): void {\r\n        this.incrementRoleCount(data.ouId, data.roleIds.length);\r\n    }\r\n\r\n    roleRemoved(data: IRoleWithOrganizationUnit): void {\r\n        this.incrementRoleCount(data.ouId, -1);\r\n    }\r\n\r\n    incrementRoleCount(ouId: number, incrementAmount: number): void {\r\n        let item = this._treeDataHelperService.findNode(this.treeData, { data: { id: ouId } });\r\n        item.data.roleCount += incrementAmount;\r\n        item.roleCount = item.data.roleCount;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <button *ngIf=\\\"('Pages.Administration.OrganizationUnits.ManageMembers' | permission) && organizationUnit\\\" (click)=\\\"openAddMemberModal()\\\" class=\\\"btn btn-primary float-right mb-3\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i> {{\\\"AddMember\\\" | localize}}\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div id=\\\"OuMembersTable\\\">\\r\\n            <!--<Primeng-TurboTable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\" [hidden]=\\\"!organizationUnit\\\">\\r\\n                <p-table #dataTable\\r\\n                         (onLazyLoad)=\\\"getOrganizationUnitUsers($event)\\\"\\r\\n                         [value]=\\\"primengTableHelper.records\\\"\\r\\n                         rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                         [paginator]=\\\"false\\\"\\r\\n                         [lazy]=\\\"true\\\"\\r\\n                         [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                    <ng-template pTemplate=\\\"header\\\">\\r\\n                        <tr>\\r\\n                            <th style=\\\"width: 15%\\\"\\r\\n                                [hidden]=\\\"!('Pages.Administration.OrganizationUnits.ManageMembers' | permission)\\\">{{'Delete' | localize}}</th>\\r\\n                            <th pSortableColumn=\\\"userName\\\">\\r\\n                                {{'UserName' | localize}}\\r\\n                                <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                            <th pSortableColumn=\\\"addedTime\\\">\\r\\n                                {{'AddedTime' | localize}}\\r\\n                                <p-sortIcon field=\\\"addedTime\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                        <tr>\\r\\n                            <td [hidden]=\\\"!('Pages.Administration.OrganizationUnits.ManageMembers' | permission)\\\">\\r\\n                                <button class=\\\"btn btn-outline-danger m-btn m-btn--icon m-btn--icon-only m-btn--pill\\\"\\r\\n                                        (click)=\\\"removeMember(record)\\\"\\r\\n                                        title=\\\"{{'Delete' | localize}}\\\">\\r\\n                                    <i class=\\\"fa fa-times\\\" [attr.aria-label]=\\\"l('Delete')\\\"></i>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <span class=\\\"ui-column-title\\\">{{'UserName' | localize}}</span>\\r\\n                                {{record.userName}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <span class=\\\"ui-column-title\\\">{{'AddedTime' | localize}}</span>\\r\\n                                {{record.addedTime | momentFormat:'L'}}\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n                <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                    {{'NoData' | localize}}\\r\\n                </div>\\r\\n                <div class=\\\"primeng-paging-container\\\">\\r\\n                    <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                 #paginator\\r\\n                                 (onPageChange)=\\\"getOrganizationUnitUsers($event)\\\"\\r\\n                                 [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                 [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                    </p-paginator>\\r\\n                    <span class=\\\"total-records-count\\\">\\r\\n                        {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<Primeng-TurboTable-End>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!organizationUnit\\\" class=\\\"text-muted\\\">\\r\\n    {{\\\"SelectAnOrganizationUnitToSeeMembers\\\" | localize}}\\r\\n</div>\\r\\n\\r\\n<addMemberModal #addMemberModal (membersAdded)=\\\"addMembers($event)\\\"></addMemberModal>\\r\\n\"","import { Component, EventEmitter, Injector, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { AddMemberModalComponent } from '@app/admin/organization-units/add-member-modal.component';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { OrganizationUnitServiceProxy, OrganizationUnitUserListDto } from '@shared/service-proxies/service-proxies';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { IBasicOrganizationUnitInfo } from './basic-organization-unit-info';\r\nimport { IUserWithOrganizationUnit } from './user-with-organization-unit';\r\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'organization-unit-members',\r\n    templateUrl: './organization-unit-members.component.html'\r\n})\r\nexport class OrganizationUnitMembersComponent extends AppComponentBase implements OnInit {\r\n\r\n    @Output() memberRemoved = new EventEmitter<IUserWithOrganizationUnit>();\r\n    @Output() membersAdded = new EventEmitter<IUsersWithOrganizationUnit>();\r\n\r\n    @ViewChild('addMemberModal') addMemberModal: AddMemberModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    private _organizationUnit: IBasicOrganizationUnitInfo = null;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    get organizationUnit(): IBasicOrganizationUnitInfo {\r\n        return this._organizationUnit;\r\n    }\r\n\r\n    set organizationUnit(ou: IBasicOrganizationUnitInfo) {\r\n        if (this._organizationUnit === ou) {\r\n            return;\r\n        }\r\n\r\n        this._organizationUnit = ou;\r\n        this.addMemberModal.organizationUnitId = ou.id;\r\n        if (ou) {\r\n            this.refreshMembers();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    getOrganizationUnitUsers(event?: LazyLoadEvent) {\r\n        if (!this._organizationUnit) {\r\n            return;\r\n        }\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n        this._organizationUnitService.getOrganizationUnitUsers(\r\n            this._organizationUnit.id,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event)\r\n        ).pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator())).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    refreshMembers(): void {\r\n        this.reloadPage();\r\n    }\r\n\r\n    openAddMemberModal(): void {\r\n        this.addMemberModal.show();\r\n    }\r\n\r\n    removeMember(user: OrganizationUnitUserListDto): void {\r\n        this.message.confirm(\r\n            this.l('RemoveUserFromOuWarningMessage', user.userName, this.organizationUnit.displayName),\r\n            this.l('AreYouSure'),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._organizationUnitService\r\n                        .removeUserFromOrganizationUnit(user.id, this.organizationUnit.id)\r\n                        .subscribe(() => {\r\n                            this.notify.success(this.l('SuccessfullyRemoved'));\r\n                            this.memberRemoved.emit({\r\n                                userId: user.id,\r\n                                ouId: this.organizationUnit.id\r\n                            });\r\n\r\n                            this.refreshMembers();\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    addMembers(data: any): void {\r\n        this.membersAdded.emit({\r\n            userIds: data.userIds,\r\n            ouId: data.ouId\r\n        });\r\n\r\n        this.refreshMembers();\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <button *ngIf=\\\"('Pages.Administration.OrganizationUnits.ManageRoles' | permission) && organizationUnit\\\" (click)=\\\"openAddRoleModal()\\\" class=\\\"btn btn-primary float-right mb-3\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i> {{\\\"AddRole\\\" | localize}}\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div id=\\\"OuRolesTable\\\">\\r\\n            <!--<Primeng-TurboTable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\" [hidden]=\\\"!organizationUnit\\\">\\r\\n                <p-table #dataTable\\r\\n                         (onLazyLoad)=\\\"getOrganizationUnitRoles($event)\\\"\\r\\n                         [value]=\\\"primengTableHelper.records\\\"\\r\\n                         rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                         [paginator]=\\\"false\\\"\\r\\n                         [lazy]=\\\"true\\\"\\r\\n                         [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                    <ng-template pTemplate=\\\"header\\\">\\r\\n                        <tr>\\r\\n                            <th style=\\\"width: 15%\\\"\\r\\n                                [hidden]=\\\"!('Pages.Administration.OrganizationUnits.ManageRoles' | permission)\\\">{{'Delete' | localize}}</th>\\r\\n                            <th pSortableColumn=\\\"displayName\\\">\\r\\n                                {{'Role' | localize}}\\r\\n                                <p-sortIcon field=\\\"displayName\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                            <th pSortableColumn=\\\"addedTime\\\">\\r\\n                                {{'AddedTime' | localize}}\\r\\n                                <p-sortIcon field=\\\"addedTime\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                        <tr>\\r\\n                            <td [hidden]=\\\"!('Pages.Administration.OrganizationUnits.ManageRoles' | permission)\\\">\\r\\n                                <button class=\\\"btn btn-outline-danger m-btn m-btn--icon m-btn--icon-only m-btn--pill\\\"\\r\\n                                        (click)=\\\"removeRole(record)\\\"\\r\\n                                        title=\\\"{{'Delete' | localize}}\\\">\\r\\n                                    <i class=\\\"fa fa-times\\\" [attr.aria-label]=\\\"l('Delete')\\\"></i>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <span class=\\\"ui-column-title\\\">{{'Role' | localize}}</span>\\r\\n                                {{record.displayName}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <span class=\\\"ui-column-title\\\">{{'AddedTime' | localize}}</span>\\r\\n                                {{record.addedTime | momentFormat:'L'}}\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n                <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                    {{'NoData' | localize}}\\r\\n                </div>\\r\\n                <div class=\\\"primeng-paging-container\\\">\\r\\n                    <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                 #paginator\\r\\n                                 (onPageChange)=\\\"getOrganizationUnitRoles($event)\\\"\\r\\n                                 [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                 [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                    </p-paginator>\\r\\n                    <span class=\\\"total-records-count\\\">\\r\\n                        {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<Primeng-TurboTable-End>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!organizationUnit\\\" class=\\\"text-muted\\\">\\r\\n    {{\\\"SelectAnOrganizationUnitToSeeRoles\\\" | localize}}\\r\\n</div>\\r\\n\\r\\n<addRoleModal #addRoleModal (rolesAdded)=\\\"addRoles($event)\\\"></addRoleModal>\\r\\n\"","import { ChangeDetectorRef, Component, EventEmitter, Injector, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { AddRoleModalComponent } from '@app/admin/organization-units/add-role-modal.component';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { OrganizationUnitServiceProxy, OrganizationUnitRoleListDto } from '@shared/service-proxies/service-proxies';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { IBasicOrganizationUnitInfo } from './basic-organization-unit-info';\r\nimport { IRoleWithOrganizationUnit } from './role-with-organization-unit';\r\nimport { IRolesWithOrganizationUnit } from './roles-with-organization-unit';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'organization-unit-roles',\r\n    templateUrl: './organization-unit-roles.component.html'\r\n})\r\nexport class OrganizationUnitRolesComponent extends AppComponentBase implements OnInit {\r\n\r\n    @Output() roleRemoved = new EventEmitter<IRoleWithOrganizationUnit>();\r\n    @Output() rolesAdded = new EventEmitter<IRolesWithOrganizationUnit>();\r\n\r\n    @ViewChild('addRoleModal') addRoleModal: AddRoleModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    private _organizationUnit: IBasicOrganizationUnitInfo = null;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _changeDetector: ChangeDetectorRef,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    get organizationUnit(): IBasicOrganizationUnitInfo {\r\n        return this._organizationUnit;\r\n    }\r\n\r\n    set organizationUnit(ou: IBasicOrganizationUnitInfo) {\r\n        if (this._organizationUnit === ou) {\r\n            return;\r\n        }\r\n\r\n        this._organizationUnit = ou;\r\n        this.addRoleModal.organizationUnitId = ou.id;\r\n        if (ou) {\r\n            this.refreshRoles();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    getOrganizationUnitRoles(event?: LazyLoadEvent) {\r\n        if (!this._organizationUnit) {\r\n            return;\r\n        }\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n        this._organizationUnitService.getOrganizationUnitRoles(\r\n            this._organizationUnit.id,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event)\r\n        ).pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator())).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    refreshRoles(): void {\r\n        this.reloadPage();\r\n    }\r\n\r\n    openAddRoleModal(): void {\r\n        this.addRoleModal.show();\r\n    }\r\n\r\n    removeRole(role: OrganizationUnitRoleListDto): void {\r\n        this.message.confirm(\r\n            this.l('RemoveRoleFromOuWarningMessage', role.displayName, this.organizationUnit.displayName),\r\n            this.l('AreYouSure'),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._organizationUnitService\r\n                        .removeRoleFromOrganizationUnit(role.id, this.organizationUnit.id)\r\n                        .subscribe(() => {\r\n                            this.notify.success(this.l('SuccessfullyRemoved'));\r\n                            this.roleRemoved.emit({\r\n                                roleId: role.id,\r\n                                ouId: this.organizationUnit.id\r\n                            });\r\n\r\n                            this.refreshRoles();\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    addRoles(data: any): void {\r\n        this.rolesAdded.emit({\r\n            roleIds: data.roleIds,\r\n            ouId: data.ouId\r\n        });\r\n\r\n        this.refreshRoles();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"OrganizationUnits\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"OrganizationUnitsHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n                <organization-tree #ouTree (ouSelected)=\\\"ouSelected($event)\\\"></organization-tree>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n                <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                    <div class=\\\"m-portlet__head\\\">\\r\\n                        <div class=\\\"m-portlet__head-caption\\\">\\r\\n                            <div class=\\\"m-portlet__head-title\\\">\\r\\n                                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                                    <span *ngIf=\\\"organizationUnit\\\">{{organizationUnit.displayName}}</span>\\r\\n                                </h3>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"m-portlet__body\\\">\\r\\n                        <tabset class=\\\"tab-container\\\">\\r\\n                            <tab heading=\\\"{{'Members' | localize}}\\\" [active]=\\\"true\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                                <organization-unit-members #ouMembers (membersAdded)=\\\"ouTree.membersAdded($event)\\\" (memberRemoved)=\\\"ouTree.memberRemoved($event)\\\"></organization-unit-members>\\r\\n                            </tab>\\r\\n                            <tab heading=\\\"{{'Roles' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                                <organization-unit-roles #ouRoles (rolesAdded)=\\\"ouTree.rolesAdded($event)\\\" (roleRemoved)=\\\"ouTree.roleRemoved($event)\\\"></organization-unit-roles>\\r\\n                            </tab>\\r\\n                        </tabset>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { OrganizationTreeComponent } from './organization-tree.component';\r\nimport { OrganizationUnitMembersComponent } from './organization-unit-members.component';\r\nimport { OrganizationUnitRolesComponent } from './organization-unit-roles.component';\r\nimport { IBasicOrganizationUnitInfo } from './basic-organization-unit-info';\r\n\r\n@Component({\r\n    templateUrl: './organization-units.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class OrganizationUnitsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('ouMembers') ouMembers: OrganizationUnitMembersComponent;\r\n    @ViewChild('ouRoles') ouRoles: OrganizationUnitRolesComponent;\r\n    @ViewChild('ouTree') ouTree: OrganizationTreeComponent;\r\n    organizationUnit: IBasicOrganizationUnitInfo = null;\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ouSelected(event: any): void {\r\n        this.organizationUnit = event;\r\n        this.ouMembers.organizationUnit = event;\r\n        this.ouRoles.organizationUnit = event;\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #officeForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"office.id\\\">{{l(\\\"EditOffice\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!office.id\\\">{{l(\\\"CreateNewOffice\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Office_Name\\\">{{l(\\\"Name\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Office_Name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"office.name\\\" name=\\\"Name\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Office_Street\\\">{{l(\\\"Street\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Office_Street\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"office.street\\\" name=\\\"Street\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Office_City\\\">{{l(\\\"City\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Office_City\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"office.city\\\" name=\\\"City\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Office_ZipCode\\\">{{l(\\\"ZipCode\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Office_ZipCode\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"office.zipCode\\\" name=\\\"ZipCode\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Office_State\\\">{{l(\\\"State\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Office_State\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"office.state\\\" name=\\\"State\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Office_Country\\\">{{l(\\\"Country\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Office_Country\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"office.country\\\" name=\\\"Country\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Office_PhoneNumber\\\">{{l(\\\"PhoneNumber\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Office_PhoneNumber\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"office.phoneNumber\\\" name=\\\"PhoneNumber\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Office_Email\\\">{{l(\\\"Email\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Office_Email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"office.email\\\" name=\\\"Email\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!officeForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { OfficesServiceProxy, CreateOrEditOfficeDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n    selector: 'createOrEditOfficeModal',\r\n    templateUrl: './create-or-edit-office-modal.component.html'\r\n})\r\nexport class CreateOrEditOfficeModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    office: CreateOrEditOfficeDto = new CreateOrEditOfficeDto();\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _officesServiceProxy: OfficesServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(officeId?: number): void {\r\n\r\n        if (!officeId) {\r\n            this.office = new CreateOrEditOfficeDto();\r\n            this.office.id = officeId;\r\n\r\n            this.active = true;\r\n            this.modal.show();\r\n        } else {\r\n            this._officesServiceProxy.getOfficeForEdit(officeId).subscribe(result => {\r\n                this.office = result.office;\r\n\r\n\r\n                this.active = true;\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n\t\t\t\r\n            this._officesServiceProxy.createOrEdit(this.office)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    close(): void {\r\n\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"Offices\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"OfficesHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.Offices.Create')\\\" (click)=\\\"createOffice()\\\" \\r\\n\\t\\t\\tclass=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewOffice\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getOffices()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"kt-separator kt-separator--border-dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"NameFilter\\\">{{l(\\\"Name\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameFilter\\\" name=\\\"nameFilter\\\" [(ngModel)]=\\\"nameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"StreetFilter\\\">{{l(\\\"Street\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"StreetFilter\\\" name=\\\"streetFilter\\\" [(ngModel)]=\\\"streetFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"CityFilter\\\">{{l(\\\"City\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"CityFilter\\\" name=\\\"cityFilter\\\" [(ngModel)]=\\\"cityFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ZipCodeFilter\\\">{{l(\\\"ZipCode\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ZipCodeFilter\\\" name=\\\"zipCodeFilter\\\" [(ngModel)]=\\\"zipCodeFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"StateFilter\\\">{{l(\\\"State\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"StateFilter\\\" name=\\\"stateFilter\\\" [(ngModel)]=\\\"stateFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"CountryFilter\\\">{{l(\\\"Country\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"CountryFilter\\\" name=\\\"countryFilter\\\" [(ngModel)]=\\\"countryFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PhoneNumberFilter\\\">{{l(\\\"PhoneNumber\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"PhoneNumberFilter\\\" name=\\\"phoneNumberFilter\\\" [(ngModel)]=\\\"phoneNumberFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"EmailFilter\\\">{{l(\\\"Email\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"EmailFilter\\\" name=\\\"emailFilter\\\" [(ngModel)]=\\\"emailFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row mb-2\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container col-12\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getOffices($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Offices.Edit', 'Pages.Administration.Offices.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"office.name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"street\\\">\\r\\n                                        {{l('Street')}}\\r\\n                                        <p-sortIcon field=\\\"office.street\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"city\\\">\\r\\n                                        {{l('City')}}\\r\\n                                        <p-sortIcon field=\\\"office.city\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"zipCode\\\">\\r\\n                                        {{l('ZipCode')}}\\r\\n                                        <p-sortIcon field=\\\"office.zipCode\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"state\\\">\\r\\n                                        {{l('State')}}\\r\\n                                        <p-sortIcon field=\\\"office.state\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"country\\\">\\r\\n                                        {{l('Country')}}\\r\\n                                        <p-sortIcon field=\\\"office.country\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"phoneNumber\\\">\\r\\n                                        {{l('PhoneNumber')}}\\r\\n                                        <p-sortIcon field=\\\"office.phoneNumber\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"email\\\">\\r\\n                                        {{l('Email')}}\\r\\n                                        <p-sortIcon field=\\\"office.email\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Offices.Edit', 'Pages.Administration.Offices.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewOfficeModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Offices.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditOfficeModal.show(record.office.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Offices.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteOffice(record.office)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record.office)\\\">{{l('History')}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.office.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Street')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.office.street}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('City')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.office.city}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('ZipCode')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.office.zipCode}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('State')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.office.state}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Country')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.office.country}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('PhoneNumber')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.office.phoneNumber}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Email')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.office.email}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getOffices($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditOfficeModal #createOrEditOfficeModal (modalSave)=\\\"getOffices()\\\"></createOrEditOfficeModal>\\r\\n    <viewOfficeModal #viewOfficeModal></viewOfficeModal>\\r\\n     <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n  \\r\\n</div>\\r\\n\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OfficesServiceProxy, OfficeDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditOfficeModalComponent } from './create-or-edit-office-modal.component';\r\nimport { ViewOfficeModalComponent } from './view-office-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './offices.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class OfficesComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditOfficeModal') createOrEditOfficeModal: CreateOrEditOfficeModalComponent;\r\n    @ViewChild('viewOfficeModalComponent') viewOfficeModal: ViewOfficeModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    nameFilter = '';\r\n    streetFilter = '';\r\n    cityFilter = '';\r\n    zipCodeFilter = '';\r\n    stateFilter = '';\r\n    countryFilter = '';\r\n    phoneNumberFilter = '';\r\n    emailFilter = '';\r\n\r\n\r\n    _entityTypeFullName = 'Drima.Resources.Office';\r\n    entityHistoryEnabled = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _officesServiceProxy: OfficesServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getOffices(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._officesServiceProxy.getAll(\r\n            this.filterText,\r\n            this.nameFilter,\r\n            this.streetFilter,\r\n            this.cityFilter,\r\n            this.zipCodeFilter,\r\n            this.stateFilter,\r\n            this.countryFilter,\r\n            this.phoneNumberFilter,\r\n            this.emailFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createOffice(): void {\r\n        this.createOrEditOfficeModal.show();\r\n    }\r\n\r\n    showHistory(office: OfficeDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: office.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: ''\r\n        });\r\n    }\r\n\r\n    deleteOffice(office: OfficeDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._officesServiceProxy.delete(office.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._officesServiceProxy.getOfficesToExcel(\r\n        this.filterText,\r\n            this.nameFilter,\r\n            this.streetFilter,\r\n            this.cityFilter,\r\n            this.zipCodeFilter,\r\n            this.stateFilter,\r\n            this.countryFilter,\r\n            this.phoneNumberFilter,\r\n            this.emailFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"Details\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Name\\\")}} :</h6>\\r\\n                        {{ item.office.name }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Street\\\")}} :</h6>\\r\\n                        {{ item.office.street }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"City\\\")}} :</h6>\\r\\n                        {{ item.office.city }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"ZipCode\\\")}} :</h6>\\r\\n                        {{ item.office.zipCode }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"State\\\")}} :</h6>\\r\\n                        {{ item.office.state }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Country\\\")}} :</h6>\\r\\n                        {{ item.office.country }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"PhoneNumber\\\")}} :</h6>\\r\\n                        {{ item.office.phoneNumber }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Email\\\")}} :</h6>\\r\\n                        {{ item.office.email }}\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetOfficeForViewDto, OfficeDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewOfficeModal',\r\n    templateUrl: './view-office-modal.component.html'\r\n})\r\nexport class ViewOfficeModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetOfficeForViewDto;\r\n\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetOfficeForViewDto();\r\n        this.item.office = new OfficeDto();\r\n    }\r\n\r\n    show(item: GetOfficeForViewDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #simulatorForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"simulator.id\\\">{{l(\\\"EditSimulator\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!simulator.id\\\">{{l(\\\"CreateNewSimulator\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group m-form__group\\\">\\r\\n                        <label for=\\\"OfficeName\\\">{{l(\\\"Office\\\")}}</label>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"OfficeName\\\" name=\\\"officeName\\\" [(ngModel)]=\\\"officeName\\\" type=\\\"text\\\" disabled>     \\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <button class=\\\"btn btn-primary blue\\\" (click)=\\\"openSelectOfficeModal()\\\" type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i> {{l(\\\"Pick\\\")}}</button>\\r\\n                            </div> <div class=\\\"input-group-prepend\\\">\\r\\n                                <button class=\\\"btn btn-danger btn-icon\\\" type=\\\"button\\\" (click)=\\\"setOfficeIdNull()\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <input class=\\\"form-control\\\" name=\\\"simulator.officeId\\\" [(ngModel)]=\\\"simulator.officeId\\\" type=\\\"text\\\"  hidden>\\r\\n\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Simulator_Name\\\">{{l(\\\"Name\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Simulator_Name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"simulator.name\\\" name=\\\"Name\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Simulator_Manufacturer\\\">{{l(\\\"Manufacturer\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Simulator_Manufacturer\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"simulator.manufacturer\\\" name=\\\"Manufacturer\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Simulator_Model\\\">{{l(\\\"Model\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Simulator_Model\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"simulator.model\\\" name=\\\"Model\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Simulator_Modules\\\">{{l(\\\"Modules\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Simulator_Modules\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"simulator.modules\\\" name=\\\"Modules\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<br/><div class=\\\"m-checkbox-list\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Simulator_InUse\\\" class=\\\"kt-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"Simulator_InUse\\\" type=\\\"checkbox\\\" name=\\\"InUse\\\" [(ngModel)]=\\\"simulator.inUse\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l(\\\"InUse\\\")}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!simulatorForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n<simulatorOfficeLookupTableModal #simulatorOfficeLookupTableModal (modalSave)=\\\"getNewOfficeId()\\\"></simulatorOfficeLookupTableModal>\\r\\n\\t\\t \\r\\n</div>\"","import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { SimulatorsServiceProxy, CreateOrEditSimulatorDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\nimport { SimulatorOfficeLookupTableModalComponent } from './simulator-office-lookup-table-modal.component';\r\n\r\n\r\n@Component({\r\n    selector: 'createOrEditSimulatorModal',\r\n    templateUrl: './create-or-edit-simulator-modal.component.html'\r\n})\r\nexport class CreateOrEditSimulatorModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('simulatorOfficeLookupTableModal') simulatorOfficeLookupTableModal: SimulatorOfficeLookupTableModalComponent;\r\n\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    simulator: CreateOrEditSimulatorDto = new CreateOrEditSimulatorDto();\r\n\r\n    officeName = '';\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _simulatorsServiceProxy: SimulatorsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(simulatorId?: number): void {\r\n\r\n        if (!simulatorId) {\r\n            this.simulator = new CreateOrEditSimulatorDto();\r\n            this.simulator.id = simulatorId;\r\n            this.officeName = '';\r\n\r\n            this.active = true;\r\n            this.modal.show();\r\n        } else {\r\n            this._simulatorsServiceProxy.getSimulatorForEdit(simulatorId).subscribe(result => {\r\n                this.simulator = result.simulator;\r\n\r\n                this.officeName = result.officeName;\r\n\r\n                this.active = true;\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n\t\t\t\r\n            this._simulatorsServiceProxy.createOrEdit(this.simulator)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n        openSelectOfficeModal() {\r\n        this.simulatorOfficeLookupTableModal.id = this.simulator.officeId;\r\n        this.simulatorOfficeLookupTableModal.displayName = this.officeName;\r\n        this.simulatorOfficeLookupTableModal.show();\r\n    }\r\n\r\n\r\n        setOfficeIdNull() {\r\n        this.simulator.officeId = null;\r\n        this.officeName = '';\r\n    }\r\n\r\n\r\n        getNewOfficeId() {\r\n        this.simulator.officeId = this.simulatorOfficeLookupTableModal.id;\r\n        this.officeName = this.simulatorOfficeLookupTableModal.displayName;\r\n    }\r\n\r\n\r\n    close(): void {\r\n\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"PickOffice\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                <div class=\\\"m-portlet__body\\\">\\r\\n                    <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                                <div>\\r\\n                                    <div class=\\\"row align-items-center mb-4\\\">\\r\\n                                        <div class=\\\"col-xl-12\\\">\\r\\n                                            <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                                <div class=\\\"input-group\\\">\\r\\n                                                    <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                                    <span class=\\\"input-group-btn\\\">\\r\\n                                                        <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                            <div class=\\\"row align-items-center\\\">\\r\\n                                <div class=\\\"primeng-datatable-container\\\"\\r\\n                                     [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                                    <p-table #dataTable\\r\\n                                                 (onLazyLoad)=\\\"getAll($event)\\\"\\r\\n                                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                                 rows =\\\"5\\\"\\r\\n                                                 [paginator]=\\\"false\\\"\\r\\n                                                 [lazy]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\t [scrollable]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t ScrollWidth=\\\"100%\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 130px\\\" >{{l('Actions')}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 150px\\\" pSortableColumn=\\\"displayName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('Name')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon field=\\\"displayName\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                                    <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\" (click)=\\\"setAndSave(record)\\\">\\r\\n                                                        {{l(\\\"Select\\\")}}\\r\\n                                                    </button>\\r\\n                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.displayName}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n                                    </p-table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('NoData')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                    <div class=\\\"primeng-paging-container\\\">\\r\\n                                        <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                                     #paginator\\r\\n                                                     styleClass=\\\"office-lookup-table-paginator\\\"\\r\\n                                                     (onPageChange)=\\\"getAll($event)\\\"\\r\\n                                                     [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                                     [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                        </p-paginator>\\r\\n                                        <span class=\\\"total-records-count\\\">\\r\\n                                            {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".office-lookup-table-paginator .ui-paginator-rpp-options {\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVzb3VyY2VzL3NpbXVsYXRvcnMvRDovRHJpbWEgQXNwTmV0WmVyby9hbmd1bGFyL3NyYy9hcHAvYWRtaW4vcmVzb3VyY2VzL3NpbXVsYXRvcnMvc2ltdWxhdG9yLW9mZmljZS1sb29rdXAtdGFibGUtbW9kYWwuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FkbWluL3Jlc291cmNlcy9zaW11bGF0b3JzL3NpbXVsYXRvci1vZmZpY2UtbG9va3VwLXRhYmxlLW1vZGFsLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRVEsYUFBQTtBQ0FSIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcmVzb3VyY2VzL3NpbXVsYXRvcnMvc2ltdWxhdG9yLW9mZmljZS1sb29rdXAtdGFibGUtbW9kYWwuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIub2ZmaWNlLWxvb2t1cC10YWJsZS1wYWdpbmF0b3Ige1xuICAgIC51aS1wYWdpbmF0b3ItcnBwLW9wdGlvbnMge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cbiIsIi5vZmZpY2UtbG9va3VwLXRhYmxlLXBhZ2luYXRvciAudWktcGFnaW5hdG9yLXJwcC1vcHRpb25zIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */\"","import { Component, ViewChild, Injector, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport {SimulatorsServiceProxy, SimulatorOfficeLookupTableDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\n@Component({\r\n    selector: 'simulatorOfficeLookupTableModal',\r\n    styleUrls: ['./simulator-office-lookup-table-modal.component.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './simulator-office-lookup-table-modal.component.html'\r\n})\r\nexport class SimulatorOfficeLookupTableModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    filterText = '';\r\n    id: number;\r\n    displayName: string;\r\n    \r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n    active = false;\r\n    saving = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _simulatorsServiceProxy: SimulatorsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(): void {\r\n        this.active = true;\r\n        this.paginator.rows = 5;\r\n        this.getAll();\r\n        this.modal.show();\r\n    }\r\n\r\n    getAll(event?: LazyLoadEvent) {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._simulatorsServiceProxy.getAllOfficeForLookupTable(\r\n            this.filterText,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    setAndSave(office: SimulatorOfficeLookupTableDto) {\r\n        this.id = office.id;\r\n        this.displayName = office.displayName;\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  \\r\\n\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"Simulators\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"SimulatorsHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\t\\t\\t\\t<button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.Simulators.Create')\\\" (click)=\\\"createSimulator()\\\" \\r\\n\\t\\t\\tclass=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewSimulator\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getSimulators()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"kt-separator kt-separator--border-dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"NameFilter\\\">{{l(\\\"Name\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameFilter\\\" name=\\\"nameFilter\\\" [(ngModel)]=\\\"nameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ManufacturerFilter\\\">{{l(\\\"Manufacturer\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ManufacturerFilter\\\" name=\\\"manufacturerFilter\\\" [(ngModel)]=\\\"manufacturerFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ModelFilter\\\">{{l(\\\"Model\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ModelFilter\\\" name=\\\"modelFilter\\\" [(ngModel)]=\\\"modelFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ModulesFilter\\\">{{l(\\\"Modules\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ModulesFilter\\\" name=\\\"modulesFilter\\\" [(ngModel)]=\\\"modulesFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"InUseFilterSelect\\\">{{l(\\\"InUse\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"InUseFilter\\\" id=\\\"InUseFilterSelect\\\" [(ngModel)]=\\\"inUseFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\">{{l(\\\"All\\\")}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">{{l(\\\"False\\\")}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">{{l(\\\"True\\\")}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"OfficeNameFilter\\\">({{l(\\\"Office\\\")}}) {{l(\\\"Name\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"OfficeNameFilter\\\" name=\\\"officeNameFilter\\\" [(ngModel)]=\\\"officeNameFilter\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row mb-2\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container col-12\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getSimulators($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Simulators.Edit', 'Pages.Administration.Simulators.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"officeFk.name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"officeName\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"simulator.name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"manufacturer\\\">\\r\\n                                        {{l('Manufacturer')}}\\r\\n                                        <p-sortIcon field=\\\"simulator.manufacturer\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"model\\\">\\r\\n                                        {{l('Model')}}\\r\\n                                        <p-sortIcon field=\\\"simulator.model\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"modules\\\">\\r\\n                                        {{l('Modules')}}\\r\\n                                        <p-sortIcon field=\\\"simulator.modules\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 80px\\\" pSortableColumn=\\\"inUse\\\">\\r\\n                                        {{l('InUse')}}\\r\\n                                        <p-sortIcon field=\\\"simulator.inUse\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Simulators.Edit', 'Pages.Administration.Simulators.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewSimulatorModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Simulators.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditSimulatorModal.show(record.simulator.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Simulators.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteSimulator(record.simulator)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record.simulator)\\\">{{l('History')}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.officeName}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.simulator.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Manufacturer')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.simulator.manufacturer}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Model')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.simulator.model}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Modules')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.simulator.modules}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:80px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('InUse')}}</span>\\r\\n                                        <div *ngIf=\\\"record.simulator.inUse\\\" class=\\\"text-center\\\"><i class=\\\"fa fa-check-circle kt--font-success\\\" title=\\\"True\\\"></i></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!record.simulator.inUse\\\" class=\\\"text-center\\\"><i class=\\\"fa fa-times-circle\\\" title=\\\"False\\\"></i></div>\\r\\n                                    </td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getSimulators($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditSimulatorModal #createOrEditSimulatorModal (modalSave)=\\\"getSimulators()\\\"></createOrEditSimulatorModal>\\r\\n    <viewSimulatorModal #viewSimulatorModal></viewSimulatorModal>\\r\\n     <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n  \\r\\n</div>\\r\\n\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SimulatorsServiceProxy, SimulatorDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditSimulatorModalComponent } from './create-or-edit-simulator-modal.component';\r\nimport { ViewSimulatorModalComponent } from './view-simulator-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './simulators.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class SimulatorsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditSimulatorModal') createOrEditSimulatorModal: CreateOrEditSimulatorModalComponent;\r\n    @ViewChild('viewSimulatorModalComponent') viewSimulatorModal: ViewSimulatorModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    nameFilter = '';\r\n    manufacturerFilter = '';\r\n    modelFilter = '';\r\n    modulesFilter = '';\r\n    inUseFilter = -1;\r\n        officeNameFilter = '';\r\n\r\n\r\n    _entityTypeFullName = 'Drima.Resources.Simulator';\r\n    entityHistoryEnabled = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _simulatorsServiceProxy: SimulatorsServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getSimulators(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._simulatorsServiceProxy.getAll(\r\n            this.filterText,\r\n            this.nameFilter,\r\n            this.manufacturerFilter,\r\n            this.modelFilter,\r\n            this.modulesFilter,\r\n            this.inUseFilter,\r\n            this.officeNameFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createSimulator(): void {\r\n        this.createOrEditSimulatorModal.show();\r\n    }\r\n\r\n    showHistory(simulator: SimulatorDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: simulator.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: ''\r\n        });\r\n    }\r\n\r\n    deleteSimulator(simulator: SimulatorDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._simulatorsServiceProxy.delete(simulator.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._simulatorsServiceProxy.getSimulatorsToExcel(\r\n        this.filterText,\r\n            this.nameFilter,\r\n            this.manufacturerFilter,\r\n            this.modelFilter,\r\n            this.modulesFilter,\r\n            this.inUseFilter,\r\n            this.officeNameFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"Details\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Name\\\")}} :</h6>\\r\\n                        {{ item.simulator.name }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Manufacturer\\\")}} :</h6>\\r\\n                        {{ item.simulator.manufacturer }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Model\\\")}} :</h6>\\r\\n                        {{ item.simulator.model }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Modules\\\")}} :</h6>\\r\\n                        {{ item.simulator.modules }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"InUse\\\")}} :</h6>\\r\\n                        {{ item.simulator.inUse }}\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>({{l(\\\"Office\\\")}}) {{l(\\\"Name\\\")}} :</h6>\\r\\n                        {{item.officeName}}\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetSimulatorForViewDto, SimulatorDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewSimulatorModal',\r\n    templateUrl: './view-simulator-modal.component.html'\r\n})\r\nexport class ViewSimulatorModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetSimulatorForViewDto;\r\n\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetSimulatorForViewDto();\r\n        this.item.simulator = new SimulatorDto();\r\n    }\r\n\r\n    show(item: GetSimulatorForViewDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #vehicleForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"vehicle.id\\\">{{l(\\\"EditVehicle\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!vehicle.id\\\">{{l(\\\"CreateNewVehicle\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t \\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group m-form__group\\\">\\r\\n                        <label for=\\\"LicenseClassClass\\\">{{l(\\\"LicenseClass\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t<ng-multiselect-dropdown\\r\\n\\t\\t\\t\\t\\t\\t[placeholder]=\\\"placeholder\\\"\\r\\n\\t\\t\\t\\t\\t\\t[data]=\\\"dropdownList\\\"\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"selectedItems\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t[settings]=\\\"dropdownSettings\\\"\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t</ng-multiselect-dropdown>\\r\\n                    </div>\\r\\n\\t\\t\\t\\t<!-- <input class=\\\"form-control\\\" name=\\\"vehicle.licenseClasses\\\" [(ngModel)]=\\\"vehicle.licenseClasses\\\" type=\\\"text\\\"  hidden> -->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Vehicle_Name\\\">{{l(\\\"Name\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Vehicle_Name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.name\\\" name=\\\"Name\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Vehicle_Brand\\\">{{l(\\\"Brand\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Vehicle_Brand\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.brand\\\" name=\\\"Brand\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Vehicle_Model\\\">{{l(\\\"Model\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Vehicle_Model\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.model\\\" name=\\\"Model\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Vehicle_Powertrain\\\">{{l(\\\"Powertrain\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"Powertrain\\\" id=\\\"Vehicle_Powertrain\\\" [(ngModel)]=\\\"vehicle.vehiclePowertrain\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">{{l('Gas')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">{{l('Diesel')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">{{l('CNG')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">{{l('Hybrid')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">{{l('Electric')}}</option>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Vehicle_Gearbox\\\">{{l(\\\"Gearbox\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"Gearbox\\\" id=\\\"Vehicle_Gearbox\\\" [(ngModel)]=\\\"vehicle.gearbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">{{l('Manual')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">{{l('Automatic')}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Vehicle_Year\\\">{{l(\\\"Year\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Vehicle_Year\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.year\\\" name=\\\"Year\\\"   minlength=\\\"4\\\"  maxlength=\\\"4\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Vehicle_LicensePlate\\\">{{l(\\\"LicensePlate\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Vehicle_LicensePlate\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.licensePlate\\\" name=\\\"LicensePlate\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group m-form__group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ResponsibleInstructor\\\">{{l(\\\"ResponsibleInstructor\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" id=\\\"instructorFullName\\\" name=\\\"instructorFullName\\\" [(ngModel)]=\\\"instructorFullName\\\" type=\\\"text\\\" disabled>     \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-append\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary blue\\\" (click)=\\\"openSelectInstructorModal()\\\" type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i> {{l(\\\"Pick\\\")}}</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> <div class=\\\"input-group-prepend\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-danger btn-icon\\\" type=\\\"button\\\" (click)=\\\"setInstructorNull()\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"vehicle.responsibleInstructorId\\\" [(ngModel)]=\\\"vehicle.responsibleInstructorId\\\" type=\\\"text\\\"  hidden>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<br/><div class=\\\"m-checkbox-list\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Vehicle_InUse\\\" class=\\\"kt-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"Vehicle_InUse\\\" type=\\\"checkbox\\\" name=\\\"InUse\\\" [(ngModel)]=\\\"vehicle.inUse\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l(\\\"InUse\\\")}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!vehicleForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n<vehicleLicenseClassLookupTableModal #vehicleLicenseClassLookupTableModal (modalSave)=\\\"getNewLicenseClassId()\\\"></vehicleLicenseClassLookupTableModal>\\r\\n<vehicle-instructorLookupTableModal #instructorLookupTableModal (modalSave)=\\\"getNewInstructorId()\\\"></vehicle-instructorLookupTableModal>\\r\\n\\t\\t \\r\\n</div>\"","import { Component, ViewChild, Injector, Output, EventEmitter, OnInit} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { VehiclesServiceProxy, CreateOrEditVehicleDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\nimport { VehicleLicenseClassLookupTableModalComponent } from './vehicle-licenseClass-lookup-table-modal.component';\r\nimport { VehicleInstructorLookupTableModalComponent } from './vehicle-instructor-lookup-table-modal.component';\r\n\r\n\r\n@Component({\r\n    selector: 'createOrEditVehicleModal',\r\n    templateUrl: './create-or-edit-vehicle-modal.component.html'\r\n})\r\nexport class CreateOrEditVehicleModalComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('vehicleLicenseClassLookupTableModal') vehicleLicenseClassLookupTableModal: VehicleLicenseClassLookupTableModalComponent;\r\n    @ViewChild('instructorLookupTableModal') instructorLookupTableModal: VehicleInstructorLookupTableModalComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    vehicle: CreateOrEditVehicleDto = new CreateOrEditVehicleDto();\r\n\r\n    dropdownList = [];\r\n    selectedItems = [];\r\n    dropdownSettings = {};\r\n    placeholder = 'None';\r\n\r\n    instructorFullName = '';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _vehiclesServiceProxy: VehiclesServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'item_id',\r\n            textField: 'item_text',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'Unselect All',\r\n            allowSearchFilter: false\r\n        };\r\n    }\r\n\r\n    show(vehicleId?: number): void {\r\n\r\n        if (!vehicleId) {\r\n            this.vehicle = new CreateOrEditVehicleDto();\r\n            this.vehicle.id = vehicleId;\r\n            this.instructorFullName = '';\r\n\r\n            this.active = true;\r\n            this.updateLicenseClass(false);\r\n            this.modal.show();\r\n        } else {\r\n            this._vehiclesServiceProxy.getVehicleForEdit(vehicleId).subscribe(result => {\r\n                this.vehicle = result.vehicle;\r\n                this.instructorFullName = result.instructorFirstName + ' ' + result.instructorLastName;\r\n\r\n                this.active = true;\r\n                this.updateLicenseClass(true);\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n            this.vehicle.licenseClasses = [];\r\n\r\n            for (var licenseClass of this.selectedItems)\r\n            {\r\n                this.vehicle.licenseClasses.push(\r\n                    licenseClass.item_text\r\n                );\r\n            }\r\n\t\t\t\r\n            this._vehiclesServiceProxy.createOrEdit(this.vehicle)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n    updateLicenseClass(vehicleAvailable : boolean ) : void\r\n    {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._vehiclesServiceProxy.getAllLicenseClassForLookupTable(\r\n            \"\",\r\n            \"\",\r\n            0,\r\n            1000).subscribe(result => {\r\n\r\n                // for(var r = 0; r < result.items.length; r++)\r\n                //     console.log(result.items[r].id);\r\n    \r\n                this.dropdownList = [];\r\n                this.selectedItems = [];\r\n\r\n                for (var _i = 0; _i < result.items.length; _i++) \r\n                {   \r\n                    this.dropdownList.push(\r\n                    {\r\n                        item_id: _i, \r\n                        item_text: result.items[_i].displayName\r\n                    });\r\n                }\r\n\r\n                if(vehicleAvailable)\r\n                {\r\n                    for (var item of this.dropdownList) {\r\n                        for (var instructorClasses of this.vehicle.licenseClasses) {\r\n                            //console.log(item.item_text);\r\n                            //console.log(studentClasses);\r\n                            if(item.item_text == instructorClasses)\r\n                            {\r\n                                //console.log(\"Add it now\");\r\n                                this.selectedItems.push(\r\n                                    {\r\n                                        item_id: item.item_id,\r\n                                        item_text: item.item_text\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n\r\n                    //console.log(this.selectedItems.length);\r\n                }\r\n\r\n                this.primengTableHelper.hideLoadingIndicator();\r\n            });\r\n    }\r\n\r\n        openSelectLicenseClassModal() {\r\n        //this.vehicleLicenseClassLookupTableModal.id = this.vehicle.licenseClassId;\r\n        //this.vehicleLicenseClassLookupTableModal.displayName = this.licenseClassClass;\r\n        this.vehicleLicenseClassLookupTableModal.show();\r\n    }\r\n\r\n\r\n        setLicenseClassIdNull() {\r\n        //this.vehicle.licenseClassId = null;\r\n        //this.licenseClassClass = '';\r\n    }\r\n\r\n\r\n        getNewLicenseClassId() {\r\n        //this.vehicle.licenseClassId = this.vehicleLicenseClassLookupTableModal.id;\r\n       // this.licenseClassClass = this.vehicleLicenseClassLookupTableModal.displayName;\r\n    }\r\n\r\n    openSelectInstructorModal() {\r\n        //this.vehicleLicenseClassLookupTableModal.id = this.vehicle.licenseClassId;\r\n        //this.vehicleLicenseClassLookupTableModal.displayName = this.licenseClassClass;\r\n        this.instructorLookupTableModal.show();\r\n    }\r\n\r\n\r\n        setInstructorNull() {\r\n        this.vehicle.responsibleInstructorId = null;\r\n        this.instructorFullName = '';\r\n    }\r\n\r\n\r\n        getNewInstructorId() {\r\n        this.vehicle.responsibleInstructorId = this.instructorLookupTableModal.id;\r\n        this.instructorFullName = this.instructorLookupTableModal.firstName + ' ' + this.instructorLookupTableModal.lastName;\r\n    }\r\n\r\n\r\n    close(): void {\r\n\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"PickInstructor\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n                    <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                        <div class=\\\"m-portlet__body\\\">\\r\\n                            <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                                <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                                    <div class=\\\"row align-items-center mb-4\\\">\\r\\n                                        <div class=\\\"col-xl-12\\\">\\r\\n                                            <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                                <div class=\\\"input-group\\\">\\r\\n                                                    <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                                    <span class=\\\"input-group-btn\\\">\\r\\n                                                        <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                            <div class=\\\"row align-items-center\\\">\\r\\n                                <div class=\\\"primeng-datatable-container\\\"\\r\\n                                     [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                                    <p-table #dataTable\\r\\n                                                 (onLazyLoad)=\\\"getAll($event)\\\"\\r\\n                                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                                 rows =\\\"5\\\"\\r\\n                                                 [paginator]=\\\"false\\\"\\r\\n                                                 [lazy]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\t [scrollable]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t ScrollWidth=\\\"100%\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 130px\\\" >{{l('Actions')}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 150px\\\" pSortableColumn=\\\"firstName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('FirstName')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon field=\\\"firstName\\\"></p-sortIcon>\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 150px\\\" pSortableColumn=\\\"lastName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('LastName')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon field=\\\"lastName\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                                    <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\" (click)=\\\"setAndSave(record)\\\">\\r\\n                                                        {{l(\\\"Select\\\")}}\\r\\n                                                    </button>\\r\\n                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('FirstName')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.firstName}}\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('LastName')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.lastName}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n                                    </p-table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('NoData')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                    <div class=\\\"primeng-paging-container\\\">\\r\\n                                        <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                                     #paginator\\r\\n                                                     styleClass=\\\"student-lookup-table-paginator\\\"\\r\\n                                                     (onPageChange)=\\\"getAll($event)\\\"\\r\\n                                                     [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                                     [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                        </p-paginator>\\r\\n                                        <span class=\\\"total-records-count\\\">\\r\\n                                            {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".student-lookup-table-paginator .ui-paginator-rpp-options {\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVzb3VyY2VzL3ZlaGljbGVzL0Q6L0RyaW1hIEFzcE5ldFplcm8vYW5ndWxhci9zcmMvYXBwL2FkbWluL3Jlc291cmNlcy92ZWhpY2xlcy92ZWhpY2xlLWluc3RydWN0b3ItbG9va3VwLXRhYmxlLW1vZGFsLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9hZG1pbi9yZXNvdXJjZXMvdmVoaWNsZXMvdmVoaWNsZS1pbnN0cnVjdG9yLWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGFBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3Jlc291cmNlcy92ZWhpY2xlcy92ZWhpY2xlLWluc3RydWN0b3ItbG9va3VwLXRhYmxlLW1vZGFsLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLnN0dWRlbnQtbG9va3VwLXRhYmxlLXBhZ2luYXRvciB7XG4gICAgLnVpLXBhZ2luYXRvci1ycHAtb3B0aW9ucyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuIiwiLnN0dWRlbnQtbG9va3VwLXRhYmxlLXBhZ2luYXRvciAudWktcGFnaW5hdG9yLXJwcC1vcHRpb25zIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */\"","import { Component, ViewChild, Injector, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { VehiclesServiceProxy, VehicleInstructorLookupTableDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\n@Component({\r\n    selector: 'vehicle-instructorLookupTableModal',\r\n    styleUrls: ['./vehicle-instructor-lookup-table-modal.component.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './vehicle-instructor-lookup-table-modal.component.html'\r\n})\r\nexport class VehicleInstructorLookupTableModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    filterText = '';\r\n    id: number;\r\n    firstName: string;\r\n    lastName : string;\r\n    \r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n    active = false;\r\n    saving = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _vehiclesServiceProxy: VehiclesServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(): void {\r\n        this.active = true;\r\n        this.paginator.rows = 5;\r\n        this.getAll();\r\n        this.modal.show();\r\n    }\r\n\r\n    getAll(event?: LazyLoadEvent) {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._vehiclesServiceProxy.getAllInstructorForLookupTable(\r\n            this.filterText,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    setAndSave(instructor: VehicleInstructorLookupTableDto) {\r\n        this.id = instructor.id;\r\n        this.firstName = instructor.firstName;\r\n        this.lastName = instructor.lastName;\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"PickLicenseClass\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n                    <div class=\\\"kt-portlet\\\">\\r\\n                        <div class=\\\"kt-portlet__body\\\">\\r\\n                            <form class=\\\"kt-form\\\" autocomplete=\\\"off\\\">\\r\\n                                <div>\\r\\n                                    <div class=\\\"row align-items-center mb-4\\\">\\r\\n                                        <div class=\\\"col-xl-12\\\">\\r\\n                                            <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                                <div class=\\\"input-group\\\">\\r\\n                                                    <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                                    <span class=\\\"input-group-btn\\\">\\r\\n                                                        <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                            <div class=\\\"row align-items-center\\\">\\r\\n                                <div class=\\\"primeng-datatable-container\\\"\\r\\n                                     [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                                    <p-table #dataTable\\r\\n                                                 (onLazyLoad)=\\\"getAll($event)\\\"\\r\\n                                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                                 rows =\\\"5\\\"\\r\\n                                                 [paginator]=\\\"false\\\"\\r\\n                                                 [lazy]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\t [scrollable]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t ScrollWidth=\\\"100%\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 130px\\\" >{{l('Actions')}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 150px\\\" pSortableColumn=\\\"displayName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('Class')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon field=\\\"displayName\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                                    <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\" (click)=\\\"setAndSave(record)\\\">\\r\\n                                                        {{l(\\\"Select\\\")}}\\r\\n                                                    </button>\\r\\n                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Class')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.displayName}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n                                    </p-table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l('NoData')}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                    <div class=\\\"primeng-paging-container\\\">\\r\\n                                        <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                                     #paginator\\r\\n                                                     styleClass=\\\"licenseClass-lookup-table-paginator\\\"\\r\\n                                                     (onPageChange)=\\\"getAll($event)\\\"\\r\\n                                                     [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                                     [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                        </p-paginator>\\r\\n                                        <span class=\\\"total-records-count\\\">\\r\\n                                            {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".licenseClass-lookup-table-paginator .ui-paginator-rpp-options {\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVzb3VyY2VzL3ZlaGljbGVzL0Q6L0RyaW1hIEFzcE5ldFplcm8vYW5ndWxhci9zcmMvYXBwL2FkbWluL3Jlc291cmNlcy92ZWhpY2xlcy92ZWhpY2xlLWxpY2Vuc2VDbGFzcy1sb29rdXAtdGFibGUtbW9kYWwuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FkbWluL3Jlc291cmNlcy92ZWhpY2xlcy92ZWhpY2xlLWxpY2Vuc2VDbGFzcy1sb29rdXAtdGFibGUtbW9kYWwuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSxhQUFBO0FDQVIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9yZXNvdXJjZXMvdmVoaWNsZXMvdmVoaWNsZS1saWNlbnNlQ2xhc3MtbG9va3VwLXRhYmxlLW1vZGFsLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmxpY2Vuc2VDbGFzcy1sb29rdXAtdGFibGUtcGFnaW5hdG9yIHtcbiAgICAudWktcGFnaW5hdG9yLXJwcC1vcHRpb25zIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG4iLCIubGljZW5zZUNsYXNzLWxvb2t1cC10YWJsZS1wYWdpbmF0b3IgLnVpLXBhZ2luYXRvci1ycHAtb3B0aW9ucyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iXX0= */\"","import { Component, ViewChild, Injector, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport {VehiclesServiceProxy, VehicleLicenseClassLookupTableDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\n@Component({\r\n    selector: 'vehicleLicenseClassLookupTableModal',\r\n    styleUrls: ['./vehicle-licenseClass-lookup-table-modal.component.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './vehicle-licenseClass-lookup-table-modal.component.html'\r\n})\r\nexport class VehicleLicenseClassLookupTableModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    filterText = '';\r\n    id: number;\r\n    displayName: string;\r\n    \r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n    active = false;\r\n    saving = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _vehiclesServiceProxy: VehiclesServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(): void {\r\n        this.active = true;\r\n        this.paginator.rows = 5;\r\n        this.getAll();\r\n        this.modal.show();\r\n    }\r\n\r\n    getAll(event?: LazyLoadEvent) {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._vehiclesServiceProxy.getAllLicenseClassForLookupTable(\r\n            this.filterText,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    setAndSave(licenseClass: VehicleLicenseClassLookupTableDto) {\r\n        this.id = licenseClass.id;\r\n        this.displayName = licenseClass.displayName;\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.modalSave.emit(null);\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"Vehicles\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"VehiclesHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.Vehicles.Create')\\\" (click)=\\\"createVehicle()\\\" \\r\\n\\t\\t\\tclass=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewVehicle\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getVehicles()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"kt-separator kt-separator--border-dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"NameFilter\\\">{{l(\\\"Name\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameFilter\\\" name=\\\"nameFilter\\\" [(ngModel)]=\\\"nameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"BrandFilter\\\">{{l(\\\"Brand\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"BrandFilter\\\" name=\\\"brandFilter\\\" [(ngModel)]=\\\"brandFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ModelFilter\\\">{{l(\\\"Model\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ModelFilter\\\" name=\\\"modelFilter\\\" [(ngModel)]=\\\"modelFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"YearFilter\\\">{{l(\\\"Year\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"YearFilter\\\" name=\\\"yearFilter\\\" [(ngModel)]=\\\"yearFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"LicensePlateFilter\\\">{{l(\\\"LicensePlate\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"LicensePlateFilter\\\" name=\\\"licensePlateFilter\\\" [(ngModel)]=\\\"licensePlateFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"InUseFilterSelect\\\">{{l(\\\"InUse\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"InUseFilter\\\" id=\\\"InUseFilterSelect\\\" [(ngModel)]=\\\"inUseFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\">{{l(\\\"All\\\")}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">{{l(\\\"False\\\")}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">{{l(\\\"True\\\")}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"PowertrainFilterSelect\\\">{{l(\\\"Powertrain\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"PowertrainFilter\\\" id=\\\"PowertrainFilterSelect\\\" [(ngModel)]=\\\"powertrainFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\">{{l(\\\"All\\\")}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">{{l('Gas')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">{{l('Diesel')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">{{l('CNG')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">{{l('Hybrid')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">{{l('Electric')}}</option>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"LicenseClassClassFilter\\\">({{l(\\\"LicenseClass\\\")}}) {{l(\\\"Class\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"LicenseClassClassFilter\\\" name=\\\"licenseClassClassFilter\\\" [(ngModel)]=\\\"licenseClassClassFilter\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row mb-2\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container col-12\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getVehicles($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Vehicles.Edit', 'Pages.Administration.Vehicles.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"licenseClassFk.class\\\">\\r\\n                                        {{l('Class')}}\\r\\n                                        <p-sortIcon field=\\\"licenseClassClass\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"vehicle.name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"brand\\\">\\r\\n                                        {{l('Brand')}}\\r\\n                                        <p-sortIcon field=\\\"vehicle.brand\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"model\\\">\\r\\n                                        {{l('Model')}}\\r\\n                                        <p-sortIcon field=\\\"vehicle.model\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 80px\\\" pSortableColumn=\\\"year\\\">\\r\\n                                        {{l('Year')}}\\r\\n                                        <p-sortIcon field=\\\"vehicle.year\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"licensePlate\\\">\\r\\n                                        {{l('LicensePlate')}}\\r\\n                                        <p-sortIcon field=\\\"vehicle.licensePlate\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 80px\\\" pSortableColumn=\\\"inUse\\\">\\r\\n                                        {{l('InUse')}}\\r\\n                                        <p-sortIcon field=\\\"vehicle.inUse\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"powertrain\\\">\\r\\n                                        {{l('Powertrain')}}\\r\\n                                        <p-sortIcon field=\\\"vehicle.vehiclePowertrain\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"gearbox\\\">\\r\\n                                        {{l('Gearbox')}}\\r\\n                                        <p-sortIcon field=\\\"vehicle.gearbox\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Vehicles.Edit', 'Pages.Administration.Vehicles.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewVehicleModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Vehicles.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditVehicleModal.show(record.vehicle.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Vehicles.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteVehicle(record.vehicle)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Class')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.vehicle.licenseClasses}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.vehicle.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Brand')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.vehicle.brand}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Model')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.vehicle.model}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:80px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Year')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.vehicle.year}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('LicensePlate')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.vehicle.licensePlate}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:80px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('InUse')}}</span>\\r\\n                                        <div *ngIf=\\\"record.vehicle.inUse\\\" class=\\\"text-center\\\"><i class=\\\"fa fa-check-circle kt--font-success\\\" title=\\\"True\\\"></i></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!record.vehicle.inUse\\\" class=\\\"text-center\\\"><i class=\\\"fa fa-times-circle\\\" title=\\\"False\\\"></i></div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Powertrain')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l( powertrain[record.vehicle.vehiclePowertrain])}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Gearbox')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l( gearbox[record.vehicle.gearbox])}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getVehicles($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditVehicleModal #createOrEditVehicleModal (modalSave)=\\\"getVehicles()\\\"></createOrEditVehicleModal>\\r\\n    <viewVehicleModal #viewVehicleModal></viewVehicleModal>\\r\\n    \\r\\n</div>\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { VehiclesServiceProxy, VehicleDto , Powertrain, Gearbox } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditVehicleModalComponent } from './create-or-edit-vehicle-modal.component';\r\nimport { ViewVehicleModalComponent } from './view-vehicle-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './vehicles.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class VehiclesComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditVehicleModal') createOrEditVehicleModal: CreateOrEditVehicleModalComponent;\r\n    @ViewChild('viewVehicleModalComponent') viewVehicleModal: ViewVehicleModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    nameFilter = '';\r\n    brandFilter = '';\r\n    modelFilter = '';\r\n    yearFilter = '';\r\n    licensePlateFilter = '';\r\n    inUseFilter = -1;\r\n    powertrainFilter = -1;\r\n        licenseClassClassFilter = '';\r\n\r\n    powertrain = Powertrain;\r\n    gearbox = Gearbox;\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _vehiclesServiceProxy: VehiclesServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getVehicles(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._vehiclesServiceProxy.getAll(\r\n            this.filterText,\r\n            this.nameFilter,\r\n            this.brandFilter,\r\n            this.modelFilter,\r\n            this.yearFilter,\r\n            this.licensePlateFilter,\r\n            this.inUseFilter,\r\n            this.powertrainFilter,\r\n            this.licenseClassClassFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createVehicle(): void {\r\n        this.createOrEditVehicleModal.show();\r\n    }\r\n\r\n    deleteVehicle(vehicle: VehicleDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._vehiclesServiceProxy.delete(vehicle.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._vehiclesServiceProxy.getVehiclesToExcel(\r\n        this.filterText,\r\n            this.nameFilter,\r\n            this.brandFilter,\r\n            this.modelFilter,\r\n            this.yearFilter,\r\n            this.licensePlateFilter,\r\n            this.inUseFilter,\r\n            this.powertrainFilter,\r\n            this.licenseClassClassFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"Details\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Name\\\")}} :</h6>\\r\\n                        {{ item.vehicle.name }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Brand\\\")}} :</h6>\\r\\n                        {{ item.vehicle.brand }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Model\\\")}} :</h6>\\r\\n                        {{ item.vehicle.model }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Year\\\")}} :</h6>\\r\\n                        {{ item.vehicle.year }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"LicensePlate\\\")}} :</h6>\\r\\n                        {{ item.vehicle.licensePlate }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"InUse\\\")}} :</h6>\\r\\n                        {{ item.vehicle.inUse }}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Powertrain\\\")}} :</h6>\\r\\n                        {{l( powertrain[item.vehicle.vehiclePowertrain])}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Gearbox\\\")}} :</h6>\\r\\n                        {{l(gearbox[item.vehicle.gearbox])}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"LicenseClasses\\\")}} :</h6>\\r\\n                        {{licenseClasses}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"ResponsibleInstructor\\\")}} :</h6>\\r\\n                        {{item.instructorFullName}}\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetVehicleForViewDto, VehicleDto , Powertrain, Gearbox} from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewVehicleModal',\r\n    templateUrl: './view-vehicle-modal.component.html'\r\n})\r\nexport class ViewVehicleModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetVehicleForViewDto;\r\n    powertrain = Powertrain;\r\n    gearbox = Gearbox;\r\n    licenseClasses = 'None';\r\n\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetVehicleForViewDto();\r\n        this.item.vehicle = new VehicleDto();\r\n        this.updateLicenseClass();\r\n    }\r\n\r\n    show(item: GetVehicleForViewDto): void {\r\n        this.item = item;\r\n\r\n        this.updateLicenseClass();\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    updateLicenseClass() : void \r\n    {\r\n        if(this.item.vehicle.licenseClasses == null)\r\n            return;\r\n\r\n        for(var i = 0; i < this.item.vehicle.licenseClasses.length; i++)\r\n        {\r\n            if(i == 0)\r\n                this.licenseClasses = this.item.vehicle.licenseClasses[i];\r\n            else\r\n                this.licenseClasses += ', ' + this.item.vehicle.licenseClasses[i];\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"role.id\\\">{{\\\"EditRole\\\" | localize}}: {{role.displayName}}</span>\\r\\n                        <span *ngIf=\\\"!role.id\\\">{{\\\"CreateNewRole\\\" | localize}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                        <tab heading=\\\"{{'RoleName' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>{{\\\"RoleName\\\" | localize}} *</label>\\r\\n                                <input id=\\\"RoleDisplayName\\\" #roleNameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"DisplayName\\\" [(ngModel)]=\\\"role.displayName\\\" required maxlength=\\\"64\\\">\\r\\n                                <validation-messages [formCtrl]=\\\"roleNameInput\\\"></validation-messages>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditRole_IsDefault\\\" type=\\\"checkbox\\\" name=\\\"IsDefault\\\" [(ngModel)]=\\\"role.isDefault\\\">\\r\\n                                    {{\\\"Default\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <span class=\\\"help-block\\\">{{\\\"DefaultRole_Description\\\" | localize}}</span>\\r\\n                            </div>\\r\\n                        </tab>\\r\\n                        <tab heading=\\\"{{'Permissions' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <permission-tree #permissionTree></permission-tree>\\r\\n                        </tab>\\r\\n                    </tabset>\\r\\n                    <div class=\\\"alert alert-warning\\\" style=\\\"margin-top: 30px;\\\">\\r\\n                        <em>{{'Note_RefreshPageForPermissionChanges' | localize}}</em>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!roleForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CreateOrUpdateRoleInput, RoleEditDto, RoleServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { PermissionTreeComponent } from '../shared/permission-tree.component';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'createOrEditRoleModal',\r\n    templateUrl: './create-or-edit-role-modal.component.html'\r\n})\r\nexport class CreateOrEditRoleModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('permissionTree') permissionTree: PermissionTreeComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    role: RoleEditDto = new RoleEditDto();\r\n    constructor(\r\n        injector: Injector,\r\n        private _roleService: RoleServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(roleId?: number): void {\r\n        const self = this;\r\n        self.active = true;\r\n\r\n        self._roleService.getRoleForEdit(roleId).subscribe(result => {\r\n            self.role = result.role;\r\n            this.permissionTree.editData = result;\r\n\r\n            self.modal.show();\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        document.getElementById('RoleDisplayName').focus();\r\n    }\r\n\r\n    save(): void {\r\n        const self = this;\r\n\r\n        const input = new CreateOrUpdateRoleInput();\r\n        input.role = self.role;\r\n        input.grantedPermissionNames = self.permissionTree.getGrantedPermissionNames();\r\n\r\n        this.saving = true;\r\n        this._roleService.createOrUpdateRole(input)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"Roles\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"RolesHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col text-right mt-3 mt-md-0\\\">\\r\\n                <button (click)=\\\"createRole()\\\" *ngIf=\\\"'Pages.Administration.Roles.Create' | permission\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus\\\"></i> {{\\\"CreateNewRole\\\" | localize}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                    <div class=\\\"row m--margin-bottom-10\\\">\\r\\n                        <div class=\\\"col-xl-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <permission-combo name=\\\"permissionFilter\\\" [(ngModel)]=\\\"selectedPermission\\\"></permission-combo>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-6 text-right\\\">\\r\\n                            <button name=\\\"RefreshButton\\\" class=\\\"btn btn-metal\\\" (click)=\\\"getRoles()\\\"><i class=\\\"la la-refresh\\\"></i> {{'Refresh' | localize}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-TurboTable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                 (onLazyLoad)=\\\"getRoles()\\\"\\r\\n                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 [paginator]=\\\"false\\\"\\r\\n                                 [lazy]=\\\"true\\\"\\r\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Roles.Edit', 'Pages.Administration.Roles.Delete')\\\">{{'Actions' | localize}}</th>\\r\\n                                    <th>{{'RoleName' | localize}}</th>\\r\\n                                    <th>{{'CreationTime' | localize}}</th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td [hidden]=\\\"!isGrantedAny('Pages.Administration.Roles.Edit', 'Pages.Administration.Roles.Delete')\\\">\\r\\n                                        <div *ngIf=\\\"!isStudentRole(record) && !isInstructorRole(record)\\\" class=\\\"btn-group dropdown\\\" dropdown>\\r\\n                                            <button dropdownToggle class=\\\"dropdown-toggle btn btn-primary btn-sm dropdown-toggle\\\">\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{\\\"Actions\\\" | localize}}\\r\\n                                            </button>\\r\\n                                            <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Administration.Roles.Edit' | permission\\\"\\r\\n                                                       (click)=\\\"createOrEditRoleModal.show(record.id)\\\">{{'Edit' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"!record.isStatic && ('Pages.Administration.Roles.Delete' | permission)\\\"\\r\\n                                                       (click)=\\\"deleteRole(record)\\\">{{'Delete' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record)\\\">{{'History' | localize}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'RoleName' | localize}}</span>\\r\\n                                        <span>\\r\\n                                            {{record.displayName}}\\r\\n                                            <span *ngIf=\\\"record.isStatic\\\"\\r\\n                                                  class=\\\"m-badge m-badge--brand m-badge--wide\\\"\\r\\n                                                  data-toggle=\\\"tooltip\\\"\\r\\n                                                  title=\\\"{{'StaticRole_Tooltip' | localize}}\\\"\\r\\n                                                  data-placement=\\\"top\\\">\\r\\n                                                {{'Static' | localize}}\\r\\n                                            </span>\\r\\n                                            <span *ngIf=\\\"record.isDefault\\\"\\r\\n                                                  class=\\\"m-badge m-badge--metal m-badge--wide\\\"\\r\\n                                                  data-toggle=\\\"tooltip\\\"\\r\\n                                                  title=\\\"{{'DefaultRole_Description' | localize}}\\\"\\r\\n                                                  data-placement=\\\"top\\\">\\r\\n                                                {{'Default' | localize}}\\r\\n                                            </span>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'CreationTime' | localize}}</span>\\r\\n                                        {{record.creationTime | momentFormat:'L'}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{'NoData' | localize}}\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-table-footer\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-TurboTable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditRoleModal #createOrEditRoleModal (modalSave)=\\\"getRoles()\\\"></createOrEditRoleModal>\\r\\n    <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n</div>\\r\\n\"","import { Component, Injector, ViewChild, OnInit } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { RoleListDto, RoleServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { CreateOrEditRoleModalComponent } from './create-or-edit-role-modal.component';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './roles.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class RolesComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('createOrEditRoleModal') createOrEditRoleModal: CreateOrEditRoleModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n\r\n    _entityTypeFullName = 'Drima.Authorization.Roles.Role';\r\n    entityHistoryEnabled = false;\r\n\r\n    //Filters\r\n    selectedPermission = '';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _roleService: RoleServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): void {\r\n        let customSettings = (abp as any).custom;\r\n        this.entityHistoryEnabled = customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getRoles(): void {\r\n        this.primengTableHelper.showLoadingIndicator();\r\n        let permission = this.permission ? this.selectedPermission : undefined;\r\n\r\n        this._roleService.getRoles(permission)\r\n            .pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator()))\r\n            .subscribe(result => {\r\n                this.primengTableHelper.records = result.items;\r\n                this.primengTableHelper.totalRecordsCount = result.items.length;\r\n                this.primengTableHelper.hideLoadingIndicator();\r\n            });\r\n    }\r\n\r\n    createRole(): void {\r\n        this.createOrEditRoleModal.show();\r\n    }\r\n\r\n    showHistory(role: RoleListDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: role.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: role.displayName\r\n        });\r\n    }\r\n\r\n    deleteRole(role: RoleListDto): void {\r\n        let self = this;\r\n        self.message.confirm(\r\n            self.l('RoleDeleteWarningMessage', role.displayName),\r\n            this.l('AreYouSure'),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._roleService.deleteRole(role.id).subscribe(() => {\r\n                        this.getRoles();\r\n                        abp.notify.success(this.l('SuccessfullyDeleted'));\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    isStudentRole(role: RoleListDto) : boolean{\r\n        if(role.name == \"Student\")\r\n        return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    isInstructorRole(role: RoleListDto) : boolean{\r\n        if(role.name == \"Instructor\")\r\n        return true;\r\n\r\n        return false;\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  \\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"PricePackages\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"PricePackagesHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.PricePackages.Create')\\\" (click)=\\\"createPricePackage()\\\" \\r\\n\\t\\t\\tclass=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewPricePackage\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getPricePackages()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"m-separator m-separator--border-dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"NameFilter\\\">{{l(\\\"Name\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameFilter\\\" name=\\\"nameFilter\\\" [(ngModel)]=\\\"nameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row mb-2\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container col-12\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getPricePackages($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.PricePackages.Edit', 'Pages.Administration.PricePackages.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"pricePackage.name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.PricePackages.Edit', 'Pages.Administration.PricePackages.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewPricePackageModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.PricePackages.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditPricePackageModal.show(record.pricePackage.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.PricePackages.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deletePricePackage(record.pricePackage)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.pricePackage.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getPricePackages($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditPricePackageModal #createOrEditPricePackageModal (modalSave)=\\\"getPricePackages()\\\"></createOrEditPricePackageModal>\\r\\n    <viewPricePackageModal #viewPricePackageModal></viewPricePackageModal>\\r\\n    \\r\\n  \\r\\n</div>\\r\\n\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PricePackagesServiceProxy, PricePackageDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditPricePackageModalComponent } from '../../../shared/common/sales/pricePackages/create-or-edit-pricePackage-modal.component';\r\nimport { ViewPricePackageModalComponent } from '../../../shared/common/sales/pricePackages/view-pricePackage-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './pricePackages.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class PricePackagesComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditPricePackageModal') createOrEditPricePackageModal: CreateOrEditPricePackageModalComponent;\r\n    @ViewChild('viewPricePackageModalComponent') viewPricePackageModal: ViewPricePackageModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    nameFilter = '';\r\n\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _pricePackagesServiceProxy: PricePackagesServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getPricePackages(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._pricePackagesServiceProxy.getAll(\r\n            this.filterText,\r\n            this.nameFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createPricePackage(): void {\r\n        this.createOrEditPricePackageModal.show();\r\n    }\r\n\r\n    deletePricePackage(pricePackage: PricePackageDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._pricePackagesServiceProxy.delete(pricePackage.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._pricePackagesServiceProxy.getPricePackagesToExcel(\r\n        this.filterText,\r\n            this.nameFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #productForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"product.id\\\">{{l(\\\"EditProduct\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!product.id\\\">{{l(\\\"CreateNewProduct\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Product_Name\\\">{{l(\\\"Name\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Product_Name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.name\\\" name=\\\"Name\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Product_Price\\\">{{l(\\\"Price\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" id=\\\"Product_Price\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.price\\\" name=\\\"Price\\\"  />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Product_VAT\\\">{{l(\\\"VAT\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" id=\\\"Product_VAT\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.vat\\\" name=\\\"VAT\\\"  min=\\\"1\\\"  max=\\\"2\\\"/>\\r\\n                                </div>-->\\r\\n                                \\r\\n                                <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Product_VAT\\\">{{l(\\\"VAT\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"Product_VAT\\\" id=\\\"Product_VAT\\\" [(ngModel)]=\\\"vat\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">{{fullVat}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">{{reducedVat}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">{{0}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"Product_ProductType\\\">{{l(\\\"ProductType\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"ProductType\\\" id=\\\"Product_ProductType\\\" [(ngModel)]=\\\"product.productType\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">{{l('Lesson')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">{{l('Fee')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">{{l('ExternalFee')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">{{l('Other')}}</option>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!productForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ProductsServiceProxy, CreateOrEditProductDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n    selector: 'createOrEditProductModal',\r\n    templateUrl: './create-or-edit-product-modal.component.html'\r\n})\r\nexport class CreateOrEditProductModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    product: CreateOrEditProductDto = new CreateOrEditProductDto();\r\n\r\n    fullVat : string;\r\n    reducedVat : string;\r\n\r\n    vat : number;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _productsServiceProxy: ProductsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(productId?: number): void {\r\n\r\n       this.fullVat = abp.setting.get(\"App.Invoice.FullVat\");\r\n       this.reducedVat = abp.setting.get(\"App.Invoice.ReducedVat\");\r\n\r\n        if (!productId) {\r\n            this.product = new CreateOrEditProductDto();\r\n            this.product.id = productId;\r\n\r\n            this.vat = 0;\r\n\r\n            this.active = true;\r\n            this.modal.show();\r\n        } else {\r\n            this._productsServiceProxy.getProductForEdit(productId).subscribe(result => {\r\n                this.product = result.product;\r\n\r\n                if(this.product.vat == Number(this.fullVat))\r\n                    this.vat = 0;\r\n                else if(this.product.vat == Number(this.reducedVat))\r\n                    this.vat = 1;\r\n                else\r\n                    this.vat = 2;\r\n\r\n                this.active = true;\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n            if(this.vat == 0)\r\n                this.product.vat = Number(this.fullVat);\r\n            else if(this.vat == 1)\r\n                this.product.vat = Number(this.reducedVat);\r\n\t\t\t\r\n            this._productsServiceProxy.createOrEdit(this.product)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n    close(): void {\r\n\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  \\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"Products\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"ProductsHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.Products.Create')\\\" (click)=\\\"createProduct()\\\" \\r\\n            class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewProduct\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div>\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getProducts()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"kt-separator kt-separator--border-dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"NameFilter\\\">{{l(\\\"Name\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameFilter\\\" name=\\\"nameFilter\\\" [(ngModel)]=\\\"nameFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"MinPriceFilter\\\">{{l(\\\"MinMax\\\")}} {{l(\\\"Price\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\r\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"MinPriceFilter\\\" [(ngModel)]=\\\"minPriceFilter\\\" placeholder=\\\"{{l('MinValue')}}\\\" name=\\\"minPriceFilter\\\" />\\r\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"maxPriceFilter\\\" placeholder=\\\"{{l('MaxValue')}}\\\" name=\\\"maxPriceFilter\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"MinVATFilter\\\">{{l(\\\"MinMax\\\")}} {{l(\\\"VAT\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\r\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"MinVATFilter\\\" [(ngModel)]=\\\"minVATFilter\\\" placeholder=\\\"{{l('MinValue')}}\\\" name=\\\"minVATFilter\\\" />\\r\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"maxVATFilter\\\" placeholder=\\\"{{l('MaxValue')}}\\\" name=\\\"maxVATFilter\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ProductTypeFilterSelect\\\">{{l(\\\"ProductType\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"ProductTypeFilter\\\" id=\\\"ProductTypeFilterSelect\\\" [(ngModel)]=\\\"productTypeFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\">{{l(\\\"All\\\")}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">{{l('Lesson')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">{{l('Fee')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">{{l('ExternalFee')}}</option>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">{{l('Other')}}</option>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row mb-2\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container col-12\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getProducts($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Products.Edit', 'Pages.Administration.Products.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{l('Name')}}\\r\\n                                        <p-sortIcon field=\\\"product.name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"price\\\">\\r\\n                                        {{l('Price')}}\\r\\n                                        <p-sortIcon field=\\\"product.price\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"vat\\\">\\r\\n                                        {{l('VAT')}}\\r\\n                                        <p-sortIcon field=\\\"product.vat\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"productType\\\">\\r\\n                                        {{l('ProductType')}}\\r\\n                                        <p-sortIcon field=\\\"product.productType\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Products.Edit', 'Pages.Administration.Products.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewProductModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Products.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditProductModal.show(record.product.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.Products.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteProduct(record.product)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record.product)\\\">{{l('History')}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Name')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.product.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Price')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.product.price}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('VAT')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.product.vat}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('ProductType')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{l( productType[record.product.productType])}}\\r\\n                                    </td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getProducts($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditProductModal #createOrEditProductModal (modalSave)=\\\"getProducts()\\\"></createOrEditProductModal>\\r\\n    <viewProductModal #viewProductModal></viewProductModal>\\r\\n     <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n  \\r\\n</div>\\r\\n\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProductsServiceProxy, ProductDto , ProductType } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditProductModalComponent } from './create-or-edit-product-modal.component';\r\nimport { ViewProductModalComponent } from './view-product-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './products.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class ProductsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditProductModal') createOrEditProductModal: CreateOrEditProductModalComponent;\r\n    @ViewChild('viewProductModalComponent') viewProductModal: ViewProductModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    nameFilter = '';\r\n    maxPriceFilter : number;\r\n\t\tmaxPriceFilterEmpty : number;\r\n\t\tminPriceFilter : number;\r\n\t\tminPriceFilterEmpty : number;\r\n    maxVATFilter : number;\r\n\t\tmaxVATFilterEmpty : number;\r\n\t\tminVATFilter : number;\r\n\t\tminVATFilterEmpty : number;\r\n    productTypeFilter = -1;\r\n\r\n    productType = ProductType;\r\n\r\n    _entityTypeFullName = 'Drima.Sales.Product';\r\n    entityHistoryEnabled = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _productsServiceProxy: ProductsServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getProducts(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._productsServiceProxy.getAll(\r\n            this.filterText,\r\n            this.nameFilter,\r\n            this.maxPriceFilter == null ? this.maxPriceFilterEmpty: this.maxPriceFilter,\r\n            this.minPriceFilter == null ? this.minPriceFilterEmpty: this.minPriceFilter,\r\n            this.maxVATFilter == null ? this.maxVATFilterEmpty: this.maxVATFilter,\r\n            this.minVATFilter == null ? this.minVATFilterEmpty: this.minVATFilter,\r\n            this.productTypeFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createProduct(): void {\r\n        this.createOrEditProductModal.show();\r\n    }\r\n\r\n    showHistory(product: ProductDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: product.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: ''\r\n        });\r\n    }\r\n\r\n    deleteProduct(product: ProductDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._productsServiceProxy.delete(product.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._productsServiceProxy.getProductsToExcel(\r\n        this.filterText,\r\n            this.nameFilter,\r\n            this.maxPriceFilter == null ? this.maxPriceFilterEmpty: this.maxPriceFilter,\r\n            this.minPriceFilter == null ? this.minPriceFilterEmpty: this.minPriceFilter,\r\n            this.maxVATFilter == null ? this.maxVATFilterEmpty: this.maxVATFilter,\r\n            this.minVATFilter == null ? this.minVATFilterEmpty: this.minVATFilter,\r\n            this.productTypeFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"Settings\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"SettingsHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col text-right mt-3 mt-md-0\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\"><i class=\\\"la la-floppy-o\\\"></i> {{\\\"SaveAll\\\" | localize}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"hostSettings\\\">\\r\\n                    <tab heading=\\\"{{'General' | localize}}\\\" *ngIf=\\\"showTimezoneSelection\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"Timezone\\\">{{\\\"Timezone\\\" | localize}}</label>\\r\\n                            <timezone-combo name=\\\"Timezone\\\" [(ngModel)]=\\\"hostSettings.general.timezone\\\" defaultTimezoneScope=\\\"{{defaultTimezoneScope}}\\\"></timezone-combo>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab heading=\\\"{{'TenantManagement' | localize}}\\\" *ngIf=\\\"hostSettings.tenantManagement\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"m-form\\\">\\r\\n                            <h5>{{\\\"FormBasedRegistration\\\" | localize}}</h5>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"Setting_AllowSelfRegistration\\\" class=\\\"m-checkbox\\\" style=\\\"margin-bottom: 0\\\">\\r\\n                                        <input id=\\\"Setting_AllowSelfRegistration\\\" type=\\\"checkbox\\\" name=\\\"AllowSelfRegistration\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.allowSelfRegistration\\\">\\r\\n                                        {{\\\"AllowTenantsToRegisterThemselves\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                    <span class=\\\"m-form__help\\\">{{\\\"AllowTenantsToRegisterThemselves_Hint\\\" | localize}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\" [hidden]=\\\"!hostSettings.tenantManagement.allowSelfRegistration\\\">\\r\\n                                    <label for=\\\"Setting_IsNewRegisteredTenantActiveByDefault\\\" class=\\\"m-checkbox\\\" style=\\\"margin-bottom: 0\\\">\\r\\n                                        <input id=\\\"Setting_IsNewRegisteredTenantActiveByDefault\\\" type=\\\"checkbox\\\" name=\\\"IsNewRegisteredTenantActiveByDefault\\\"\\r\\n                                               [(ngModel)]=\\\"hostSettings.tenantManagement.isNewRegisteredTenantActiveByDefault\\\">\\r\\n                                        {{\\\"NewRegisteredTenantsIsActiveByDefault\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                    <span class=\\\"m-form__help\\\">{{\\\"NewRegisteredTenantsIsActiveByDefault_Hint\\\" | localize}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\" [hidden]=\\\"!hostSettings.tenantManagement.allowSelfRegistration\\\">\\r\\n                                    <label for=\\\"Setting_UseCaptchaOnRegistration\\\" class=\\\"m-checkbox\\\">\\r\\n                                        <input id=\\\"Setting_UseCaptchaOnRegistration\\\" type=\\\"checkbox\\\" name=\\\"UseCaptchaOnRegistration\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.useCaptchaOnRegistration\\\">\\r\\n                                        {{\\\"UseCaptchaOnRegistration\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"DefaultEditionId\\\">{{\\\"Edition\\\" | localize}}</label>\\r\\n                                <select id=\\\"DefaultEditionId\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.defaultEditionId\\\">\\r\\n                                    <option value=\\\"\\\">{{emptyText}}</option>\\r\\n                                    <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab heading=\\\"{{'UserManagement' | localize}}\\\" *ngIf=\\\"hostSettings.userManagement\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"m-checkbox-list\\\">\\r\\n                            <label for=\\\"Settings_IsEmailConfirmationRequiredForLogin\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Settings_IsEmailConfirmationRequiredForLogin\\\" type=\\\"checkbox\\\" name=\\\"IsEmailConfirmationRequiredForLogin\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.userManagement.isEmailConfirmationRequiredForLogin\\\">\\r\\n                                {{\\\"EmailConfirmationRequiredForLogin\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                            <label for=\\\"Settings_SmsVerificationEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Settings_SmsVerificationEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SmsVerificationEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.userManagement.smsVerificationEnabled\\\">\\r\\n                                {{\\\"SmsVerificationEnabled\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                            <h5>{{\\\"CookieConsent\\\" | localize}}</h5>\\r\\n                            <label for=\\\"Settings_IsCookieConsentEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Settings_IsCookieConsentEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsCookieConsentEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.userManagement.isCookieConsentEnabled\\\">\\r\\n                                {{\\\"IsCookieConsentEnabled\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab heading=\\\"{{'Security' | localize}}\\\" *ngIf=\\\"hostSettings.security\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div>\\r\\n                            <h5>{{\\\"PasswordComplexity\\\" | localize}}</h5>\\r\\n                            <label for=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                {{\\\"UseDefaultSettings\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireDigit\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireDigit\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireDigit\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                           disabled>\\r\\n                                    {{\\\"PasswordComplexity_RequireDigit\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireLowercase\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireLowercase\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireLowercase\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                           disabled>\\r\\n                                    {{\\\"PasswordComplexity_RequireLowercase\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                           disabled>\\r\\n                                    {{\\\"PasswordComplexity_RequireNonAlphanumeric\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireUppercase\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireUppercase\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireUppercase\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                           disabled>\\r\\n                                    {{\\\"PasswordComplexity_RequireUppercase\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>{{\\\"PasswordComplexity_RequiredLength\\\" | localize}}</label>\\r\\n                                <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.passwordComplexity.requiredLength}\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requiredLength\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.defaultPasswordComplexity.requiredLength}\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requiredLength\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <h5>{{\\\"UserLockOut\\\" | localize}}</h5>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"Setting_UserLockOut_IsEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_UserLockOut_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_UserLockOut_IsEnabled\\\" [(ngModel)]=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\r\\n                                    {{\\\"EnableUserAccountLockingOnFailedLoginAttemts\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\r\\n                                <label for=\\\"MaxFailedAccessAttemptsBeforeLockout\\\">{{\\\"MaxFailedAccessAttemptsBeforeLockout\\\" | localize}}</label>\\r\\n                                <input id=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" type=\\\"number\\\" name=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout}\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\r\\n                                <label for=\\\"DefaultAccountLockoutDurationAsSeconds\\\">{{\\\"DefaultAccountLockoutDurationAsSeconds\\\" | localize}}</label>\\r\\n                                <input id=\\\"DefaultAccountLockoutDurationAsSeconds\\\" type=\\\"number\\\" name=\\\"DefaultAccountLockoutSeconds\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.userLockOut.defaultAccountLockoutSeconds}\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.userLockOut.defaultAccountLockoutSeconds\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <h5>{{\\\"TwoFactorLogin\\\" | localize}}</h5>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEnabled\\\" [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                    {{\\\"EnableTwoFactorLogin\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isEmailProviderEnabled\\\">\\r\\n                                    {{\\\"IsEmailVerificationEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isSmsProviderEnabled\\\">\\r\\n                                    {{\\\"IsSmsVerificationEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isGoogleAuthenticatorEnabled\\\">\\r\\n                                    {{\\\"IsGoogleAuthenticatorEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\"\\r\\n                                           [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isRememberBrowserEnabled\\\">\\r\\n                                    {{\\\"AllowToRememberBrowserForTwoFactorLogin\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab heading=\\\"{{'EmailSmtp' | localize}}\\\" *ngIf=\\\"hostSettings.email\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"DefaultFromAddress\\\">{{\\\"DefaultFromAddress\\\" | localize}}</label>\\r\\n                            <input id=\\\"DefaultFromAddress\\\" type=\\\"email\\\" name=\\\"DefaultFromAddress\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.defaultFromAddress}\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.email.defaultFromAddress\\\" maxlength=\\\"256\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"DefaultFromDisplayName\\\">{{\\\"DefaultFromDisplayName\\\" | localize}}</label>\\r\\n                            <input id=\\\"DefaultFromDisplayName\\\" type=\\\"text\\\" name=\\\"DefaultFromDisplayName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.defaultFromDisplayName}\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.email.defaultFromDisplayName\\\" maxlength=\\\"128\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"SmtpHost\\\">{{\\\"SmtpHost\\\" | localize}}</label>\\r\\n                            <input id=\\\"SmtpHost\\\" type=\\\"text\\\" name=\\\"SmtpHost\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpHost}\\\" [(ngModel)]=\\\"hostSettings.email.smtpHost\\\"\\r\\n                                   maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"SmtpPort\\\">{{\\\"SmtpPort\\\" | localize}}</label>\\r\\n                            <input id=\\\"SmtpPort\\\" type=\\\"number\\\" name=\\\"SmtpPort\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpPort}\\\" [(ngModel)]=\\\"hostSettings.email.smtpPort\\\"\\r\\n                                   maxlength=\\\"5\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"m-checkbox-list\\\">\\r\\n                            <label for=\\\"Settings_SmtpEnableSsl\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Settings_SmtpEnableSsl\\\" type=\\\"checkbox\\\" name=\\\"SmtpEnableSsl\\\" [(ngModel)]=\\\"hostSettings.email.smtpEnableSsl\\\">\\r\\n                                {{\\\"UseSsl\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                            <label for=\\\"Settings_SmtpUseDefaultCredentials\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Settings_SmtpUseDefaultCredentials\\\" type=\\\"checkbox\\\" name=\\\"SmtpUseDefaultCredentials\\\" [(ngModel)]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\r\\n                                {{\\\"UseDefaultCredentials\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\r\\n                            <label for=\\\"SmtpDomainName\\\">{{\\\"DomainName\\\" | localize}}</label>\\r\\n                            <input id=\\\"SmtpDomainName\\\" type=\\\"text\\\" name=\\\"SmtpDomainName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpDomain}\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.email.smtpDomain\\\" maxlength=\\\"128\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\r\\n                            <label for=\\\"SmtpUserName\\\">{{\\\"UserName\\\" | localize}}</label>\\r\\n                            <input id=\\\"SmtpUserName\\\" type=\\\"text\\\" name=\\\"SmtpUserName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpUserName}\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.email.smtpUserName\\\" maxlength=\\\"128\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\r\\n                            <label for=\\\"SmtpPassword\\\">{{\\\"Password\\\" | localize}}</label>\\r\\n                            <input id=\\\"SmtpPassword\\\" type=\\\"password\\\" name=\\\"SmtpPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpPassword}\\\" [(ngModel)]=\\\"hostSettings.email.smtpPassword\\\"\\r\\n                                   maxlength=\\\"128\\\">\\r\\n                        </div>\\r\\n                        <hr />\\r\\n                        <h5>{{\\\"TestEmailSettingsHeader\\\" | localize}}</h5>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control input-mini\\\" [(ngModel)]=\\\"testEmailAddress\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-2\\\">\\r\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"sendTestEmail()\\\">{{\\\"SendTestEmail\\\" | localize}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{'Invoice' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <!-- *ngIf=\\\"true\\\" is a workaround for https://github.com/valor-software/ng2-bootstrap/issues/823 -->\\r\\n                        <h5>{{\\\"InvoiceInformation\\\" | localize}}</h5>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"LegalName\\\">{{\\\"LegalName\\\" | localize}}</label>\\r\\n                            <input id=\\\"LegalName\\\" type=\\\"text\\\" name=\\\"legalName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.billing.legalName}\\\" [(ngModel)]=\\\"hostSettings.billing.legalName\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"Address\\\">{{\\\"Address\\\" | localize}}</label>\\r\\n                            <textarea id=\\\"Address\\\" rows=\\\"5\\\" name=\\\"address\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.billing.address}\\\" [(ngModel)]=\\\"hostSettings.billing.address\\\" maxlength=\\\"256\\\"></textarea>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{'OtherSettings' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"m-checkbox-list\\\">\\r\\n                            <h5>{{\\\"QuickThemeSelection\\\" | localize}}</h5>\\r\\n                            <label for=\\\"Settings_IsQuickThemeSelectEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Settings_IsQuickThemeSelectEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsQuickThemeSelectEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.otherSettings.isQuickThemeSelectEnabled\\\">\\r\\n                                {{\\\"IsQuickThemeSelectEnabled\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                </tabset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ComboboxItemDto, CommonLookupServiceProxy, SettingScopes, HostSettingsEditDto, HostSettingsServiceProxy, SendTestEmailInput } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './host-settings.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class HostSettingsComponent extends AppComponentBase implements OnInit {\r\n\r\n    loading = false;\r\n    hostSettings: HostSettingsEditDto;\r\n    editions: ComboboxItemDto[] = undefined;\r\n    testEmailAddress: string = undefined;\r\n    showTimezoneSelection = abp.clock.provider.supportsMultipleTimezone;\r\n    defaultTimezoneScope: SettingScopes = SettingScopes.Application;\r\n\r\n    usingDefaultTimeZone = false;\r\n    initialTimeZone: string = undefined;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _hostSettingService: HostSettingsServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    loadHostSettings(): void {\r\n        const self = this;\r\n        self._hostSettingService.getAllSettings()\r\n            .subscribe(setting => {\r\n                self.hostSettings = setting;\r\n                self.initialTimeZone = setting.general.timezone;\r\n                self.usingDefaultTimeZone = setting.general.timezoneForComparison === self.setting.get('Abp.Timing.TimeZone');\r\n            });\r\n    }\r\n\r\n    loadEditions(): void {\r\n        const self = this;\r\n        self._commonLookupService.getEditionsForCombobox(false).subscribe((result) => {\r\n            self.editions = result.items;\r\n\r\n            const notAssignedEdition = new ComboboxItemDto();\r\n            notAssignedEdition.value = null;\r\n            notAssignedEdition.displayText = self.l('NotAssigned');\r\n\r\n            self.editions.unshift(notAssignedEdition);\r\n        });\r\n    }\r\n\r\n    init(): void {\r\n        const self = this;\r\n        self.testEmailAddress = self.appSession.user.emailAddress;\r\n        self.showTimezoneSelection = abp.clock.provider.supportsMultipleTimezone;\r\n        self.loadHostSettings();\r\n        self.loadEditions();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const self = this;\r\n        self.init();\r\n    }\r\n\r\n    sendTestEmail(): void {\r\n        const self = this;\r\n        const input = new SendTestEmailInput();\r\n        input.emailAddress = self.testEmailAddress;\r\n        self._hostSettingService.sendTestEmail(input).subscribe(result => {\r\n            self.notify.info(self.l('TestEmailSentSuccessfully'));\r\n        });\r\n    }\r\n\r\n    saveAll(): void {\r\n        const self = this;\r\n        self._hostSettingService.updateAllSettings(self.hostSettings).subscribe(result => {\r\n            self.notify.info(self.l('SavedSuccessfully'));\r\n\r\n            if (abp.clock.provider.supportsMultipleTimezone && self.usingDefaultTimeZone && self.initialTimeZone !== self.hostSettings.general.timezone) {\r\n                self.message.info(self.l('TimeZoneSettingChangedRefreshPageNotification')).then(() => {\r\n                    window.location.reload();\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"Settings\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"SettingsHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col text-right mt-3 mt-md-0\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\"><i class=\\\"la la-floppy-o\\\"></i> {{\\\"SaveAll\\\" | localize}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <tabset class=\\\"tab-container\\\" *ngIf=\\\"settings\\\">\\r\\n                    <tab heading=\\\"{{'General' | localize}}\\\" *ngIf=\\\"showTimezoneSelection\\\" [active]=\\\"activeTabIndex == 0\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"showTimezoneSelection\\\">\\r\\n                            <label for=\\\"Timezone\\\">{{\\\"Timezone\\\" | localize}}</label>\\r\\n                            <timezone-combo name=\\\"Timezone\\\" [(ngModel)]=\\\"settings.general.timezone\\\" defaultTimezoneScope=\\\"{{defaultTimezoneScope}}\\\"></timezone-combo>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{'Appearance' | localize}}\\\" [active]=\\\"activeTabIndex == 1\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"row m-form\\\">\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <h5>{{\\\"ApplicationLogo\\\" | localize}}</h5>\\r\\n                                <form #logoUploadForm>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"logoUploader\\\" class=\\\"col-lg-12\\\" required />\\r\\n                                        <span class=\\\"m-form__help col-lg-12\\\">{{\\\"UploadLogo_Info\\\" | localize}}</span>\\r\\n                                    </div>\\r\\n                                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"uploadLogo()\\\">{{\\\"Upload\\\" | localize}}</button>\\r\\n                                    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"clearLogo()\\\">{{\\\"Clear\\\" | localize}}</button>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <h5>{{\\\"CustomCSS\\\" | localize}}</h5>\\r\\n                                <p *ngIf=\\\"appSession.tenant.customCssId\\\"><a [href]=\\\"remoteServiceBaseUrl + '/TenantCustomization/GetCustomCss?id=' + appSession.tenant.customCssId\\\" target=\\\"_blank\\\">{{'Download' | localize}}</a></p>\\r\\n                                <form #cssUploadForm>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"customCssUploader\\\" class=\\\"col-lg-12\\\" required />\\r\\n                                        <span class=\\\"m-form__help col-lg-12\\\">{{\\\"UploadCSS_Info\\\" | localize}}</span>\\r\\n                                    </div>\\r\\n                                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"uploadCustomCss()\\\">{{\\\"Upload\\\" | localize}}</button>\\r\\n                                    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"clearCustomCss()\\\">{{\\\"Clear\\\" | localize}}</button>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{'UserManagement' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"m-form\\\">\\r\\n                            <h5>{{\\\"FormBasedRegistration\\\" | localize}}</h5>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"Setting_AllowSelfRegistration\\\" class=\\\"m-checkbox\\\" style=\\\"margin-bottom: 0\\\">\\r\\n                                        <input id=\\\"Setting_AllowSelfRegistration\\\" class=\\\"m-check\\\" type=\\\"checkbox\\\" name=\\\"AllowSelfRegistration\\\" [(ngModel)]=\\\"settings.userManagement.allowSelfRegistration\\\">\\r\\n                                        {{\\\"AllowUsersToRegisterThemselves\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                    <span class=\\\"m-form__help\\\">{{\\\"AllowUsersToRegisterThemselves_Hint\\\" | localize}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\" [hidden]=\\\"!settings.userManagement.allowSelfRegistration\\\">\\r\\n                                    <label for=\\\"Setting_IsNewRegisteredUserActiveByDefault\\\" class=\\\"m-checkbox\\\" style=\\\"margin-bottom: 0\\\">\\r\\n                                        <input id=\\\"Setting_IsNewRegisteredUserActiveByDefault\\\" type=\\\"checkbox\\\" name=\\\"IsNewRegisteredUserActiveByDefault\\\" [(ngModel)]=\\\"settings.userManagement.isNewRegisteredUserActiveByDefault\\\">\\r\\n                                        {{\\\"NewRegisteredUsersIsActiveByDefault\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                    <span class=\\\"m-form__help\\\">{{\\\"NewRegisteredUsersIsActiveByDefault_Hint\\\" | localize}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\" [hidden]=\\\"!settings.userManagement.allowSelfRegistration\\\">\\r\\n                                    <label for=\\\"Setting_UseCaptchaOnRegistration\\\" class=\\\"m-checkbox\\\">\\r\\n                                        <input id=\\\"Setting_UseCaptchaOnRegistration\\\" type=\\\"checkbox\\\" name=\\\"UseCaptchaOnRegistration\\\" [(ngModel)]=\\\"settings.userManagement.useCaptchaOnRegistration\\\">\\r\\n                                        {{\\\"UseCaptchaOnRegistration\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <h5>{{\\\"CookieConsent\\\" | localize}}</h5>\\r\\n                                <label for=\\\"Settings_IsCookieConsentEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Settings_IsCookieConsentEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsCookieConsentEnabled\\\"\\r\\n                                           [(ngModel)]=\\\"settings.userManagement.isCookieConsentEnabled\\\">\\r\\n                                    {{\\\"IsCookieConsentEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!isMultiTenancyEnabled && settings.ldap.isModuleEnabled\\\">\\r\\n                            <h5 class=\\\"margin-top-20\\\">{{\\\"LdapSettings\\\" | localize}}</h5>\\r\\n                            <label for=\\\"Setting_LdapIsEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Setting_LdapIsEnabled\\\" type=\\\"checkbox\\\" name=\\\"LdapIsEnabled\\\" [(ngModel)]=\\\"settings.ldap.isEnabled\\\">\\r\\n                                {{\\\"EnableLdapAuthentication\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\r\\n                                <label for=\\\"LdapDomainName\\\">{{\\\"DomainName\\\" | localize}}</label>\\r\\n                                <input id=\\\"LdapDomainName\\\" type=\\\"text\\\" name=\\\"LdapDomainName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.ldap.domain\\\" maxlength=\\\"128\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\r\\n                                <label for=\\\"LdapUserName\\\">{{\\\"UserName\\\" | localize}}</label>\\r\\n                                <input id=\\\"LdapUserName\\\" type=\\\"text\\\" name=\\\"LdapUserName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.ldap.userName\\\" maxlength=\\\"128\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\r\\n                                <label for=\\\"LdapPassword\\\">{{\\\"Password\\\" | localize}}</label>\\r\\n                                <input id=\\\"LdapPassword\\\" type=\\\"password\\\" name=\\\"LdapPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.ldap.password\\\" maxlength=\\\"128\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <h5 class=\\\"margin-top-20\\\">{{\\\"OtherSettings\\\" | localize}}</h5>\\r\\n                            <label for=\\\"Setting_IsEmailConfirmationRequiredForLogin\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Setting_IsEmailConfirmationRequiredForLogin\\\" type=\\\"checkbox\\\" name=\\\"IsEmailConfirmationRequiredForLogin\\\" [(ngModel)]=\\\"settings.userManagement.isEmailConfirmationRequiredForLogin\\\">\\r\\n                                {{\\\"EmailConfirmationRequiredForLogin\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{'Security' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <!-- *ngIf=\\\"true\\\" is a workaround for https://github.com/valor-software/ng2-bootstrap/issues/823 -->\\r\\n                        <div>\\r\\n                            <h5>{{\\\"PasswordComplexity\\\" | localize}}</h5>\\r\\n                            <label for=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" [(ngModel)]=\\\"settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                {{\\\"UseDefaultSettings\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireDigit\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.passwordComplexity.requireDigit\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireDigit\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                           disabled>\\r\\n                                    {{\\\"PasswordComplexity_RequireDigit\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireLowercase\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.passwordComplexity.requireLowercase\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireLowercase\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                           disabled>\\r\\n                                    {{\\\"PasswordComplexity_RequireLowercase\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.passwordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                           disabled>\\r\\n                                    {{\\\"PasswordComplexity_RequireNonAlphanumeric\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireUppercase\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.passwordComplexity.requireUppercase\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireUppercase\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                           disabled>\\r\\n                                    {{\\\"PasswordComplexity_RequireUppercase\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>{{\\\"PasswordComplexity_RequiredLength\\\" | localize}}</label>\\r\\n                                <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.passwordComplexity.requiredLength}\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.passwordComplexity.requiredLength\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.defaultPasswordComplexity.requiredLength}\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requiredLength\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <h5>{{\\\"UserLockOut\\\" | localize}}</h5>\\r\\n                            <div class=\\\"md-checkbox-list\\\">\\r\\n                                <div>\\r\\n                                    <label for=\\\"Setting_UserLockOut_IsEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                        <input id=\\\"Setting_UserLockOut_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_UserLockOut_IsEnabled\\\" [(ngModel)]=\\\"settings.security.userLockOut.isEnabled\\\">\\r\\n                                        {{\\\"EnableUserAccountLockingOnFailedLoginAttemts\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"settings.security.userLockOut.isEnabled\\\">\\r\\n                                <label for=\\\"MaxFailedAccessAttemptsBeforeLockout\\\">{{\\\"MaxFailedAccessAttemptsBeforeLockout\\\" | localize}}</label>\\r\\n                                <input id=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" type=\\\"number\\\" name=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout}\\\" [(ngModel)]=\\\"settings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"settings.security.userLockOut.isEnabled\\\">\\r\\n                                <label for=\\\"DefaultAccountLockoutSeconds\\\">{{\\\"DefaultAccountLockoutDurationAsSeconds\\\" | localize}}</label>\\r\\n                                <input id=\\\"DefaultAccountLockoutSeconds\\\" type=\\\"number\\\" name=\\\"DefaultAccountLockoutSeconds\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.userLockOut.defaultAccountLockoutSeconds}\\\" [(ngModel)]=\\\"settings.security.userLockOut.defaultAccountLockoutSeconds\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!isMultiTenancyEnabled || settings.security.twoFactorLogin.isEnabledForApplication\\\">\\r\\n                            <h5>{{\\\"TwoFactorLogin\\\" | localize}}</h5>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                    {{\\\"EnableTwoFactorLogin\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled && !isMultiTenancyEnabled\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isEmailProviderEnabled\\\">\\r\\n                                    {{\\\"IsEmailVerificationEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled && !isMultiTenancyEnabled\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isSmsProviderEnabled\\\">\\r\\n                                    {{\\\"IsSmsVerificationEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled && !isMultiTenancyEnabled\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\"\\r\\n                                           [(ngModel)]=\\\"settings.security.twoFactorLogin.isGoogleAuthenticatorEnabled\\\">\\r\\n                                    {{\\\"IsGoogleAuthenticatorEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isRememberBrowserEnabled\\\">\\r\\n                                    {{\\\"AllowToRememberBrowserForTwoFactorLogin\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab heading=\\\"{{'EmailSmtp' | localize}}\\\" *ngIf=\\\"!isMultiTenancyEnabled || appSession.application.allowTenantsToChangeEmailSettings\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"form-group m-form__group\\\"  *ngIf=\\\"isMultiTenancyEnabled\\\">\\r\\n                            <label for=\\\"Settings_UseHostDefaultEmailSettings\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Settings_UseHostDefaultEmailSettings\\\" type=\\\"checkbox\\\" name=\\\"UseHostDefaultEmailSettings\\\" [(ngModel)]=\\\"settings.email.useHostDefaultEmailSettings\\\">\\r\\n                                {{\\\"UseHostDefaultEmailSettings\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div [hidden]=\\\"settings.email.useHostDefaultEmailSettings\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"DefaultFromAddress\\\">{{\\\"DefaultFromAddress\\\" | localize}}</label>\\r\\n                                <input id=\\\"DefaultFromAddress\\\" type=\\\"email\\\" name=\\\"DefaultFromAddress\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.defaultFromAddress}\\\" [(ngModel)]=\\\"settings.email.defaultFromAddress\\\" maxlength=\\\"128\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"DefaultFromDisplayName\\\">{{\\\"DefaultFromDisplayName\\\" | localize}}</label>\\r\\n                                <input id=\\\"DefaultFromDisplayName\\\" type=\\\"text\\\" name=\\\"DefaultFromDisplayName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.defaultFromDisplayName}\\\" [(ngModel)]=\\\"settings.email.defaultFromDisplayName\\\" maxlength=\\\"128\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"SmtpHost\\\">{{\\\"SmtpHost\\\" | localize}}</label>\\r\\n                                <input id=\\\"SmtpHost\\\" type=\\\"text\\\" name=\\\"SmtpHost\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpHost}\\\" [(ngModel)]=\\\"settings.email.smtpHost\\\" maxlength=\\\"64\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"SmtpPort\\\">{{\\\"SmtpPort\\\" | localize}}</label>\\r\\n                                <input id=\\\"SmtpPort\\\" type=\\\"number\\\" name=\\\"SmtpPort\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpPort}\\\" [(ngModel)]=\\\"settings.email.smtpPort\\\" maxlength=\\\"5\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"Settings_SmtpEnableSsl\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Settings_SmtpEnableSsl\\\" type=\\\"checkbox\\\" name=\\\"SmtpEnableSsl\\\" [(ngModel)]=\\\"settings.email.smtpEnableSsl\\\">\\r\\n                                    {{\\\"UseSsl\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                                <label for=\\\"Settings_SmtpUseDefaultCredentials\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"Settings_SmtpUseDefaultCredentials\\\" type=\\\"checkbox\\\" name=\\\"SmtpUseDefaultCredentials\\\" [(ngModel)]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\r\\n                                    {{\\\"UseDefaultCredentials\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\r\\n                                <label for=\\\"SmtpDomainName\\\">{{\\\"DomainName\\\" | localize}}</label>\\r\\n                                <input id=\\\"SmtpDomainName\\\" type=\\\"text\\\" name=\\\"SmtpDomainName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpDomain}\\\" [(ngModel)]=\\\"settings.email.smtpDomain\\\" maxlength=\\\"128\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\r\\n                                <label for=\\\"SmtpUserName\\\">{{\\\"UserName\\\" | localize}}</label>\\r\\n                                <input id=\\\"SmtpUserName\\\" type=\\\"text\\\" name=\\\"SmtpUserName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpUserName}\\\" [(ngModel)]=\\\"settings.email.smtpUserName\\\" maxlength=\\\"128\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\r\\n                                <label for=\\\"SmtpPassword\\\">{{\\\"Password\\\" | localize}}</label>\\r\\n                                <input id=\\\"SmtpPassword\\\" type=\\\"password\\\" name=\\\"SmtpPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpPassword}\\\" [(ngModel)]=\\\"settings.email.smtpPassword\\\" maxlength=\\\"128\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <hr />\\r\\n                        <h5>{{\\\"TestEmailSettingsHeader\\\" | localize}}</h5>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control input-mini\\\" [(ngModel)]=\\\"testEmailAddress\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-2\\\">\\r\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"sendTestEmail()\\\">{{\\\"SendTestEmail\\\" | localize}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{'Invoice' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <!-- *ngIf=\\\"true\\\" is a workaround for https://github.com/valor-software/ng2-bootstrap/issues/823 -->\\r\\n                        <h5>{{\\\"InvoiceInformation\\\" | localize}}</h5>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"LegalName\\\">{{\\\"LegalName\\\" | localize}}</label>\\r\\n                            <input id=\\\"LegalName\\\" type=\\\"text\\\" name=\\\"legalName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.billing.legalName}\\\" [(ngModel)]=\\\"settings.billing.legalName\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"Address\\\">{{\\\"Address\\\" | localize}}</label>\\r\\n                            <textarea id=\\\"Address\\\" rows=\\\"5\\\" name=\\\"address\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.billing.address}\\\" [(ngModel)]=\\\"settings.billing.address\\\" maxlength=\\\"256\\\"></textarea>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"taxVatNo\\\">{{\\\"Tax/VatNo\\\" | localize}}</label>\\r\\n                            <input id=\\\"taxVatNo\\\" type=\\\"text\\\" name=\\\"taxVatNo\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.billing.taxVatNo}\\\" [(ngModel)]=\\\"settings.billing.taxVatNo\\\" maxlength=\\\"32\\\">\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{'CoreData' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <!-- *ngIf=\\\"true\\\" is a workaround for https://github.com/valor-software/ng2-bootstrap/issues/823 -->\\r\\n                        <h5>{{\\\"CoreData\\\" | localize}}</h5>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"DrivingSchoolNumber\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.drivingSchoolNumber}\\\" [(ngModel)]=\\\"settings.coreDataSettings.drivingSchoolNumber\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"DrivingLessonDuration\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.durationDrivingLesson}\\\" [(ngModel)]=\\\"settings.coreDataSettings.durationDrivingLesson\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"TheoryLessonDuration\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.durationTheoryLesson}\\\" [(ngModel)]=\\\"settings.coreDataSettings.durationTheoryLesson\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"CompanyName\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.companyName}\\\" [(ngModel)]=\\\"settings.coreDataSettings.companyName\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"FromStreet\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.fromStreet}\\\" [(ngModel)]=\\\"settings.coreDataSettings.fromStreet\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"FromZipCode\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.fromZipCode}\\\" [(ngModel)]=\\\"settings.coreDataSettings.fromZipCode\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"FromCity\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.fromCity}\\\" [(ngModel)]=\\\"settings.coreDataSettings.fromCity\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"VatId\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.vatId}\\\" [(ngModel)]=\\\"settings.coreDataSettings.vatId\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"TaxId\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.taxId}\\\" [(ngModel)]=\\\"settings.coreDataSettings.taxId\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"PhoneCell\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.phoneCell}\\\" [(ngModel)]=\\\"settings.coreDataSettings.phoneCell\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"PhoneLand\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.phoneLand}\\\" [(ngModel)]=\\\"settings.coreDataSettings.phoneLand\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"Website\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.website}\\\" [(ngModel)]=\\\"settings.coreDataSettings.website\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"EmailAddress\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.coreDataSettings.email}\\\" [(ngModel)]=\\\"settings.coreDataSettings.email\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <h5>{{\\\"StudentInvoice\\\" | localize}}</h5>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"InvoiceImage\\\" | localize}}</label>\\r\\n                            <div class=\\\"row m-form\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <form #logoUploadForm>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"invoiceLogoUploader\\\" class=\\\"col-lg-12\\\" required />\\r\\n                                        <span class=\\\"m-form__help col-lg-12\\\">{{\\\"UploadLogo_Info\\\" | localize}}</span>\\r\\n                                    </div>\\r\\n                                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"uploadInvoiceLogo()\\\">{{\\\"Upload\\\" | localize}}</button>\\r\\n                                    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"clearInvoiceLogo()\\\">{{\\\"Clear\\\" | localize}}</button>\\r\\n                                    </form>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\" *ngIf=\\\"invoiceLogo != null\\\">\\r\\n                                    <img id=\\\"invoiceLogo\\\" [src]='invoiceLogo' />\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\" *ngIf=\\\"invoiceLogo == null\\\">\\r\\n                                    <label>{{\\\"NoInvoiceImageSet\\\" | localize}}</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"FullVat\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.studentInvoiceSettings.fullVat}\\\" [(ngModel)]=\\\"settings.studentInvoiceSettings.fullVat\\\" maxlength=\\\"2\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"ReducedVat\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.studentInvoiceSettings.reducedVat}\\\" [(ngModel)]=\\\"settings.studentInvoiceSettings.reducedVat\\\" maxlength=\\\"2\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"DefaultStartText\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.studentInvoiceSettings.defaultStartText}\\\" [(ngModel)]=\\\"settings.studentInvoiceSettings.defaultStartText\\\" maxlength=\\\"256\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"DefaultEndText\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.studentInvoiceSettings.defaultEndText}\\\" [(ngModel)]=\\\"settings.studentInvoiceSettings.defaultEndText\\\" maxlength=\\\"256\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"DefaultReference\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.studentInvoiceSettings.defaultReference}\\\" [(ngModel)]=\\\"settings.studentInvoiceSettings.defaultReference\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"DefaultInterest\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.studentInvoiceSettings.defaultInterest}\\\" [(ngModel)]=\\\"settings.studentInvoiceSettings.defaultInterest\\\" maxlength=\\\"64\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>{{\\\"DefaultDaysToPay\\\" | localize}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.studentInvoiceSettings.defaultDaysToPay}\\\" [(ngModel)]=\\\"settings.studentInvoiceSettings.defaultDaysToPay\\\" maxlength=\\\"2\\\">\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                    <tab *ngIf=\\\"!isMultiTenancyEnabled\\\" heading=\\\"{{'OtherSettings' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"m-checkbox-list\\\">\\r\\n                            <h5>{{\\\"IsQuickThemeSelectEnabled\\\" | localize}}</h5>\\r\\n                            <label for=\\\"Settings_IsQuickThemeSelectEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                <input id=\\\"Settings_IsQuickThemeSelectEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsQuickThemeSelectEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"settings.otherSettings.isQuickThemeSelectEnabled\\\">\\r\\n                                {{\\\"IsQuickThemeSelectEnabled\\\" | localize}}\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                </tabset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { IAjaxResponse } from '@abp/abpHttpInterceptor';\r\nimport { TokenService } from '@abp/auth/token.service';\r\nimport { Component, Injector, OnInit } from '@angular/core';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { SettingScopes, SendTestEmailInput, TenantSettingsEditDto, TenantSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    templateUrl: './tenant-settings.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class TenantSettingsComponent extends AppComponentBase implements OnInit {\r\n\r\n    usingDefaultTimeZone = false;\r\n    initialTimeZone: string = null;\r\n    testEmailAddress: string = undefined;\r\n\r\n    isMultiTenancyEnabled: boolean = this.multiTenancy.isEnabled;\r\n    showTimezoneSelection: boolean = abp.clock.provider.supportsMultipleTimezone;\r\n    activeTabIndex: number = (abp.clock.provider.supportsMultipleTimezone) ? 0 : 1;\r\n    loading = false;\r\n    settings: TenantSettingsEditDto = undefined;\r\n\r\n    logoUploader: FileUploader;\r\n    customCssUploader: FileUploader;\r\n    invoiceLogoUploader: FileUploader;\r\n\r\n    invoiceLogo: any;\r\n\r\n    remoteServiceBaseUrl = AppConsts.remoteServiceBaseUrl;\r\n\r\n    defaultTimezoneScope: SettingScopes = SettingScopes.Tenant;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantSettingsService: TenantSettingsServiceProxy,\r\n        private _tokenService: TokenService,\r\n        private sanitizer: DomSanitizer\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.testEmailAddress = this.appSession.user.emailAddress;\r\n        this.getSettings();\r\n        this.initUploaders();\r\n\r\n        this.updateInvoiceLogoThumbnail();\r\n    }\r\n\r\n    getSettings(): void {\r\n        this.loading = true;\r\n        this._tenantSettingsService.getAllSettings()\r\n            .pipe(finalize(() => { this.loading = false; }))\r\n            .subscribe((result: TenantSettingsEditDto) => {\r\n                this.settings = result;\r\n                if (this.settings.general) {\r\n                    this.initialTimeZone = this.settings.general.timezone;\r\n                    this.usingDefaultTimeZone = this.settings.general.timezoneForComparison === abp.setting.values['Abp.Timing.TimeZone'];\r\n                }\r\n            });\r\n    }\r\n\r\n    initUploaders(): void {\r\n        this.logoUploader = this.createUploader(\r\n            '/TenantCustomization/UploadLogo',\r\n            result => {\r\n                this.appSession.tenant.logoFileType = result.fileType;\r\n                this.appSession.tenant.logoId = result.id;\r\n            }\r\n        );\r\n\r\n        this.invoiceLogoUploader = this.createUploader(\r\n            '/TenantCustomization/UploadInvoiceLogo',\r\n            result => {\r\n                this._tenantSettingsService.updateInvoiceLogoId(result.id);\r\n                this._tenantSettingsService.updateInvoiceLogoFileType(result.fileType);\r\n                this.updateInvoiceLogoThumbnail();\r\n            }\r\n        );\r\n\r\n        this.customCssUploader = this.createUploader(\r\n            '/TenantCustomization/UploadCustomCss',\r\n            result => {\r\n                this.appSession.tenant.customCssId = result.id;\r\n\r\n                let oldTenantCustomCss = document.getElementById('TenantCustomCss');\r\n                if (oldTenantCustomCss) {\r\n                    oldTenantCustomCss.remove();\r\n                }\r\n\r\n                let tenantCustomCss = document.createElement('link');\r\n                tenantCustomCss.setAttribute('id', 'TenantCustomCss');\r\n                tenantCustomCss.setAttribute('rel', 'stylesheet');\r\n                tenantCustomCss.setAttribute('href', AppConsts.remoteServiceBaseUrl + '/TenantCustomization/GetCustomCss?id=' + this.appSession.tenant.customCssId);\r\n                document.head.appendChild(tenantCustomCss);\r\n            }\r\n        );\r\n    }\r\n\r\n    createUploader(url: string, success?: (result: any) => void): FileUploader {\r\n        const uploader = new FileUploader({ url: AppConsts.remoteServiceBaseUrl + url });\r\n\r\n        uploader.onAfterAddingFile = (file) => {\r\n            file.withCredentials = false;\r\n        };\r\n\r\n        uploader.onSuccessItem = (item, response, status) => {\r\n            const ajaxResponse = <IAjaxResponse>JSON.parse(response);\r\n            if (ajaxResponse.success) {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                if (success) {\r\n                    success(ajaxResponse.result);\r\n                }\r\n            } else {\r\n                this.message.error(ajaxResponse.error.message);\r\n            }\r\n        };\r\n\r\n        const uploaderOptions: FileUploaderOptions = {};\r\n        uploaderOptions.authToken = 'Bearer ' + this._tokenService.getToken();\r\n        uploaderOptions.removeAfterUpload = true;\r\n        uploader.setOptions(uploaderOptions);\r\n        return uploader;\r\n    }\r\n\r\n    uploadLogo(): void {\r\n        this.logoUploader.uploadAll();\r\n    }\r\n\r\n    uploadInvoiceLogo(): void {\r\n        this.invoiceLogoUploader.uploadAll();\r\n    }\r\n\r\n    uploadCustomCss(): void {\r\n        this.customCssUploader.uploadAll();\r\n    }\r\n\r\n    updateInvoiceLogoThumbnail()\r\n    {\r\n        this._tenantSettingsService.getInvoiceLogo().subscribe((result: any) => {\r\n            if(result == null)\r\n            {\r\n                this.invoiceLogo = null;\r\n            }\r\n            else\r\n            {\r\n               let objectURL = 'data:image/jpeg;base64,' + result;\r\n                this.invoiceLogo = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n            }\r\n        });\r\n    }\r\n\r\n    clearLogo(): void {\r\n        this._tenantSettingsService.clearLogo().subscribe(() => {\r\n            this.appSession.tenant.logoFileType = null;\r\n            this.appSession.tenant.logoId = null;\r\n            this.invoiceLogo = null;\r\n            this.notify.info(this.l('ClearedSuccessfully'));\r\n        });\r\n    }\r\n\r\n    clearInvoiceLogo(): void {\r\n        this._tenantSettingsService.clearInvoiceLogo().subscribe(() => {\r\n            this.updateInvoiceLogoThumbnail();\r\n            this.notify.info(this.l('ClearedSuccessfully'));\r\n        });\r\n    }\r\n\r\n    clearCustomCss(): void {\r\n        this._tenantSettingsService.clearCustomCss().subscribe(() => {\r\n            this.appSession.tenant.customCssId = null;\r\n\r\n            let oldTenantCustomCss = document.getElementById('TenantCustomCss');\r\n            if (oldTenantCustomCss) {\r\n                oldTenantCustomCss.remove();\r\n            }\r\n\r\n            this.notify.info(this.l('ClearedSuccessfully'));\r\n        });\r\n    }\r\n\r\n    saveAll(): void {\r\n        this._tenantSettingsService.updateAllSettings(this.settings).subscribe(() => {\r\n            this.notify.info(this.l('SavedSuccessfully'));\r\n\r\n            if (abp.clock.provider.supportsMultipleTimezone && this.usingDefaultTimeZone && this.initialTimeZone !== this.settings.general.timezone) {\r\n                this.message.info(this.l('TimeZoneSettingChangedRefreshPageNotification')).then(() => {\r\n                    window.location.reload();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    sendTestEmail(): void {\r\n        const input = new SendTestEmailInput();\r\n        input.emailAddress = this.testEmailAddress;\r\n        this._tenantSettingsService.sendTestEmail(input).subscribe(result => {\r\n            this.notify.info(this.l('TestEmailSentSuccessfully'));\r\n        });\r\n    }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ComboboxItemDto, EditionServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    selector: 'edition-combo',\r\n    template:\r\n    `<select #EditionCombobox\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"selectedEdition\"\r\n        (ngModelChange)=\"selectedEditionChange.emit($event)\">\r\n            <option *ngFor=\"let edition of editions\" [value]=\"edition.value\">{{edition.displayText}}</option>\r\n    </select>`\r\n})\r\nexport class EditionComboComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('EditionCombobox') editionComboboxElement: ElementRef;\r\n\r\n    editions: ComboboxItemDto[] = [];\r\n\r\n    @Input() selectedEdition: string = undefined;\r\n    @Output() selectedEditionChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    constructor(\r\n        private _editionService: EditionServiceProxy,\r\n        injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._editionService.getEditionComboboxItems(0, true, false).subscribe(editions => {\r\n            this.editions = editions;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<p-tree [value]=\\\"treeData\\\" [(selection)]=\\\"selectedFeatures\\\" selectionMode=\\\"checkbox\\\" (onNodeSelect)=\\\"nodeSelect($event)\\\" [propagateSelectionUp]=\\\"false\\\">\\r\\n    <ng-template let-node pTemplate=\\\"default\\\">\\r\\n        <span style=\\\"margin-right: 5px;\\\">{{node.label}}</span>\\r\\n        <input type=\\\"text\\\"\\r\\n               [attr.name]=\\\"node.data.name\\\"\\r\\n               *ngIf=\\\"node.data.inputType.name === 'SINGLE_LINE_STRING'\\\"\\r\\n               [(ngModel)]=\\\"node.value\\\"\\r\\n               (change)=\\\"onInputChange(node)\\\">\\r\\n        <select *ngIf=\\\"node.data.inputType.name === 'COMBOBOX'\\\" [(ngModel)]=\\\"node.value\\\" (change)=\\\"onDropdownChange(node)\\\">\\r\\n            <option *ngFor=\\\"let item of node.data.inputType.itemSource.items\\\" [value]=\\\"item.value\\\">{{item.displayName}}</option>\\r\\n        </select>\\r\\n    </ng-template>\\r\\n</p-tree>\\r\\n\"","module.exports = \".feature-tree-textbox {\\n  max-width: 100px;\\n  margin: 1px;\\n  margin-left: 5px;\\n}\\n.feature-tree-textbox.feature-tree-textbox-invalid {\\n  background: #f00;\\n  color: white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vc2hhcmVkL0Q6L0RyaW1hIEFzcE5ldFplcm8vYW5ndWxhci9zcmMvYXBwL2FkbWluL3NoYXJlZC9mZWF0dXJlLXRyZWUuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FkbWluL3NoYXJlZC9mZWF0dXJlLXRyZWUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQ0NKO0FEQ0k7RUFDSSxnQkFBQTtFQUNBLFlBQUE7QUNDUiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NoYXJlZC9mZWF0dXJlLXRyZWUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmVhdHVyZS10cmVlLXRleHRib3gge1xuICAgIG1heC13aWR0aDogMTAwcHg7XG4gICAgbWFyZ2luOiAxcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcblxuICAgICYuZmVhdHVyZS10cmVlLXRleHRib3gtaW52YWxpZCB7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmMDA7XG4gICAgICAgIGNvbG9yOndoaXRlO1xuICAgIH1cbn1cbiIsIi5mZWF0dXJlLXRyZWUtdGV4dGJveCB7XG4gIG1heC13aWR0aDogMTAwcHg7XG4gIG1hcmdpbjogMXB4O1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuLmZlYXR1cmUtdHJlZS10ZXh0Ym94LmZlYXR1cmUtdHJlZS10ZXh0Ym94LWludmFsaWQge1xuICBiYWNrZ3JvdW5kOiAjZjAwO1xuICBjb2xvcjogd2hpdGU7XG59XG4iXX0= */\"","import { Component, Injector } from '@angular/core';\r\nimport { FeatureTreeEditModel } from '@app/admin/shared/feature-tree-edit.model';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FlatFeatureDto, NameValueDto } from '@shared/service-proxies/service-proxies';\r\nimport { ArrayToTreeConverterService } from '@shared/utils/array-to-tree-converter.service';\r\nimport { TreeDataHelperService } from '@shared/utils/tree-data-helper.service';\r\nimport { TreeNode } from 'primeng/api';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'feature-tree',\r\n    templateUrl: './feature-tree.component.html',\r\n    styleUrls: ['./feature-tree.component.less']\r\n})\r\nexport class FeatureTreeComponent extends AppComponentBase {\r\n\r\n    _editData: FeatureTreeEditModel;\r\n\r\n    set editData(val: FeatureTreeEditModel) {\r\n        this._editData = val;\r\n        this.setTreeData(val.features);\r\n        this.setSelectedNodes(val);\r\n    }\r\n\r\n    treeData: any;\r\n    selectedFeatures: TreeNode[] = [];\r\n\r\n    constructor(\r\n        private _arrayToTreeConverterService: ArrayToTreeConverterService,\r\n        private _treeDataHelperService: TreeDataHelperService,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    setTreeData(permissions: FlatFeatureDto[]) {\r\n        this.treeData = this._arrayToTreeConverterService.createTree(permissions, 'parentName', 'name', null, 'children',\r\n            [{\r\n                target: 'label',\r\n                source: 'displayName'\r\n            }, {\r\n                target: 'expandedIcon',\r\n                value: 'fa fa-folder-open m--font-warning'\r\n            },\r\n            {\r\n                target: 'collapsedIcon',\r\n                value: 'fa fa-folder m--font-warning'\r\n            },\r\n            {\r\n                target: 'expanded',\r\n                value: true\r\n            },\r\n            {\r\n                target: 'selectable',\r\n                targetFunction(item) {\r\n                    return item.inputType.name === 'CHECKBOX';\r\n                }\r\n            }]);\r\n    }\r\n\r\n    setSelectedNodes(val: FeatureTreeEditModel) {\r\n        _.forEach(val.features, feature => {\r\n            let items = _.filter(val.featureValues, { name: feature.name });\r\n            if (items && items.length === 1) {\r\n                let item = items[0];\r\n                this.setSelectedNode(item.name, item.value);\r\n            } else {\r\n                this.setSelectedNode(feature.name, feature.defaultValue);\r\n            }\r\n        });\r\n    }\r\n\r\n    setSelectedNode(featureName, value) {\r\n        let node;\r\n\r\n        if (value === 'true') {\r\n            node = this._treeDataHelperService.findNode(this.treeData, { data: { name: featureName } });\r\n            this.selectedFeatures.push(node);\r\n        } else if (value && value !== 'false') {\r\n            node = this._treeDataHelperService.findNode(this.treeData, { data: { name: featureName } });\r\n            node.value = value;\r\n            this.selectedFeatures.push(node);\r\n        }\r\n    }\r\n\r\n    getGrantedFeatures(): NameValueDto[] {\r\n        if (!this._editData.features) {\r\n            return [];\r\n        }\r\n\r\n        let features: NameValueDto[] = [];\r\n\r\n        for (let i = 0; i < this._editData.features.length; i++) {\r\n            let feature = new NameValueDto();\r\n            feature.name = this._editData.features[i].name;\r\n            feature.value = this.getFeatureValueByName(feature.name);\r\n\r\n            features.push(feature);\r\n        }\r\n\r\n        return features;\r\n    }\r\n\r\n    onDropdownChange(node) {\r\n        if (node.value) {\r\n            node.selected = true;\r\n        }\r\n    }\r\n\r\n    onInputChange(node) {\r\n        if (node.value) {\r\n            node.selected = true;\r\n        }\r\n    }\r\n\r\n    findFeatureByName(featureName: string): FlatFeatureDto {\r\n        const self = this;\r\n\r\n        const feature = _.find(self._editData.features, f => f.name === featureName);\r\n\r\n        if (!feature) {\r\n            abp.log.warn('Could not find a feature by name: ' + featureName);\r\n        }\r\n\r\n        return feature;\r\n    }\r\n\r\n    findFeatureValueByName(featureName: string) {\r\n        const self = this;\r\n        const feature = self.findFeatureByName(featureName);\r\n        if (!feature) {\r\n            return '';\r\n        }\r\n\r\n        const featureValue = _.find(self._editData.featureValues, f => f.name === featureName);\r\n        if (!featureValue) {\r\n            return feature.defaultValue;\r\n        }\r\n\r\n        return featureValue.value;\r\n    }\r\n\r\n    isFeatureValueValid(featureName: string, value: string): boolean {\r\n        const self = this;\r\n        const feature = self.findFeatureByName(featureName);\r\n        if (!feature || !feature.inputType || !feature.inputType.validator) {\r\n            return true;\r\n        }\r\n\r\n        const validator = (feature.inputType.validator as any);\r\n        if (validator.name === 'STRING') {\r\n            if (value === undefined || value === null) {\r\n                return validator.allowNull;\r\n            }\r\n\r\n            if (typeof value !== 'string') {\r\n                return false;\r\n            }\r\n\r\n            if (validator.minLength > 0 && value.length < validator.minLength) {\r\n                return false;\r\n            }\r\n\r\n            if (validator.maxLength > 0 && value.length > validator.maxLength) {\r\n                return false;\r\n            }\r\n\r\n            if (validator.regularExpression) {\r\n                return (new RegExp(validator.regularExpression)).test(value);\r\n            }\r\n        } else if (validator.name === 'NUMERIC') {\r\n            const numValue = parseInt(value);\r\n\r\n            if (isNaN(numValue)) {\r\n                return false;\r\n            }\r\n\r\n            const minValue = validator.minValue;\r\n            if (minValue > numValue) {\r\n                return false;\r\n            }\r\n\r\n            const maxValue = validator.maxValue;\r\n            if (maxValue > 0 && numValue > maxValue) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    areAllValuesValid(): boolean {\r\n\r\n        let result = true;\r\n\r\n        _.forEach(this._editData.features, feature => {\r\n            let value = this.getFeatureValueByName(feature.name);\r\n            if (!this.isFeatureValueValid(feature.name, value)) {\r\n                result = false;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    setFeatureValueByName(featureName: string, value: string): void {\r\n        const featureValue = _.find(this._editData.featureValues, f => f.name === featureName);\r\n        if (!featureValue) {\r\n            return;\r\n        }\r\n\r\n        featureValue.value = value;\r\n    }\r\n\r\n    isFeatureSelected(name: string): boolean {\r\n        let nodes = _.filter(this.selectedFeatures, { data: { name: name } });\r\n        return nodes && nodes.length === 1;\r\n    }\r\n\r\n    getFeatureValueByName(featureName: string): string {\r\n        let feature = this._treeDataHelperService.findNode(this.treeData, { data: { name: featureName } });\r\n        if (!feature) {\r\n            return null;\r\n        }\r\n\r\n        if (feature.value) {\r\n            return feature.value;\r\n        }\r\n\r\n        if (!this.isFeatureSelected(featureName)) {\r\n            return 'false';\r\n        }\r\n\r\n        return 'true';\r\n    }\r\n\r\n    isFeatureEnabled(featureName: string): boolean {\r\n        const self = this;\r\n        const value = self.findFeatureValueByName(featureName);\r\n        return value.toLowerCase() === 'true';\r\n    }\r\n\r\n    nodeSelect(event) {\r\n        let parentNode = this._treeDataHelperService.findParent(this.treeData, { data: { name: event.node.data.name } });\r\n\r\n        while (parentNode != null) {\r\n            const isParentNodeAdded = _.find(this.selectedFeatures, f => f.data.name === parentNode.data.name);\r\n            if (!isParentNodeAdded) {\r\n                this.selectedFeatures.push(parentNode);\r\n            }\r\n\r\n            parentNode = this._treeDataHelperService.findParent(this.treeData, { data: { name: parentNode.data.name } });\r\n        }\r\n    }\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { OrganizationUnitDto } from '@shared/service-proxies/service-proxies';\r\nimport { ArrayToTreeConverterService } from '@shared/utils/array-to-tree-converter.service';\r\nimport { TreeDataHelperService } from '@shared/utils/tree-data-helper.service';\r\nimport { TreeNode } from 'primeng/api';\r\nimport * as _ from 'lodash';\r\n\r\nexport interface IOrganizationUnitsTreeComponentData {\r\n    allOrganizationUnits: OrganizationUnitDto[];\r\n    selectedOrganizationUnits: string[];\r\n}\r\n\r\n@Component({\r\n    selector: 'organization-unit-tree',\r\n    template:\r\n        `<div class='form-group'>\r\n        <input id='OrganizationUnitsTreeFilter' type='text' (input)=\"filterOrganizationUnits($event)\" [(ngModel)]=\"filter\" class='form-control' placeholder='{{\"SearchWithThreeDot\" | localize}}' >\r\n    </div>\r\n    <p-tree [value]=\"treeData\"\r\n        selectionMode=\"checkbox\"\r\n        [(selection)]=\"selectedOus\" (onNodeSelect)=\"nodeSelect($event)\" [propagateSelectionUp]=\"false\"></p-tree>\r\n    `\r\n})\r\nexport class OrganizationUnitsTreeComponent extends AppComponentBase {\r\n\r\n    set data(data: IOrganizationUnitsTreeComponentData) {\r\n        this.setTreeData(data.allOrganizationUnits);\r\n        this.setSelectedNodes(data.selectedOrganizationUnits);\r\n\r\n        this._allOrganizationUnits = data.allOrganizationUnits;\r\n        this._selectedOrganizationUnits = data.selectedOrganizationUnits;\r\n    }\r\n\r\n    treeData: any;\r\n    selectedOus: TreeNode[] = [];\r\n\r\n    private _allOrganizationUnits: OrganizationUnitDto[];\r\n    private _selectedOrganizationUnits: string[];\r\n\r\n    filter = '';\r\n\r\n    constructor(\r\n        private _arrayToTreeConverterService: ArrayToTreeConverterService,\r\n        private _treeDataHelperService: TreeDataHelperService,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    setTreeData(organizationUnits: OrganizationUnitDto[]) {\r\n        this.treeData = this._arrayToTreeConverterService.createTree(organizationUnits, 'parentId', 'id', null, 'children',\r\n            [{\r\n                target: 'label',\r\n                source: 'displayName'\r\n            }, {\r\n                target: 'expandedIcon',\r\n                value: 'fa fa-folder-open m--font-warning'\r\n            },\r\n            {\r\n                target: 'collapsedIcon',\r\n                value: 'fa fa-folder m--font-warning'\r\n            },\r\n            {\r\n                target: 'expanded',\r\n                value: true\r\n            }]);\r\n\r\n    }\r\n\r\n    setSelectedNodes(selectedOrganizationUnits: string[]) {\r\n        _.forEach(selectedOrganizationUnits, ou => {\r\n            let item = this._treeDataHelperService.findNode(this.treeData, { data: { code: ou } });\r\n            if (item) {\r\n                this.selectedOus.push(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    getSelectedOrganizations(): number[] {\r\n        if (!this.selectedOus) {\r\n            return [];\r\n        }\r\n\r\n        let organizationIds = [];\r\n\r\n        _.forEach(this.selectedOus, ou => {\r\n            organizationIds.push(ou.data.id);\r\n        });\r\n\r\n        return organizationIds;\r\n    }\r\n\r\n    filterOrganizationUnit(nodes, filterText): any {\r\n        _.forEach(nodes, node => {\r\n            if (node.data.displayName.toLowerCase().indexOf(filterText.toLowerCase()) >= 0) {\r\n                node.styleClass =\r\n                    this.showParentNodes(node);\r\n            } else {\r\n                node.styleClass = 'hidden-tree-node';\r\n            }\r\n\r\n            if (node.children) {\r\n                this.filterOrganizationUnit(node.children, filterText);\r\n            }\r\n        });\r\n    }\r\n\r\n    showParentNodes(node): void {\r\n        if (!node.parent) {\r\n            return;\r\n        }\r\n\r\n        node.parent.styleClass = '';\r\n        this.showParentNodes(node.parent);\r\n    }\r\n\r\n    filterOrganizationUnits(event): void {\r\n        this.filterOrganizationUnit(this.treeData, this.filter);\r\n    }\r\n\r\n    nodeSelect(event) {\r\n        let parentNode = this._treeDataHelperService.findParent(this.treeData, { data: { id: event.node.data.id } });\r\n\r\n        while (parentNode != null) {\r\n            this.selectedOus.push(parentNode);\r\n            parentNode = this._treeDataHelperService.findParent(this.treeData, { data: { id: parentNode.data.id } });\r\n        }\r\n    }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, ViewChild, forwardRef } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FlatPermissionWithLevelDto, PermissionServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'permission-combo',\r\n    template:\r\n        `<select class=\"form-control\" [formControl]=\"selectedPermission\">\r\n        <option value=\"\">{{'FilterByPermission' | localize}}</option>\r\n        <option *ngFor=\"let permission of permissions\" [value]=\"permission.name\">{{permission.displayName}}</option>\r\n    </select>`,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => PermissionComboComponent),\r\n        multi: true,\r\n    }]\r\n})\r\nexport class PermissionComboComponent extends AppComponentBase implements OnInit, ControlValueAccessor {\r\n\r\n    permissions: FlatPermissionWithLevelDto[] = [];\r\n    selectedPermission = new FormControl('');\r\n\r\n    onTouched: any = () => { };\r\n\r\n    constructor(\r\n        private _permissionService: PermissionServiceProxy,\r\n        injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._permissionService.getAllPermissions().subscribe(result => {\r\n            _.forEach(result.items, item => {\r\n                item.displayName = Array(item.level + 1).join('---') + ' ' + item.displayName;\r\n            });\r\n\r\n            this.permissions = result.items;\r\n        });\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (this.selectedPermission) {\r\n            this.selectedPermission.setValue(obj);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.selectedPermission.valueChanges.subscribe(fn);\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        if (isDisabled) {\r\n            this.selectedPermission.disable();\r\n        } else {\r\n            this.selectedPermission.enable();\r\n        }\r\n    }\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\nimport { PermissionTreeEditModel } from '@app/admin/shared/permission-tree-edit.model';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ArrayToTreeConverterService } from '@shared/utils/array-to-tree-converter.service';\r\nimport { TreeDataHelperService } from '@shared/utils/tree-data-helper.service';\r\nimport { FlatPermissionDto } from '@shared/service-proxies/service-proxies';\r\nimport { TreeNode } from 'primeng/api';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'permission-tree',\r\n    template:\r\n        `<div class='form-group'>\r\n            <input type='text' (input)=\"filterPermissions($event)\" [(ngModel)]=\"filter\" class='form-control' placeholder='{{\"SearchWithThreeDot\" | localize}}' >\r\n        </div>\r\n        <p-tree [value]=\"treeData\" [(selection)]=\"selectedPermissions\" selectionMode=\"checkbox\" (onNodeSelect)=\"nodeSelect($event)\" [propagateSelectionUp]=\"false\"></p-tree>`\r\n})\r\nexport class PermissionTreeComponent extends AppComponentBase {\r\n\r\n    set editData(val: PermissionTreeEditModel) {\r\n        this.setTreeData(val.permissions);\r\n        this.setSelectedNodes(val.grantedPermissionNames);\r\n    }\r\n\r\n    treeData: any;\r\n    selectedPermissions: TreeNode[] = [];\r\n    filter = '';\r\n\r\n    constructor(\r\n        private _arrayToTreeConverterService: ArrayToTreeConverterService,\r\n        private _treeDataHelperService: TreeDataHelperService,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    setTreeData(permissions: FlatPermissionDto[]) {\r\n        this.treeData = this._arrayToTreeConverterService.createTree(permissions, 'parentName', 'name', null, 'children',\r\n            [{\r\n                target: 'label',\r\n                source: 'displayName'\r\n            }, {\r\n                target: 'expandedIcon',\r\n                value: 'fa fa-folder-open m--font-warning'\r\n            },\r\n            {\r\n                target: 'collapsedIcon',\r\n                value: 'fa fa-folder m--font-warning'\r\n            },\r\n            {\r\n                target: 'expanded',\r\n                value: true\r\n            }]);\r\n    }\r\n\r\n    setSelectedNodes(grantedPermissionNames: string[]) {\r\n        _.forEach(grantedPermissionNames, permission => {\r\n            let item = this._treeDataHelperService.findNode(this.treeData, { data: { name: permission } });\r\n            if (item) {\r\n                this.selectedPermissions.push(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    getGrantedPermissionNames(): string[] {\r\n        if (!this.selectedPermissions || !this.selectedPermissions.length) {\r\n            return [];\r\n        }\r\n\r\n        let permissionNames = [];\r\n\r\n        for (let i = 0; i < this.selectedPermissions.length; i++) {\r\n            permissionNames.push(this.selectedPermissions[i].data.name);\r\n        }\r\n\r\n        return permissionNames;\r\n    }\r\n\r\n    nodeSelect(event) {\r\n        let parentNode = this._treeDataHelperService.findParent(this.treeData, { data: { name: event.node.data.name } });\r\n\r\n        while (parentNode != null) {\r\n            this.selectedPermissions.push(parentNode);\r\n            parentNode = this._treeDataHelperService.findParent(this.treeData, { data: { name: parentNode.data.name } });\r\n        }\r\n    }\r\n\r\n    filterPermissions(event): void {\r\n        this.filterPermission(this.treeData, this.filter);\r\n    }\r\n\r\n    filterPermission(nodes, filterText): any {\r\n        _.forEach(nodes, node => {\r\n            if (node.data.displayName.toLowerCase().indexOf(filterText.toLowerCase()) >= 0) {\r\n                node.styleClass =\r\n                    this.showParentNodes(node);\r\n            } else {\r\n                node.styleClass = 'hidden-tree-node';\r\n            }\r\n\r\n            if (node.children) {\r\n                this.filterPermission(node.children, filterText);\r\n            }\r\n        });\r\n    }\r\n\r\n    showParentNodes(node): void {\r\n        if (!node.parent) {\r\n            return;\r\n        }\r\n\r\n        node.parent.styleClass = '';\r\n        this.showParentNodes(node.parent);\r\n    }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, ViewChild, forwardRef } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { RoleListDto, RoleServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'role-combo',\r\n    template:\r\n        `\r\n    <select class=\"form-control\" [formControl]=\"selectedRole\">\r\n        <option value=\"\">{{'FilterByRole' | localize}}</option>\r\n        <option *ngFor=\"let role of roles\" [value]=\"role.id\">{{role.displayName}}</option>\r\n    </select>`,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RoleComboComponent),\r\n        multi: true,\r\n    }]\r\n})\r\nexport class RoleComboComponent extends AppComponentBase implements OnInit, ControlValueAccessor {\r\n\r\n    roles: RoleListDto[] = [];\r\n    selectedRole = new FormControl('');\r\n\r\n    onTouched: any = () => { };\r\n\r\n    constructor(\r\n        private _roleService: RoleServiceProxy,\r\n        injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._roleService.getRoles(undefined).subscribe(result => {\r\n            this.roles = result.items;\r\n        });\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (this.selectedRole) {\r\n            this.selectedRole.setValue(obj);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.selectedRole.valueChanges.subscribe(fn);\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        if (isDisabled) {\r\n            this.selectedRole.disable();\r\n        } else {\r\n            this.selectedRole.enable();\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-content\\\">\\r\\n\\r\\n        <div class=\\\"m-portlet\\\">\\r\\n            <div class=\\\"m-portlet__body m-portlet__body--no-padding\\\">\\r\\n\\r\\n                <div class=\\\"m-invoice-1\\\">\\r\\n                    <div class=\\\"m-invoice__wrapper\\\">\\r\\n                        <div class=\\\"m-invoice__head\\\" [ngStyle]=\\\"{ 'background': 'url(' + appRootUrl() + 'assets/common/images/bg-6.jpg)', 'background-size': 'cover'}\\\"\\r\\n                             style=\\\"background-image: url(/assets/common/images/bg-6.jpg);\\\">\\r\\n                            <div class=\\\"m-invoice__container m-invoice__container--centered\\\">\\r\\n                                <div class=\\\"m-invoice__logo\\\">\\r\\n                                    <a href=\\\"#\\\">\\r\\n                                        <h1>{{'Invoice' | localize}}</h1>\\r\\n                                    </a>\\r\\n                                    <a href=\\\"#\\\">\\r\\n                                        <img [src]=\\\"companyLogo\\\">\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                                <span class=\\\"m-invoice__desc\\\">\\r\\n                                    {{invoiceInfo.hostLegalName}}\\r\\n                                    <span *ngFor=\\\"let addressLine of invoiceInfo.hostAddress\\\">\\r\\n                                        <br />{{addressLine}}\\r\\n                                    </span>\\r\\n                                </span>\\r\\n                                <div class=\\\"m-invoice__items\\\">\\r\\n                                    <div class=\\\"m-invoice__item\\\">\\r\\n                                        <span class=\\\"m-invoice__subtitle\\\">{{'Date' | localize}}</span>\\r\\n                                        <span class=\\\"m-invoice__text\\\">{{invoiceInfo.invoiceDate | momentFormat:'YYYY-MM-DD'}}</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"m-invoice__item\\\">\\r\\n                                        <span class=\\\"m-invoice__subtitle\\\">{{'Invoice' | localize}}</span>\\r\\n                                        <span class=\\\"m-invoice__text\\\">#{{invoiceInfo.invoiceNo}}</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"m-invoice__item\\\">\\r\\n                                        <span class=\\\"m-invoice__subtitle\\\">{{'InvoiceTo' | localize}}</span>\\r\\n                                        <span class=\\\"m-invoice__text\\\">\\r\\n                                            {{invoiceInfo.tenantLegalName}}\\r\\n                                            <span *ngFor=\\\"let addressLine of invoiceInfo.tenantAddress\\\">\\r\\n                                                <br />{{addressLine}}\\r\\n                                            </span>\\r\\n                                            <br />{{\\\"Tax/VatNo\\\" | localize}}: {{invoiceInfo.tenantTaxNo}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"m-invoice__body m-invoice__body--centered\\\">\\r\\n                            <div class=\\\"table-responsive\\\">\\r\\n                                <table class=\\\"table\\\">\\r\\n                                    <thead>\\r\\n                                    <tr>\\r\\n                                        <th style=\\\"width: 50px;\\\">#</th>\\r\\n                                        <th>{{\\\"Edition\\\" | localize}}</th>\\r\\n                                        <th style=\\\"width: 100px;\\\">{{\\\"Amount\\\" | localize}}</th>\\r\\n                                    </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                    <tr>\\r\\n                                        <td>1</td>\\r\\n                                        <td>{{invoiceInfo.editionDisplayName}}</td>\\r\\n                                        <td>{{appSession.application.currencySign}}{{invoiceInfo.amount | number: '1.2-2'}}</td>\\r\\n                                    </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"m-invoice__footer\\\">\\r\\n                            <div class=\\\"m-invoice__container m-invoice__container--centered\\\">\\r\\n                                <div class=\\\"m-invoice__content\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary d-print-none print-btn\\\" onclick=\\\"javascript:window.print();\\\">{{(\\\"Print\\\")}}</button>\\r\\n                                </div>\\r\\n                                <div class=\\\"m-invoice__content\\\">\\r\\n                                    <span>{{\\\"Total\\\" | localize}}</span>\\r\\n                                    <span class=\\\"m-invoice__price\\\">{{appSession.application.currencySign}}{{invoiceInfo.amount | number: '1.2-2'}}</span>\\r\\n                                    <span></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"/* Cubic Bezier Transition */\\n/***\\nInvoice page 2\\n***/\\n.invoice-content-2 {\\n  background-color: #fff;\\n  padding: 80px 70px;\\n}\\n.invoice-content-2.bordered {\\n  border: 1px solid;\\n  border-color: #e7ecf1;\\n}\\n.invoice-content-2 .invoice-head {\\n  margin-bottom: 50px;\\n}\\n.invoice-content-2 .invoice-head .invoice-logo > img {\\n  display: inline-block;\\n}\\n.invoice-content-2 .invoice-head .invoice-logo > h1 {\\n  float: left;\\n  font-size: 17px;\\n  font-weight: 700;\\n  color: #39424a;\\n  margin-top: 48px;\\n}\\n.invoice-content-2 .invoice-head .company-address {\\n  text-align: right;\\n  font-size: 14px;\\n  color: #7e8691;\\n}\\n.invoice-content-2 .invoice-title {\\n  font-size: 12px;\\n  font-weight: 600;\\n  letter-spacing: 1px;\\n  color: #9ea8b7;\\n}\\n.invoice-content-2 .invoice-desc {\\n  font-size: 14px;\\n  color: #4e5a64;\\n  font-weight: 600;\\n}\\n.invoice-content-2 .invoice-desc.inv-address {\\n  font-size: 13px;\\n  color: #7e8691;\\n  font-weight: 400;\\n}\\n.invoice-content-2 .invoice-desc.grand-total {\\n  font-size: 16px;\\n  font-weight: 700;\\n}\\n.invoice-content-2 .invoice-cust-add {\\n  margin-bottom: 50px;\\n}\\n.invoice-content-2 .invoice-body {\\n  padding-top: 100px;\\n}\\n.invoice-content-2 .invoice-body .text-center {\\n  text-align: center;\\n}\\n.invoice-content-2 .invoice-body tr:last-child {\\n  border-bottom: 1px solid #e7ecf1;\\n}\\n.invoice-content-2 .invoice-body th,\\n.invoice-content-2 .invoice-body td {\\n  vertical-align: middle;\\n  padding-left: 40px;\\n  padding-right: 40px;\\n}\\n.invoice-content-2 .invoice-body th:first-child,\\n.invoice-content-2 .invoice-body td:first-child {\\n  padding-left: 0;\\n}\\n.invoice-content-2 .invoice-body th:last-child,\\n.invoice-content-2 .invoice-body td:last-child {\\n  padding-right: 0;\\n}\\n.invoice-content-2 .invoice-body h3 {\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #4e5a64;\\n  margin-bottom: 0;\\n}\\n.invoice-content-2 .invoice-body p {\\n  font-size: 13px;\\n  color: #7e8691;\\n}\\n.invoice-content-2 .print-btn {\\n  float: right;\\n  font-size: 14px;\\n  font-weight: 600;\\n  letter-spacing: 1px;\\n}\\n@media (max-width: 1024px) {\\n  .invoice-content-2 .invoice-head .invoice-logo > img {\\n    width: 130px;\\n    margin-top: 26px;\\n  }\\n}\\n@media (max-width: 991px) {\\n  .invoice-content-2 {\\n    padding: 40px 30px;\\n  }\\n}\\n@media (max-width: 480px) {\\n  .invoice-content-2 .invoice-head .invoice-logo > h1 {\\n    margin-top: 10px;\\n  }\\n  .invoice-content-2 .invoice-head .company-address {\\n    font-size: 12px;\\n  }\\n}\\n.invoice-content-2 .invoice-body table tbody tr:last-child {\\n  border-bottom: none;\\n}\\n.invoice-subtotal {\\n  margin-top: 350px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { InvoiceDto, InvoiceServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './invoice.component.html',\r\n    styleUrls: ['./invoice.component.less'],\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class InvoiceComponent extends AppComponentBase implements OnInit {\r\n\r\n    paymentId = 0;\r\n    invoiceInfo: InvoiceDto = new InvoiceDto();\r\n    companyLogo = AppConsts.appBaseUrl + '/assets/common/images/logo.svg';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _invoiceServiceProxy: InvoiceServiceProxy,\r\n        private activatedRoute: ActivatedRoute\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getAllInfo();\r\n    }\r\n\r\n    getAllInfo(): void {\r\n\r\n        this.activatedRoute.params.subscribe((params: Params) => {\r\n            this.paymentId = params['paymentId'];\r\n        });\r\n\r\n        this._invoiceServiceProxy.getInvoiceInfo(this.paymentId).subscribe(result => {\r\n            this.invoiceInfo = result;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title\\\">\\r\\n                    <span>{{\\\"Subscription\\\" | localize}}</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                    <tab heading=\\\"{{'SubscriptionInformation' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <form class=\\\"m-form m-form--label-align-right\\\">\\r\\n                            <input type=\\\"hidden\\\" Name=\\\"PaymentPeriodType\\\" value=\\\"@tenant.PaymentPeriodType\\\" />\\r\\n                            <input type=\\\"hidden\\\" Name=\\\"Gateway\\\" value=\\\"@SubscriptionPaymentGatewayType.Paypal\\\" />\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label m--font-bold\\\">{{\\\"Edition\\\" | localize}}</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <p *ngIf=\\\"tenant.edition\\\">\\r\\n                                    {{tenant.edition.displayName}}\\r\\n                                    <span *ngIf=\\\"tenant.edition.isFree\\\" class=\\\"m-badge m-badge--success m-badge--wide\\\">{{\\\"Free\\\" | localize}}</span>\\r\\n                                    <span *ngIf=\\\"tenant.isInTrialPeriod\\\" class=\\\"m-badge m-badge--warning m-badge--wide\\\">{{\\\"Trial\\\" | localize}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label m--font-bold\\\">{{\\\"SubscriptionStartDate\\\" | localize}}</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <p>{{ tenant.creationTimeString }}</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label m--font-bold\\\">{{\\\"SubscriptionEndDate\\\" | localize}}</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <p *ngIf=\\\"tenant.edition\\\">\\r\\n                                        <span>{{tenant.subscriptionDateString}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <a *ngIf=\\\"!hasRecurringSubscription() && tenant.edition && !tenant.edition.isFree && !tenant.isInTrialPeriod\\\"\\r\\n                                       [routerLink]=\\\"['/account/extend']\\\" [queryParams]=\\\"{ editionPaymentType: editionPaymentType.Extend}\\\" class=\\\"btn btn-info\\\">\\r\\n                                        {{\\\"Extend\\\" | localize}}\\r\\n                                    </a>\\r\\n                                    <a *ngIf=\\\"tenant.isInTrialPeriod\\\"\\r\\n                                       [routerLink]=\\\"['/account/buy']\\\" [queryParams]=\\\"{editionPaymentType: editionPaymentType.BuyNow, editionId: tenant.edition.id, tenantId: tenant.id }\\\"\\r\\n                                       class=\\\"btn btn-info\\\">\\r\\n                                        {{\\\"BuyNow\\\" | localize}}\\r\\n                                    </a>\\r\\n                                    <a *ngIf=\\\"tenant.edition && (tenant.edition.isFree || !tenant.edition.isHighestEdition) && !tenant.isInTrialPeriod\\\"\\r\\n                                       [routerLink]=\\\"['/account/select-edition']\\\" class=\\\"btn btn-warning\\\">\\r\\n                                        {{\\\"Upgrade\\\" | localize}}\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\" [hidden]=\\\"tenant.subscriptionPaymentType != subscriptionPaymentType.RecurringAutomatic\\\">\\r\\n                                <label class=\\\"col-md-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <button class=\\\"btn btn-metal\\\" (click)=\\\"disableRecurringPayments()\\\">\\r\\n                                        {{\\\"DisableRecurringPayments\\\" | localize}}\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group m-form__group row\\\" [hidden]=\\\"tenant.subscriptionPaymentType != subscriptionPaymentType.RecurringManual\\\">\\r\\n                                <label class=\\\"col-md-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <button class=\\\"btn btn-info\\\" (click)=\\\"enableRecurringPayments()\\\">\\r\\n                                        {{\\\"EnableRecurringPayments\\\" | localize}}\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </form>\\r\\n                    </tab>\\r\\n                    <tab heading=\\\"{{'PaymentHistory' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                        <div class=\\\"primeng-datatable-container\\\"\\r\\n                             [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                            <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getPaymentHistory($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                                <ng-template pTemplate=\\\"header\\\">\\r\\n                                    <tr>\\r\\n                                        <th style=\\\"width: 130px\\\">{{'Invoice' | localize}}</th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"creationTime\\\">\\r\\n                                            {{'ProcessTime' | localize}}\\r\\n                                            <p-sortIcon field=\\\"creationTime\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"editionDisplayName\\\">\\r\\n                                            {{'Edition' | localize}}\\r\\n                                            <p-sortIcon field=\\\"editionDisplayName\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"gateway\\\">\\r\\n                                            {{'Gateway' | localize}}\\r\\n                                            <p-sortIcon field=\\\"gateway\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 100px\\\" pSortableColumn=\\\"amount\\\">\\r\\n                                            {{'Amount' | localize}}\\r\\n                                            <p-sortIcon field=\\\"amount\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 100px\\\" pSortableColumn=\\\"status\\\">\\r\\n                                            {{'Status' | localize}}\\r\\n                                            <p-sortIcon field=\\\"status\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"paymentPeriodType\\\">\\r\\n                                            {{'Period' | localize}}\\r\\n                                            <p-sortIcon field=\\\"paymentPeriodType\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 100px\\\">{{'DayCount' | localize}}</th>\\r\\n                                        <th style=\\\"width: 250px;\\\">{{'PaymentId' | localize}}</th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"invoiceNo\\\">\\r\\n                                            {{'InvoiceNo' | localize}}\\r\\n                                            <p-sortIcon field=\\\"invoiceNo\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                                <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                    <tr>\\r\\n                                        <td style=\\\"width: 130px\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"createOrShowInvoice(record.id, record.invoiceNo)\\\">{{'ShowInvoice' | localize}}</button>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'ProcessTime' | localize}}</span>\\r\\n                                            <span *ngIf=\\\"record.creationTime\\\">{{record.creationTime | momentFormat:'L'}}</span>\\r\\n                                            <span *ngIf=\\\"!record.creationTime\\\">-</span>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'Edition' | localize}}</span>\\r\\n                                            {{record.editionDisplayName}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'Gateway' | localize}}</span>\\r\\n                                            {{'SubscriptionPaymentGatewayType_' + record.gateway | localize}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 100px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'Amount' | localize}}</span>\\r\\n                                            {{appSession.application.currencySign}} {{record.amount | number : '1.2-2'}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 100px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'Status' | localize}}</span>\\r\\n                                            {{'SubscriptionPaymentStatus_' + record.status | localize}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'Period' | localize}}</span>\\r\\n                                            {{'PaymentPeriodType_' + record.paymentPeriodType | localize}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 100px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'DayCount' | localize}}</span>\\r\\n                                            {{record.dayCount}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 250px;\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'PaymentId' | localize}}</span>\\r\\n                                            {{record.paymentId}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width: 150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">{{'InvoiceNo' | localize}}</span>\\r\\n                                            {{record.invoiceNo}}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                            </p-table>\\r\\n                            <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                                {{'NoData' | localize}}\\r\\n                            </div>\\r\\n                            <div class=\\\"primeng-paging-container\\\">\\r\\n                                <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                             #paginator\\r\\n                                             (onPageChange)=\\\"getPaymentHistory($event)\\\"\\r\\n                                             [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                             [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                </p-paginator>\\r\\n                                <span class=\\\"total-records-count\\\">\\r\\n                                    {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                </tabset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport {\r\n    ApplicationInfoDto,\r\n    InvoiceServiceProxy,\r\n    PaymentServiceProxy,\r\n    SessionServiceProxy,\r\n    SubscriptionServiceProxy,\r\n    TenantLoginInfoDto,\r\n    UserLoginInfoDto,\r\n    CreateInvoiceDto,\r\n    EditionPaymentType,\r\n    SubscriptionStartType,\r\n    SubscriptionPaymentType\r\n} from '@shared/service-proxies/service-proxies';\r\n\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './subscription-management.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class SubscriptionManagementComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    subscriptionStartType: typeof SubscriptionStartType = SubscriptionStartType;\r\n    subscriptionPaymentType: typeof SubscriptionPaymentType = SubscriptionPaymentType;\r\n\r\n    loading: boolean;\r\n    user: UserLoginInfoDto = new UserLoginInfoDto();\r\n    tenant: TenantLoginInfoDto = new TenantLoginInfoDto();\r\n    application: ApplicationInfoDto = new ApplicationInfoDto();\r\n    editionPaymentType: typeof EditionPaymentType = EditionPaymentType;\r\n\r\n    filterText = '';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _sessionService: SessionServiceProxy,\r\n        private _paymentServiceProxy: PaymentServiceProxy,\r\n        private _invoiceServiceProxy: InvoiceServiceProxy,\r\n        private _subscriptionServiceProxy: SubscriptionServiceProxy,\r\n        private _activatedRoute: ActivatedRoute\r\n    ) {\r\n        super(injector);\r\n        this.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getSettings();\r\n    }\r\n\r\n    createOrShowInvoice(paymentId: number, invoiceNo: string): void {\r\n        if (invoiceNo) {\r\n            window.open('/app/admin/invoice/' + paymentId, '_blank');\r\n        } else {\r\n            this._invoiceServiceProxy.createInvoice(new CreateInvoiceDto({ subscriptionPaymentId: paymentId })).subscribe(() => {\r\n                this.getPaymentHistory();\r\n                window.open('/app/admin/invoice/' + paymentId, '_blank');\r\n            });\r\n        }\r\n    }\r\n\r\n    getSettings(): void {\r\n        this.loading = true;\r\n        this.appSession.init().then(() => {\r\n            this.loading = false;\r\n            this.user = this.appSession.user;\r\n            this.tenant = this.appSession.tenant;\r\n            this.application = this.appSession.application;\r\n        });\r\n    }\r\n\r\n    getPaymentHistory(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._paymentServiceProxy.getPaymentHistory(\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event)\r\n        ).pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator())).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    disableRecurringPayments() {\r\n        this._subscriptionServiceProxy.disableRecurringPayments().subscribe(result => {\r\n            this.tenant.subscriptionPaymentType = this.subscriptionPaymentType.RecurringManual;\r\n        });\r\n    }\r\n\r\n    enableRecurringPayments() {\r\n        this._subscriptionServiceProxy.enableRecurringPayments().subscribe(result => {\r\n            this.tenant.subscriptionPaymentType = this.subscriptionPaymentType.RecurringAutomatic;\r\n        });\r\n    }\r\n\r\n    hasRecurringSubscription(): boolean {\r\n        return this.tenant.subscriptionPaymentType !== this.subscriptionPaymentType.Manual;\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #drivingLessonTopicForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"drivingLessonTopic.id\\\">{{l(\\\"EditDrivingLessonTopic\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!drivingLessonTopic.id\\\">{{l(\\\"CreateNewDrivingLessonTopic\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"DrivingLessonTopic_Topic\\\">{{l(\\\"Topic\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"DrivingLessonTopic_Topic\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"drivingLessonTopic.topic\\\" name=\\\"Topic\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"DrivingLessonTopic_Description\\\">{{l(\\\"Description\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"DrivingLessonTopic_Description\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"drivingLessonTopic.description\\\" name=\\\"Description\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!drivingLessonTopicForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { DrivingLessonTopicsServiceProxy, CreateOrEditDrivingLessonTopicDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n    selector: 'createOrEditDrivingLessonTopicModal',\r\n    templateUrl: './create-or-edit-drivingLessonTopic-modal.component.html'\r\n})\r\nexport class CreateOrEditDrivingLessonTopicModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    drivingLessonTopic: CreateOrEditDrivingLessonTopicDto = new CreateOrEditDrivingLessonTopicDto();\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _drivingLessonTopicsServiceProxy: DrivingLessonTopicsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(drivingLessonTopicId?: number): void {\r\n\r\n        if (!drivingLessonTopicId) {\r\n            this.drivingLessonTopic = new CreateOrEditDrivingLessonTopicDto();\r\n            this.drivingLessonTopic.id = drivingLessonTopicId;\r\n\r\n            this.active = true;\r\n            this.modal.show();\r\n        } else {\r\n            this._drivingLessonTopicsServiceProxy.getDrivingLessonTopicForEdit(drivingLessonTopicId).subscribe(result => {\r\n                this.drivingLessonTopic = result.drivingLessonTopic;\r\n\r\n\r\n                this.active = true;\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n\t\t\t\r\n            this._drivingLessonTopicsServiceProxy.createOrEdit(this.drivingLessonTopic)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    close(): void {\r\n\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"DrivingLessonTopics\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"DrivingLessonTopicsHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\t\\t\\t\\t<button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.DrivingLessonTopics.Create')\\\" (click)=\\\"createDrivingLessonTopic()\\\" \\r\\n\\t\\t\\tclass=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewDrivingLessonTopic\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getDrivingLessonTopics()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row m--margin-bottom-10\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"m-separator m-separator--dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"TopicFilter\\\">{{l(\\\"Topic\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"TopicFilter\\\" name=\\\"topicFilter\\\" [(ngModel)]=\\\"topicFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getDrivingLessonTopics($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.DrivingLessonTopics.Edit', 'Pages.Administration.DrivingLessonTopics.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"drivingLessonTopic.topic\\\">\\r\\n                                        {{l('Topic')}}\\r\\n                                        <p-sortIcon field=\\\"drivingLessonTopic.topic\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"drivingLessonTopic.description\\\">\\r\\n                                        {{l('Description')}}\\r\\n                                        <p-sortIcon field=\\\"drivingLessonTopic.description\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.DrivingLessonTopics.Edit', 'Pages.Administration.DrivingLessonTopics.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewDrivingLessonTopicModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.DrivingLessonTopics.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditDrivingLessonTopicModal.show(record.drivingLessonTopic.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.DrivingLessonTopics.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteDrivingLessonTopic(record.drivingLessonTopic)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record.drivingLessonTopic)\\\">{{l('History')}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Topic')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.drivingLessonTopic.topic}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Description')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.drivingLessonTopic.description}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getDrivingLessonTopics($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditDrivingLessonTopicModal #createOrEditDrivingLessonTopicModal (modalSave)=\\\"getDrivingLessonTopics()\\\"></createOrEditDrivingLessonTopicModal>\\r\\n    <viewDrivingLessonTopicModal #viewDrivingLessonTopicModal></viewDrivingLessonTopicModal>\\r\\n     <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n</div>\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Http } from '@angular/http';\r\nimport { DrivingLessonTopicsServiceProxy, DrivingLessonTopicDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditDrivingLessonTopicModalComponent } from './create-or-edit-drivingLessonTopic-modal.component';\r\nimport { ViewDrivingLessonTopicModalComponent } from './view-drivingLessonTopic-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './drivingLessonTopics.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class DrivingLessonTopicsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditDrivingLessonTopicModal') createOrEditDrivingLessonTopicModal: CreateOrEditDrivingLessonTopicModalComponent;\r\n    @ViewChild('viewDrivingLessonTopicModalComponent') viewDrivingLessonTopicModal: ViewDrivingLessonTopicModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    topicFilter = '';\r\n\r\n\r\n    _entityTypeFullName = 'Drima.Templates.DrivingLessonTopic';\r\n    entityHistoryEnabled = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _drivingLessonTopicsServiceProxy: DrivingLessonTopicsServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getDrivingLessonTopics(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._drivingLessonTopicsServiceProxy.getAll(\r\n            this.filterText,\r\n            this.topicFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createDrivingLessonTopic(): void {\r\n        this.createOrEditDrivingLessonTopicModal.show();\r\n    }\r\n\r\n    showHistory(drivingLessonTopic: DrivingLessonTopicDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: drivingLessonTopic.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: ''\r\n        });\r\n    }\r\n\r\n    deleteDrivingLessonTopic(drivingLessonTopic: DrivingLessonTopicDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._drivingLessonTopicsServiceProxy.delete(drivingLessonTopic.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._drivingLessonTopicsServiceProxy.getDrivingLessonTopicsToExcel(\r\n        this.filterText,\r\n            this.topicFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Topic\\\")}} :</h6>\\r\\n                        {{item.drivingLessonTopic.topic}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Description\\\")}} :</h6>\\r\\n                        {{item.drivingLessonTopic.description}}\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetDrivingLessonTopicForViewDto, DrivingLessonTopicDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewDrivingLessonTopicModal',\r\n    templateUrl: './view-drivingLessonTopic-modal.component.html'\r\n})\r\nexport class ViewDrivingLessonTopicModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetDrivingLessonTopicForViewDto;\r\n\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetDrivingLessonTopicForViewDto();\r\n        this.item.drivingLessonTopic = new DrivingLessonTopicDto();\r\n    }\r\n\r\n    show(item: GetDrivingLessonTopicForViewDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #licenseClassForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"licenseClass.id\\\">{{l(\\\"EditLicenseClass\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!licenseClass.id\\\">{{l(\\\"CreateNewLicenseClass\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"LicenseClass_Class\\\">{{l(\\\"Class\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"LicenseClass_Class\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"licenseClass.class\\\" name=\\\"Class\\\"   minlength=\\\"1\\\"  maxlength=\\\"5\\\"  required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"LicenseClass_Description\\\">{{l(\\\"Description\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"LicenseClass_Description\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"licenseClass.description\\\" name=\\\"Description\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!licenseClassForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LicenseClassesServiceProxy, CreateOrEditLicenseClassDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n    selector: 'createOrEditLicenseClassModal',\r\n    templateUrl: './create-or-edit-licenseClass-modal.component.html'\r\n})\r\nexport class CreateOrEditLicenseClassModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    licenseClass: CreateOrEditLicenseClassDto = new CreateOrEditLicenseClassDto();\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _licenseClassesServiceProxy: LicenseClassesServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(licenseClassId?: number): void {\r\n\r\n        if (!licenseClassId) {\r\n            this.licenseClass = new CreateOrEditLicenseClassDto();\r\n            this.licenseClass.id = licenseClassId;\r\n\r\n            this.active = true;\r\n            this.modal.show();\r\n        } else {\r\n            this._licenseClassesServiceProxy.getLicenseClassForEdit(licenseClassId).subscribe(result => {\r\n                this.licenseClass = result.licenseClass;\r\n\r\n\r\n                this.active = true;\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n\t\t\t\r\n            this._licenseClassesServiceProxy.createOrEdit(this.licenseClass)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    close(): void {\r\n\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"LicenseClasses\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"LicenseClassesHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\t\\t\\t\\t<button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.LicenseClasses.Create')\\\" (click)=\\\"createLicenseClass()\\\" \\r\\n\\t\\t\\tclass=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewLicenseClass\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getLicenseClasses()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row m--margin-bottom-10\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"m-separator m-separator--dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ClassFilter\\\">{{l(\\\"Class\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ClassFilter\\\" name=\\\"classFilter\\\" [(ngModel)]=\\\"classFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"DescriptionFilter\\\">{{l(\\\"Description\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DescriptionFilter\\\" name=\\\"descriptionFilter\\\" [(ngModel)]=\\\"descriptionFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getLicenseClasses($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.LicenseClasses.Edit', 'Pages.Administration.LicenseClasses.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"licenseClass.class\\\">\\r\\n                                        {{l('Class')}}\\r\\n                                        <p-sortIcon field=\\\"licenseClass.class\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"licenseClass.description\\\">\\r\\n                                        {{l('Description')}}\\r\\n                                        <p-sortIcon field=\\\"licenseClass.description\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.LicenseClasses.Edit', 'Pages.Administration.LicenseClasses.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewLicenseClassModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.LicenseClasses.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditLicenseClassModal.show(record.licenseClass.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.LicenseClasses.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteLicenseClass(record.licenseClass)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record.licenseClass)\\\">{{l('History')}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Class')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.licenseClass.class}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Description')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.licenseClass.description}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getLicenseClasses($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditLicenseClassModal #createOrEditLicenseClassModal (modalSave)=\\\"getLicenseClasses()\\\"></createOrEditLicenseClassModal>\\r\\n    <viewLicenseClassModal #viewLicenseClassModal></viewLicenseClassModal>\\r\\n     <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n</div>\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Http } from '@angular/http';\r\nimport { LicenseClassesServiceProxy, LicenseClassDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditLicenseClassModalComponent } from './create-or-edit-licenseClass-modal.component';\r\nimport { ViewLicenseClassModalComponent } from './view-licenseClass-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './licenseClasses.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class LicenseClassesComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditLicenseClassModal') createOrEditLicenseClassModal: CreateOrEditLicenseClassModalComponent;\r\n    @ViewChild('viewLicenseClassModalComponent') viewLicenseClassModal: ViewLicenseClassModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    classFilter = '';\r\n    descriptionFilter = '';\r\n\r\n\r\n    _entityTypeFullName = 'Drima.Templates.LicenseClass';\r\n    entityHistoryEnabled = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _licenseClassesServiceProxy: LicenseClassesServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getLicenseClasses(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._licenseClassesServiceProxy.getAll(\r\n            this.filterText,\r\n            this.classFilter,\r\n            this.descriptionFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createLicenseClass(): void {\r\n        this.createOrEditLicenseClassModal.show();\r\n    }\r\n\r\n    showHistory(licenseClass: LicenseClassDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: licenseClass.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: ''\r\n        });\r\n    }\r\n\r\n    deleteLicenseClass(licenseClass: LicenseClassDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._licenseClassesServiceProxy.delete(licenseClass.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._licenseClassesServiceProxy.getLicenseClassesToExcel(\r\n        this.filterText,\r\n            this.classFilter,\r\n            this.descriptionFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Class\\\")}} :</h6>\\r\\n                        {{item.licenseClass.class}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Description\\\")}} :</h6>\\r\\n                        {{item.licenseClass.description}}\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetLicenseClassForViewDto, LicenseClassDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewLicenseClassModal',\r\n    templateUrl: './view-licenseClass-modal.component.html'\r\n})\r\nexport class ViewLicenseClassModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetLicenseClassForViewDto;\r\n\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetLicenseClassForViewDto();\r\n        this.item.licenseClass = new LicenseClassDto();\r\n    }\r\n\r\n    show(item: GetLicenseClassForViewDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #theoryLessonTopicForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"theoryLessonTopic.id\\\">{{l(\\\"EditTheoryLessonTopic\\\")}}</span>\\r\\n                        <span *ngIf=\\\"!theoryLessonTopic.id\\\">{{l(\\\"CreateNewTheoryLessonTopic\\\")}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                 \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"TheoryLessonTopic_Topic\\\">{{l(\\\"Topic\\\")}} *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"TheoryLessonTopic_Topic\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"theoryLessonTopic.topic\\\" name=\\\"Topic\\\"     required/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"TheoryLessonTopic_Description\\\">{{l(\\\"Description\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"TheoryLessonTopic_Description\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"theoryLessonTopic.description\\\" name=\\\"Description\\\"    />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!theoryLessonTopicForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { TheoryLessonTopicsServiceProxy, CreateOrEditTheoryLessonTopicDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n    selector: 'createOrEditTheoryLessonTopicModal',\r\n    templateUrl: './create-or-edit-theoryLessonTopic-modal.component.html'\r\n})\r\nexport class CreateOrEditTheoryLessonTopicModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    theoryLessonTopic: CreateOrEditTheoryLessonTopicDto = new CreateOrEditTheoryLessonTopicDto();\r\n\r\n\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _theoryLessonTopicsServiceProxy: TheoryLessonTopicsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(theoryLessonTopicId?: number): void {\r\n\r\n        if (!theoryLessonTopicId) {\r\n            this.theoryLessonTopic = new CreateOrEditTheoryLessonTopicDto();\r\n            this.theoryLessonTopic.id = theoryLessonTopicId;\r\n\r\n            this.active = true;\r\n            this.modal.show();\r\n        } else {\r\n            this._theoryLessonTopicsServiceProxy.getTheoryLessonTopicForEdit(theoryLessonTopicId).subscribe(result => {\r\n                this.theoryLessonTopic = result.theoryLessonTopic;\r\n\r\n\r\n                this.active = true;\r\n                this.modal.show();\r\n            });\r\n        }\r\n    }\r\n\r\n    save(): void {\r\n            this.saving = true;\r\n\r\n\t\t\t\r\n            this._theoryLessonTopicsServiceProxy.createOrEdit(this.theoryLessonTopic)\r\n             .pipe(finalize(() => { this.saving = false;}))\r\n             .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n             });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    close(): void {\r\n\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{l(\\\"TheoryLessonTopics\\\")}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{l(\\\"TheoryLessonTopicsHeaderInfo\\\")}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\t\\t\\t\\t<button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                <button *ngIf=\\\"isGranted('Pages.Administration.TheoryLessonTopics.Create')\\\" (click)=\\\"createTheoryLessonTopic()\\\" \\r\\n\\t\\t\\tclass=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewTheoryLessonTopic\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getTheoryLessonTopics()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"row m--margin-bottom-10\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t         <div class=\\\"m-separator m-separator--dashed\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t     </div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"TopicFilter\\\">{{l(\\\"Topic\\\")}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"TopicFilter\\\" name=\\\"topicFilter\\\" [(ngModel)]=\\\"topicFilter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                     (onLazyLoad)=\\\"getTheoryLessonTopics($event)\\\"\\r\\n                                     [value]=\\\"primengTableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     [scrollable]=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                     [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.TheoryLessonTopics.Edit', 'Pages.Administration.TheoryLessonTopics.Delete')\\\">{{l('Actions')}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"theoryLessonTopic.topic\\\">\\r\\n                                        {{l('Topic')}}\\r\\n                                        <p-sortIcon field=\\\"theoryLessonTopic.topic\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"theoryLessonTopic.description\\\">\\r\\n                                        {{l('Description')}}\\r\\n                                        <p-sortIcon field=\\\"theoryLessonTopic.description\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>                           \\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.TheoryLessonTopics.Edit', 'Pages.Administration.TheoryLessonTopics.Delete')\\\">\\r\\n                                       <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\r\\n                                            </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\"  *dropdownMenu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"viewTheoryLessonTopicModal.show(record)\\\">{{l('View')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.TheoryLessonTopics.Edit')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"createOrEditTheoryLessonTopicModal.show(record.theoryLessonTopic.id)\\\">{{l('Edit')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"javascript:;\\\" *ngIf=\\\"permission.isGranted('Pages.Administration.TheoryLessonTopics.Delete')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteTheoryLessonTopic(record.theoryLessonTopic)\\\">{{l('Delete')}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record.theoryLessonTopic)\\\">{{l('History')}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Topic')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.theoryLessonTopic.topic}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n                                    <td style=\\\"width:150px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ui-column-title\\\"> {{l('Description')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{record.theoryLessonTopic.description}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{l('NoData')}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getTheoryLessonTopics($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditTheoryLessonTopicModal #createOrEditTheoryLessonTopicModal (modalSave)=\\\"getTheoryLessonTopics()\\\"></createOrEditTheoryLessonTopicModal>\\r\\n    <viewTheoryLessonTopicModal #viewTheoryLessonTopicModal></viewTheoryLessonTopicModal>\\r\\n     <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n</div>\"","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Http } from '@angular/http';\r\nimport { TheoryLessonTopicsServiceProxy, TheoryLessonTopicDto  } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditTheoryLessonTopicModalComponent } from './create-or-edit-theoryLessonTopic-modal.component';\r\nimport { ViewTheoryLessonTopicModalComponent } from './view-theoryLessonTopic-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    templateUrl: './theoryLessonTopics.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class TheoryLessonTopicsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditTheoryLessonTopicModal') createOrEditTheoryLessonTopicModal: CreateOrEditTheoryLessonTopicModalComponent;\r\n    @ViewChild('viewTheoryLessonTopicModalComponent') viewTheoryLessonTopicModal: ViewTheoryLessonTopicModalComponent;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    topicFilter = '';\r\n\r\n\r\n    _entityTypeFullName = 'Drima.Templates.TheoryLessonTopic';\r\n    entityHistoryEnabled = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _theoryLessonTopicsServiceProxy: TheoryLessonTopicsServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.entityHistoryEnabled = this.setIsEntityHistoryEnabled();\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): boolean {\r\n        let customSettings = (abp as any).custom;\r\n        return customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getTheoryLessonTopics(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._theoryLessonTopicsServiceProxy.getAll(\r\n            this.filterText,\r\n            this.topicFilter,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createTheoryLessonTopic(): void {\r\n        this.createOrEditTheoryLessonTopicModal.show();\r\n    }\r\n\r\n    showHistory(theoryLessonTopic: TheoryLessonTopicDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: theoryLessonTopic.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: ''\r\n        });\r\n    }\r\n\r\n    deleteTheoryLessonTopic(theoryLessonTopic: TheoryLessonTopicDto): void {\r\n        this.message.confirm(\r\n            '',\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._theoryLessonTopicsServiceProxy.delete(theoryLessonTopic.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._theoryLessonTopicsServiceProxy.getTheoryLessonTopicsToExcel(\r\n        this.filterText,\r\n            this.topicFilter,\r\n        )\r\n        .subscribe(result => {\r\n            this._fileDownloadService.downloadTempFile(result);\r\n         });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>{{l(\\\"\\\")}}</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Topic\\\")}} :</h6>\\r\\n                        {{item.theoryLessonTopic.topic}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 mb-3\\\">\\r\\n                        <h6>{{l(\\\"Description\\\")}} :</h6>\\r\\n                        {{item.theoryLessonTopic.description}}\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { GetTheoryLessonTopicForViewDto, TheoryLessonTopicDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'viewTheoryLessonTopicModal',\r\n    templateUrl: './view-theoryLessonTopic-modal.component.html'\r\n})\r\nexport class ViewTheoryLessonTopicModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    item: GetTheoryLessonTopicForViewDto;\r\n\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.item = new GetTheoryLessonTopicForViewDto();\r\n        this.item.theoryLessonTopic = new TheoryLessonTopicDto();\r\n    }\r\n\r\n    show(item: GetTheoryLessonTopicForViewDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form #tenantCreateForm=\\\"ngForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" *ngIf=\\\"active\\\" (submit)=\\\"save()\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">\\r\\n                        <span>{{\\\"CreateNewTenant\\\" | localize}}</span>\\r\\n                    </h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"TenancyName\\\">{{\\\"TenancyName\\\" | localize}} *</label>\\r\\n                        <input id=\\\"TenancyName\\\" #tenancyNameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" [ngClass]=\\\"{'edited':tenant.tenancyName}\\\" name=\\\"tenancyName\\\" [(ngModel)]=\\\"tenant.tenancyName\\\" #tenancyName=\\\"ngModel\\\" required maxlength=\\\"64\\\" pattern=\\\"^[a-zA-Z][a-zA-Z0-9_-]{1,}$\\\">\\r\\n                        <validation-messages [formCtrl]=\\\"tenancyNameInput\\\"></validation-messages>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"!tenancyName.valid && !tenancyName.pristine\\\">{{\\\"TenantName_Regex_Description\\\" | localize}}</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"Name\\\">{{\\\"TenantName\\\" | localize}} *</label>\\r\\n                        <input id=\\\"Name\\\" #nameInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':tenant.name}\\\" [(ngModel)]=\\\"tenant.name\\\" required maxlength=\\\"128\\\">\\r\\n                        <validation-messages [formCtrl]=\\\"nameInput\\\"></validation-messages>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"m-checkbox-list\\\">\\r\\n                        <label class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_UseHostDb\\\" type=\\\"checkbox\\\" name=\\\"UseHostDb\\\" [(ngModel)]=\\\"useHostDb\\\">\\r\\n                            {{\\\"UseHostDatabase\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!useHostDb\\\">\\r\\n                        <label for=\\\"DatabaseConnectionString\\\">{{\\\"DatabaseConnectionString\\\" | localize}} *</label>\\r\\n                        <input id=\\\"DatabaseConnectionString\\\" #connectionStringInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"ConnectionString\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.connectionString\\\" [ngClass]=\\\"{'edited':tenant.connectionString}\\\" required maxlength=\\\"1024\\\">\\r\\n                        <validation-messages [formCtrl]=\\\"connectionStringInput\\\"></validation-messages>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"AdminEmailAddress\\\">{{\\\"AdminEmailAddress\\\" | localize}} *</label>\\r\\n                        <input id=\\\"AdminEmailAddress\\\" #adminEmailAddressInput=\\\"ngModel\\\" type=\\\"email\\\" name=\\\"AdminEmailAddress\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.adminEmailAddress\\\" [ngClass]=\\\"{'edited':tenant.adminEmailAddress}\\\" required pattern=\\\"^\\\\w+([-+.']\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$\\\" maxlength=\\\"256\\\">\\r\\n                        <validation-messages [formCtrl]=\\\"adminEmailAddressInput\\\"></validation-messages>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"m-checkbox-list\\\">\\r\\n                        <label class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_SetRandomPassword\\\" type=\\\"checkbox\\\" name=\\\"SetRandomPassword\\\" [(ngModel)]=\\\"setRandomPassword\\\">\\r\\n                            {{\\\"SetRandomPassword\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                        <label for=\\\"AdminPassword\\\">{{\\\"AdminPassword\\\" | localize}}</label>\\r\\n                        <input id=\\\"AdminPassword\\\" type=\\\"password\\\" name=\\\"adminPassword\\\" class=\\\"form-control\\\" id=\\\"adminPassword\\\"\\r\\n                               [(ngModel)]=\\\"tenant.adminPassword\\\" [ngClass]=\\\"{'edited':tenant.adminPassword}\\\" [required]=\\\"!setRandomPassword\\\"\\r\\n                               #adminPassword=\\\"ngModel\\\" validateEqual=\\\"adminPasswordRepeat\\\" reverse=\\\"true\\\" maxlength=\\\"32\\\" [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                               [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"tenantCreateForm.form.valid || tenantCreateForm.form.pristine\\\">\\r\\n                        <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"tenantCreateForm.controls['adminPassword'] && tenantCreateForm.controls['adminPassword'].errors\\\">\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireDigit\\\">{{\\\"PasswordComplexity_RequireDigit_Hint\\\" | localize}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireLowercase\\\">{{\\\"PasswordComplexity_RequireLowercase_Hint\\\" | localize}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireUppercase\\\">{{\\\"PasswordComplexity_RequireUppercase_Hint\\\" | localize}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireNonAlphanumeric\\\">{{\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\" | localize}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requiredLength\\\">{{\\\"PasswordComplexity_RequiredLength_Hint\\\" | localize:passwordComplexitySetting.requiredLength}}</li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                        <label for=\\\"AdminPasswordRepeat\\\">{{\\\"AdminPasswordRepeat\\\" | localize}}</label>\\r\\n                        <input id=\\\"AdminPasswordRepeat\\\" type=\\\"password\\\" name=\\\"adminPasswordRepeat\\\" class=\\\"form-control\\\"\\r\\n                               [(ngModel)]=\\\"tenant.adminPasswordRepeat\\\" [ngClass]=\\\"{'edited':tenant.adminPasswordRepeat}\\\" [required]=\\\"!setRandomPassword\\\"\\r\\n                               #adminPasswordRepeat=\\\"ngModel\\\" [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                               [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\r\\n                               validateEqual=\\\"adminPassword\\\"\\r\\n                               maxlength=\\\"32\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"tenantCreateForm.form.valid || tenantCreateForm.form.pristine\\\">\\r\\n                        <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"tenantCreateForm.controls['adminPasswordRepeat'] && tenantCreateForm.controls['adminPasswordRepeat'].errors\\\">\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireDigit\\\">{{\\\"PasswordComplexity_RequireDigit_Hint\\\" | localize}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireLowercase\\\">{{\\\"PasswordComplexity_RequireLowercase_Hint\\\" | localize}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireUppercase\\\">{{\\\"PasswordComplexity_RequireUppercase_Hint\\\" | localize}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireNonAlphanumeric\\\">{{\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\" | localize}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requiredLength\\\">{{\\\"PasswordComplexity_RequiredLength_Hint\\\" | localize:passwordComplexitySetting.requiredLength}}</li>\\r\\n                            <li [hidden]=\\\"tenantCreateForm.controls['adminPasswordRepeat'].valid\\\">{{\\\"PasswordsDontMatch\\\" | localize}}</li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"edition\\\">{{\\\"Edition\\\" | localize}}</label>\\r\\n                        <select id=\\\"edition\\\" name=\\\"edition\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.editionId\\\" (change)=\\\"onEditionChange($event)\\\">\\r\\n                            <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"m-checkbox-list\\\">\\r\\n                        <label for=\\\"CreateTenant_IsUnlimited\\\" class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsUnlimited\\\" type=\\\"checkbox\\\" name=\\\"IsUnlimited\\\" [(ngModel)]=\\\"isUnlimited\\\" />\\r\\n                            {{\\\"UnlimitedTimeSubscription\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"isUnlimited || !isSubscriptionFieldsVisible\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': !subscriptionEndDateIsValid()}\\\">\\r\\n                        <label for=\\\"SubscriptionEndDate\\\">{{\\\"SubscriptionEndDate\\\" | localize}}</label>\\r\\n                        <input id=\\\"SubscriptionEndDate\\\" type=\\\"text\\\" #SubscriptionEndDateUtc name=\\\"SubscriptionEndDateUtc\\\" class=\\\"form-control\\\" bsDatepicker [(ngModel)]=\\\"tenant.subscriptionEndDateUtc\\\" autocomplete=\\\"off\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"m-checkbox-list\\\">\\r\\n                        <label for=\\\"CreateTenant_IsInTrialPeriod\\\" class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsInTrialPeriod\\\" type=\\\"checkbox\\\" name=\\\"IsInTrialPeriod\\\" [disabled]=\\\"isSelectedEditionFree\\\" [(ngModel)]=\\\"tenant.isInTrialPeriod\\\">\\r\\n                            {{\\\"IsInTrialPeriod\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"m-checkbox-list\\\">\\r\\n                        <label for=\\\"CreateTenant_ShouldChangePasswordOnNextLogin\\\" class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_ShouldChangePasswordOnNextLogin\\\" type=\\\"checkbox\\\" name=\\\"ShouldChangePasswordOnNextLogin\\\" [(ngModel)]=\\\"tenant.shouldChangePasswordOnNextLogin\\\">\\r\\n                            {{\\\"ShouldChangePasswordOnNextLogin\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                        <label for=\\\"CreateTenant_SendActivationEmail\\\" class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_SendActivationEmail\\\" type=\\\"checkbox\\\" name=\\\"SendActivationEmail\\\" [(ngModel)]=\\\"tenant.sendActivationEmail\\\">\\r\\n                            {{\\\"SendActivationEmail\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                        <label for=\\\"CreateTenant_IsActive\\\" class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsActive\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"tenant.isActive\\\">\\r\\n                            {{\\\"Active\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!tenantCreateForm.form.valid || saving || !subscriptionEndDateIsValid()\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport {\r\n    CommonLookupServiceProxy, CreateTenantInput,\r\n    PasswordComplexitySetting, ProfileServiceProxy,\r\n    TenantServiceProxy, SubscribableEditionComboboxItemDto\r\n} from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'createTenantModal',\r\n    templateUrl: './create-tenant-modal.component.html'\r\n})\r\nexport class CreateTenantModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createModal') modal: ModalDirective;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n    setRandomPassword = true;\r\n    useHostDb = true;\r\n    editions: SubscribableEditionComboboxItemDto[] = [];\r\n    tenant: CreateTenantInput;\r\n    passwordComplexitySetting: PasswordComplexitySetting = new PasswordComplexitySetting();\r\n    isUnlimited = false;\r\n    isSubscriptionFieldsVisible = false;\r\n    isSelectedEditionFree = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantService: TenantServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy,\r\n        private _profileService: ProfileServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show() {\r\n        this.active = true;\r\n        this.init();\r\n\r\n        this._profileService.getPasswordComplexitySetting().subscribe(result => {\r\n            this.passwordComplexitySetting = result.setting;\r\n            this.modal.show();\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        document.getElementById('TenancyName').focus();\r\n    }\r\n\r\n    init(): void {\r\n        this.tenant = new CreateTenantInput();\r\n        this.tenant.isActive = true;\r\n        this.tenant.shouldChangePasswordOnNextLogin = true;\r\n        this.tenant.sendActivationEmail = true;\r\n        this.tenant.editionId = 0;\r\n        this.tenant.isInTrialPeriod = false;\r\n\r\n        this._commonLookupService.getEditionsForCombobox(false)\r\n            .subscribe((result) => {\r\n                this.editions = result.items;\r\n\r\n                let notAssignedItem = new SubscribableEditionComboboxItemDto();\r\n                notAssignedItem.value = '';\r\n                notAssignedItem.displayText = this.l('NotAssigned');\r\n\r\n                this.editions.unshift(notAssignedItem);\r\n\r\n                this._commonLookupService.getDefaultEditionName().subscribe((getDefaultEditionResult) => {\r\n                    let defaultEdition = _.filter(this.editions, { 'displayText': getDefaultEditionResult.name });\r\n                    if (defaultEdition && defaultEdition[0]) {\r\n                        this.tenant.editionId = parseInt(defaultEdition[0].value);\r\n                        this.toggleSubscriptionFields();\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    getEditionValue(item): number {\r\n        return parseInt(item.value);\r\n    }\r\n\r\n    selectedEditionIsFree(): boolean {\r\n        let selectedEditions = _.filter(this.editions, { 'value': this.tenant.editionId.toString() })\r\n            .map(u => Object.assign(new SubscribableEditionComboboxItemDto(), u));\r\n\r\n        if (selectedEditions.length !== 1) {\r\n            this.isSelectedEditionFree = true;\r\n        }\r\n\r\n        let selectedEdition = selectedEditions[0];\r\n        this.isSelectedEditionFree = selectedEdition.isFree;\r\n        return this.isSelectedEditionFree;\r\n    }\r\n\r\n    subscriptionEndDateIsValid(): boolean {\r\n        if (this.tenant.editionId <= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isUnlimited) {\r\n            return true;\r\n        }\r\n\r\n        if (!this.tenant.subscriptionEndDateUtc) {\r\n            return false;\r\n        }\r\n\r\n        return this.tenant.subscriptionEndDateUtc !== undefined;\r\n    }\r\n\r\n    save(): void {\r\n        this.saving = true;\r\n\r\n        if (this.setRandomPassword) {\r\n            this.tenant.adminPassword = null;\r\n        }\r\n\r\n        if (this.tenant.editionId === 0) {\r\n            this.tenant.editionId = null;\r\n        }\r\n\r\n        if (this.isUnlimited || this.tenant.editionId <= 0) {\r\n            this.tenant.subscriptionEndDateUtc = null;\r\n        }\r\n\r\n        this._tenantService.createTenant(this.tenant)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    onEditionChange(): void {\r\n        this.tenant.isInTrialPeriod = this.tenant.editionId > 0 && !this.selectedEditionIsFree();\r\n        this.toggleSubscriptionFields();\r\n    }\r\n\r\n    toggleSubscriptionFields() {\r\n        this.isSelectedEditionFree = this.selectedEditionIsFree();\r\n        if (this.tenant.editionId <= 0 || this.isSelectedEditionFree) {\r\n            this.isSubscriptionFieldsVisible = false;\r\n\r\n            if (this.isSelectedEditionFree) {\r\n                this.isUnlimited = true;\r\n            } else {\r\n                this.isUnlimited = false;\r\n            }\r\n        } else {\r\n            this.isSubscriptionFieldsVisible = true;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form #tenantEditForm=\\\"ngForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" (submit)=\\\"save()\\\" *ngIf=\\\"tenant && active\\\">\\r\\n\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\">\\r\\n                        <span>{{\\\"EditTenant\\\" | localize}}: {{tenant.tenancyName}}</span>\\r\\n                    </h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"Name\\\">{{\\\"TenantName\\\" | localize}} *</label>\\r\\n                        <input id=\\\"Name\\\" #nameInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':tenant.name}\\\" [(ngModel)]=\\\"tenant.name\\\" required maxlength=\\\"128\\\">\\r\\n                        <validation-messages [formCtrl]=\\\"nameInput\\\"></validation-messages>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"currentConnectionString\\\">\\r\\n                        <label for=\\\"DatabaseConnectionString\\\">{{\\\"DatabaseConnectionString\\\" | localize}} *</label>\\r\\n                        <input id=\\\"DatabaseConnectionString\\\" #connectionStringInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"ConnectionString\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.connectionString\\\" required maxlength=\\\"1024\\\">\\r\\n                        <validation-messages [formCtrl]=\\\"connectionStringInput\\\"></validation-messages>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"currentConnectionString\\\">\\r\\n                        <span class=\\\"help-block text-warning\\\">{{\\\"TenantDatabaseConnectionStringChangeWarningMessage\\\" | localize}}</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"edition\\\">{{\\\"Edition\\\" | localize}}</label>\\r\\n                        <select id=\\\"edition\\\" name=\\\"edition\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.editionId\\\" (change)=\\\"onEditionChange($event)\\\">\\r\\n                            <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"m-checkbox-list\\\">\\r\\n                        <label class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsUnlimited\\\" type=\\\"checkbox\\\" name=\\\"IsUnlimited\\\" [(ngModel)]=\\\"isUnlimited\\\" (ngModelChange)=\\\"onUnlimitedChange()\\\"/>\\r\\n                            {{\\\"UnlimitedTimeSubscription\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"isUnlimited || !isSubscriptionFieldsVisible\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': !subscriptionEndDateUtcIsValid }\\\">\\r\\n                        <label for=\\\"SubscriptionEndDateUtc\\\">{{\\\"SubscriptionEndDateUtc\\\" | localize}}</label>\\r\\n                        <input id=\\\"SubscriptionEndDateUtc\\\" type=\\\"datetime\\\" #SubscriptionEndDateUtc name=\\\"SubscriptionEndDateUtc\\\" class=\\\"form-control\\\"\\r\\n                               [ngClass]=\\\"{'edited':tenant.subscriptionEndDateUtc}\\\"\\r\\n                               (bsValueChange)=\\\"subscriptionEndDateChange($event)\\\"\\r\\n                               bsDatepicker\\r\\n                               [(ngModel)]=\\\"tenant.subscriptionEndDateUtc\\\"\\r\\n                               [required]=\\\"!isUnlimited\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"m-checkbox-list\\\">\\r\\n                        <label class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsInTrialPeriod\\\" type=\\\"checkbox\\\" name=\\\"IsInTrialPeriod\\\" [disabled]=\\\"selectedEditionIsFree()\\\" [(ngModel)]=\\\"tenant.isInTrialPeriod\\\">\\r\\n                            {{\\\"IsInTrialPeriod\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"m-checkbox-list\\\">\\r\\n                        <label class=\\\"m-checkbox\\\">\\r\\n                            <input id=\\\"EditTenant_IsActive\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"tenant.isActive\\\">\\r\\n                            {{\\\"Active\\\" | localize}}\\r\\n                            <span></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!tenantEditForm.form.valid || saving || !subscriptionEndDateUtcIsValid\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CommonLookupServiceProxy, SubscribableEditionComboboxItemDto, TenantEditDto, TenantServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'editTenantModal',\r\n    templateUrl: './edit-tenant-modal.component.html'\r\n})\r\nexport class EditTenantModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('nameInput') nameInput: ElementRef;\r\n    @ViewChild('editModal') modal: ModalDirective;\r\n    @ViewChild('SubscriptionEndDateUtc') subscriptionEndDateUtc: ElementRef;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n    isUnlimited = false;\r\n    subscriptionEndDateUtcIsValid = false;\r\n\r\n    tenant: TenantEditDto = undefined;\r\n    currentConnectionString: string;\r\n    editions: SubscribableEditionComboboxItemDto[] = [];\r\n    isSubscriptionFieldsVisible = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantService: TenantServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(tenantId: number): void {\r\n        this.active = true;\r\n\r\n        this._commonLookupService.getEditionsForCombobox(false).subscribe(editionsResult => {\r\n            this.editions = editionsResult.items;\r\n            let notSelectedEdition = new SubscribableEditionComboboxItemDto();\r\n            notSelectedEdition.displayText = this.l('NotAssigned');\r\n            notSelectedEdition.value = '';\r\n            this.editions.unshift(notSelectedEdition);\r\n\r\n            this._tenantService.getTenantForEdit(tenantId).subscribe((tenantResult) => {\r\n                this.tenant = tenantResult;\r\n                this.currentConnectionString = tenantResult.connectionString;\r\n                this.tenant.editionId = this.tenant.editionId || 0;\r\n                this.isUnlimited = !this.tenant.subscriptionEndDateUtc;\r\n                this.subscriptionEndDateUtcIsValid = this.isUnlimited || this.tenant.subscriptionEndDateUtc !== undefined;\r\n                this.modal.show();\r\n                this.toggleSubscriptionFields();\r\n            });\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        document.getElementById('Name').focus();\r\n\r\n        if (this.tenant.subscriptionEndDateUtc) {\r\n            (this.subscriptionEndDateUtc.nativeElement as any).value = this.tenant.subscriptionEndDateUtc.format('L');\r\n        }\r\n    }\r\n\r\n    subscriptionEndDateChange(e): void {\r\n        this.subscriptionEndDateUtcIsValid = e && e.date !== false || this.isUnlimited;\r\n    }\r\n\r\n    selectedEditionIsFree(): boolean {\r\n        if (!this.tenant.editionId) {\r\n            return true;\r\n        }\r\n\r\n        let selectedEditions = _.filter(this.editions, { value: this.tenant.editionId + '' });\r\n        if (selectedEditions.length !== 1) {\r\n            return true;\r\n        }\r\n\r\n        let selectedEdition = selectedEditions[0];\r\n        return selectedEdition.isFree;\r\n    }\r\n\r\n    save(): void {\r\n        this.saving = true;\r\n        if (this.tenant.editionId === 0) {\r\n            this.tenant.editionId = null;\r\n        }\r\n\r\n        //take selected date as UTC\r\n        if (this.isUnlimited || !this.tenant.editionId) {\r\n            this.tenant.subscriptionEndDateUtc = null;\r\n        }\r\n\r\n        this._tenantService.updateTenant(this.tenant)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    onEditionChange(): void {\r\n        if (this.selectedEditionIsFree()) {\r\n            this.tenant.isInTrialPeriod = false;\r\n        }\r\n\r\n        this.toggleSubscriptionFields();\r\n    }\r\n\r\n    onUnlimitedChange(): void {\r\n        if (this.isUnlimited) {\r\n            this.tenant.subscriptionEndDateUtc = null;\r\n            this.subscriptionEndDateUtcIsValid = true;\r\n        } else {\r\n            if (!this.tenant.subscriptionEndDateUtc) {\r\n                this.subscriptionEndDateUtcIsValid = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleSubscriptionFields() {\r\n        if (this.tenant.editionId > 0) {\r\n            this.isSubscriptionFieldsVisible = true;\r\n        } else {\r\n            this.isSubscriptionFieldsVisible = false;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #tenantFeaturesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"tenantFeaturesModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form #editTenantFeaturesForm=\\\"ngForm\\\" name=\\\"editTenantFeaturesForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" (submit)=\\\"save()\\\" *ngIf=\\\"active\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>{{\\\"Features\\\" | localize}} - {{tenantName}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <feature-tree #featureTree></feature-tree>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" [buttonBusy]=\\\"resettingFeatures\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-default pull-left\\\" (click)=\\\"resetFeatures()\\\" [tooltipHtml]=\\\"l('ResetFeaturesTooltip')\\\" placement=\\\"top\\\"><span>{{\\\"ResetSpecialFeatures\\\" | localize}}</span></button>\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving || resettingFeatures\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" [disabled]=\\\"resettingFeatures\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { EntityDto, TenantServiceProxy, UpdateTenantFeaturesInput } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { FeatureTreeComponent } from '../shared/feature-tree.component';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'tenantFeaturesModal',\r\n    templateUrl: './tenant-features-modal.component.html'\r\n})\r\nexport class TenantFeaturesModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('tenantFeaturesModal') modal: ModalDirective;\r\n    @ViewChild('featureTree') featureTree: FeatureTreeComponent;\r\n\r\n    active = false;\r\n    saving = false;\r\n\r\n    resettingFeatures = false;\r\n    tenantId: number;\r\n    tenantName: string;\r\n    featureEditData: any = null;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantService: TenantServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(tenantId: number, tenantName: string): void {\r\n        this.tenantId = tenantId;\r\n        this.tenantName = tenantName;\r\n        this.active = true;\r\n        this.loadFeatures();\r\n        this.modal.show();\r\n    }\r\n\r\n    loadFeatures(): void {\r\n        const self = this;\r\n        self._tenantService.getTenantFeaturesForEdit(this.tenantId).subscribe((result) => {\r\n            self.featureTree.editData = result;\r\n        });\r\n    }\r\n\r\n    save(): void {\r\n        if (!this.featureTree.areAllValuesValid()) {\r\n            this.message.warn(this.l('InvalidFeaturesWarning'));\r\n            return;\r\n        }\r\n\r\n\r\n        const input = new UpdateTenantFeaturesInput();\r\n        input.id = this.tenantId;\r\n        input.featureValues = this.featureTree.getGrantedFeatures();\r\n\r\n        this.saving = true;\r\n        this._tenantService.updateTenantFeatures(input)\r\n            .pipe(finalize(() => this.saving = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n            });\r\n    }\r\n\r\n    resetFeatures(): void {\r\n        const input = new EntityDto();\r\n        input.id = this.tenantId;\r\n\r\n        this.resettingFeatures = true;\r\n        this._tenantService.resetTenantSpecificFeatures(input)\r\n            .pipe(finalize(() => this.resettingFeatures = false))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('ResetSuccessfully'));\r\n                this.loadFeatures();\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"Tenants\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"TenantsHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col text-right mt-3 mt-md-0\\\">\\r\\n                <button *ngIf=\\\"'Pages.Tenants.Create' | permission\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createTenant()\\\"><i class=\\\"fa fa-plus\\\"></i>{{\\\"CreateNewTenant\\\" | localize}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                    <form (submit)=\\\"getTenants()\\\" autocomplete=\\\"off\\\">\\r\\n                        <div class=\\\"form-body\\\">\\r\\n\\r\\n                            <div class=\\\"row m--margin-bottom-10\\\">\\r\\n                                <div class=\\\"col-xl-6\\\">\\r\\n                                    <label for=\\\"TenantNameOrTenancyCode\\\">{{'TenantNameOrTenancyCode' | localize}}</label>\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"TenantNameOrTenancyCode\\\" [(ngModel)]=\\\"filters.filterText\\\" name=\\\"filterText\\\" class=\\\"form-control\\\" placeholder=\\\"{{'SearchWithThreeDot' | localize}}\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xl-6\\\">\\r\\n                                    <label for=\\\"EditionDropdown\\\">{{'Edition' | localize}}</label>\\r\\n                                    <edition-combo [(selectedEdition)]=\\\"filters.selectedEditionId\\\"></edition-combo>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row m--margin-bottom-10\\\">\\r\\n                                <div class=\\\"col-xl-6\\\">\\r\\n                                    <div class=\\\"m-checkbox-list\\\">\\r\\n                                        <label class=\\\"m-checkbox\\\">\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                   [(ngModel)]=\\\"filters.subscriptionEndDateRangeActive\\\"\\r\\n                                                   id=\\\"TenantsTable_SubscriptionEndDateRangeActive\\\"\\r\\n                                                   name=\\\"SubscriptionEndDateRangeActive\\\"\\r\\n                                                   value=\\\"true\\\">\\r\\n                                            {{'SubscriptionEndDate' | localize}}\\r\\n                                            <span></span>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                    <input class=\\\"form-control\\\"\\r\\n                                           name=\\\"SubscriptionEndDateRange\\\"\\r\\n                                           [attr.disabled]=\\\"!filters.subscriptionEndDateRangeActive ? 'disabled' : null\\\"\\r\\n                                           #drpSubscriptionEndDateRange=\\\"bsDaterangepicker\\\"\\r\\n                                           bsDaterangepicker\\r\\n                                           dateRangePickerInitialValue\\r\\n                                           readonly=\\\"readonly\\\"\\r\\n                                           [(ngModel)]=\\\"subscriptionDateRange\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xl-6\\\">\\r\\n                                    <div class=\\\"m-checkbox-list\\\">\\r\\n                                        <label class=\\\"m-checkbox\\\">\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                   [(ngModel)]=\\\"filters.creationDateRangeActive\\\"\\r\\n                                                   id=\\\"TenantsTable_CreationDateRangeActive\\\"\\r\\n                                                   name=\\\"CreationDateRangeActive\\\"\\r\\n                                                   value=\\\"true\\\">\\r\\n                                            {{'CreationTime' | localize}}\\r\\n                                            <span></span>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                    <input class=\\\"form-control\\\"\\r\\n                                           name=\\\"CreationDateRange\\\"\\r\\n                                           [attr.disabled]=\\\"!filters.creationDateRangeActive ? 'disabled' : null\\\"\\r\\n                                           #drpCreationDateRange=\\\"bsDaterangepicker\\\"\\r\\n                                           bsDaterangepicker\\r\\n                                           dateRangePickerInitialValue\\r\\n                                           readonly=\\\"readonly\\\"\\r\\n                                           [(ngModel)]=\\\"creationDateRange\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row m--margin-bottom-10\\\">\\r\\n                                <div class=\\\"col-xl-12 text-right\\\">\\r\\n                                    <button name=\\\"RefreshButton\\\" class=\\\"btn btn-metal\\\"><i class=\\\"fa fa-sync\\\"></i> {{'Refresh' | localize}}</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-TurboTable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                 (onLazyLoad)=\\\"getTenants($event)\\\"\\r\\n                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 [paginator]=\\\"false\\\"\\r\\n                                 [lazy]=\\\"true\\\"\\r\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width:130px\\\">{{'Actions' | localize}}</th>\\r\\n                                    <th pSortableColumn=\\\"tenancyName\\\">\\r\\n                                        {{'TenancyCodeName' | localize}}\\r\\n                                        <p-sortIcon field=\\\"tenancyName\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th pSortableColumn=\\\"name\\\">\\r\\n                                        {{'TenantName' | localize}}\\r\\n                                        <p-sortIcon field=\\\"name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th>{{'Edition' | localize}}</th>\\r\\n                                    <th pSortableColumn=\\\"subscriptionEndDateUtc\\\">\\r\\n                                        {{'SubscriptionEndDateUtc' | localize}}\\r\\n                                        <p-sortIcon field=\\\"subscriptionEndDateUtc\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th pSortableColumn=\\\"isActive\\\">\\r\\n                                        {{'Active' | localize}}\\r\\n                                        <p-sortIcon field=\\\"isActive\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th pSortableColumn=\\\"creationTime\\\">\\r\\n                                        {{'CreationTime' | localize}}\\r\\n                                        <p-sortIcon field=\\\"creationTime\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\">\\r\\n                                        <div class=\\\"btn-group dropdown\\\" dropdown>\\r\\n                                            <button dropdownToggle class=\\\"dropdown-toggle btn btn-sm btn-primary\\\">\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{\\\"Actions\\\" | localize}}\\r\\n                                            </button>\\r\\n                                            <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                <li [class.disabled]=\\\"!record.isActive\\\">\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Tenants.Impersonation' | permission\\\" [class.disabled]=\\\"!record.isActive\\\"\\r\\n                                                       (click)=\\\"record.isActive && showUserImpersonateLookUpModal(record)\\\">{{'LoginAsThisTenant' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Tenants.Edit' | permission\\\"\\r\\n                                                       (click)=\\\"editTenantModal.show(record.id)\\\">{{'Edit' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Tenants.ChangeFeatures' | permission\\\"\\r\\n                                                       (click)=\\\"tenantFeaturesModal.show(record.id, record.name)\\\">{{'Features' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Tenants.Delete' | permission\\\"\\r\\n                                                       (click)=\\\"deleteTenant(record)\\\">{{'Delete' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" (click)=\\\"unlockUser(record)\\\">{{'Unlock' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"entityHistoryEnabled\\\"\\r\\n                                                       (click)=\\\"showHistory(record)\\\">{{'History' | localize}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'TenancyCodeName' | localize}}</span>\\r\\n                                        <i *ngIf=\\\"record.connectionString\\\" class=\\\"fa fa-database\\\" title=\\\"{{'HasOwnDatabase' | localize}}\\\"></i>\\r\\n                                        {{record.tenancyName}}\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Name' | localize}}</span>\\r\\n                                        {{record.name}}\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Edition' | localize}}</span>\\r\\n                                        {{record.editionDisplayName}}\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'SubscriptionEndDateUtc' | localize}}</span>\\r\\n                                        {{ record.subscriptionEndDateUtc ? (record.subscriptionEndDateUtc | momentFormat:'L') : '-'}}\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'Active' | localize}}</span>\\r\\n                                        <span *ngIf=\\\"record.isActive\\\" class=\\\"m-badge m-badge--success m-badge--wide\\\">{{'Yes' | localize}}</span>\\r\\n                                        <span *ngIf=\\\"!record.isActive\\\" class=\\\"m-badge m-badge--metal m-badge--wide\\\">{{'No' | localize}}</span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"ui-column-title\\\">{{'CreationTime' | localize}}</span>\\r\\n                                        {{record.creationTime | momentFormat:'L'}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{'NoData' | localize}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getTenants($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-TurboTable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createTenantModal #createTenantModal (modalSave)=\\\"getTenants()\\\"></createTenantModal>\\r\\n    <editTenantModal #editTenantModal (modalSave)=\\\"getTenants()\\\"></editTenantModal>\\r\\n    <tenantFeaturesModal #tenantFeaturesModal></tenantFeaturesModal>\\r\\n    <commonLookupModal #impersonateUserLookupModal (itemSelected)=\\\"impersonateUser($event)\\\"></commonLookupModal>\\r\\n    <entityTypeHistoryModal #entityTypeHistoryModal></entityTypeHistoryModal>\\r\\n</div>\\r\\n\"","import { Component, Injector, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ImpersonationService } from '@app/admin/users/impersonation.service';\r\nimport { CommonLookupModalComponent } from '@app/shared/common/lookup/common-lookup-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CommonLookupServiceProxy, EntityDtoOfInt64, FindUsersInput, NameValueDto, TenantListDto, TenantServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport * as moment from 'moment';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { CreateTenantModalComponent } from './create-tenant-modal.component';\r\nimport { EditTenantModalComponent } from './edit-tenant-modal.component';\r\nimport { TenantFeaturesModalComponent } from './tenant-features-modal.component';\r\nimport { EntityTypeHistoryModalComponent } from '@app/shared/common/entityHistory/entity-type-history-modal.component';\r\nimport * as _ from 'lodash';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './tenants.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class TenantsComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('impersonateUserLookupModal') impersonateUserLookupModal: CommonLookupModalComponent;\r\n    @ViewChild('createTenantModal') createTenantModal: CreateTenantModalComponent;\r\n    @ViewChild('editTenantModal') editTenantModal: EditTenantModalComponent;\r\n    @ViewChild('tenantFeaturesModal') tenantFeaturesModal: TenantFeaturesModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n    @ViewChild('entityTypeHistoryModal') entityTypeHistoryModal: EntityTypeHistoryModalComponent;\r\n\r\n    subscriptionDateRange: Date[] = [moment().startOf('day').toDate(), moment().add(30, 'days').endOf('day').toDate()];\r\n    creationDateRange: Date[] = [moment().startOf('day').toDate(), moment().endOf('day').toDate()];\r\n\r\n    _entityTypeFullName = 'Drima.MultiTenancy.Tenant';\r\n    entityHistoryEnabled = false;\r\n\r\n    filters: {\r\n        filterText: string;\r\n        creationDateRangeActive: boolean;\r\n        subscriptionEndDateRangeActive: boolean;\r\n        selectedEditionId: number;\r\n    } = <any>{};\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantService: TenantServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _commonLookupService: CommonLookupServiceProxy,\r\n        private _impersonationService: ImpersonationService\r\n    ) {\r\n        super(injector);\r\n        this.setFiltersFromRoute();\r\n    }\r\n\r\n    setFiltersFromRoute(): void {\r\n        if (this._activatedRoute.snapshot.queryParams['subscriptionEndDateStart'] != null) {\r\n            this.filters.subscriptionEndDateRangeActive = true;\r\n            this.subscriptionDateRange[0] = moment(this._activatedRoute.snapshot.queryParams['subscriptionEndDateStart']).toDate();\r\n        } else {\r\n            this.subscriptionDateRange[0] = moment().startOf('day').toDate();\r\n        }\r\n\r\n        if (this._activatedRoute.snapshot.queryParams['subscriptionEndDateEnd'] != null) {\r\n            this.filters.subscriptionEndDateRangeActive = true;\r\n            this.subscriptionDateRange[1] = moment(this._activatedRoute.snapshot.queryParams['subscriptionEndDateEnd']).toDate();\r\n        } else {\r\n            this.subscriptionDateRange[1] = moment().add(30, 'days').endOf('day').toDate();\r\n        }\r\n\r\n        if (this._activatedRoute.snapshot.queryParams['creationDateStart'] != null) {\r\n            this.filters.creationDateRangeActive = true;\r\n            this.creationDateRange[0] = moment(this._activatedRoute.snapshot.queryParams['creationDateStart']).toDate();\r\n        } else {\r\n            this.creationDateRange[0] = moment().add(-7, 'days').startOf('day').toDate();\r\n        }\r\n\r\n        if (this._activatedRoute.snapshot.queryParams['creationDateEnd'] != null) {\r\n            this.filters.creationDateRangeActive = true;\r\n            this.creationDateRange[1] = moment(this._activatedRoute.snapshot.queryParams['creationDateEnd']).toDate();\r\n        } else {\r\n            this.creationDateRange[1] = moment().endOf('day').toDate();\r\n        }\r\n\r\n        if (this._activatedRoute.snapshot.queryParams['editionId'] != null) {\r\n            this.filters.selectedEditionId = parseInt(this._activatedRoute.snapshot.queryParams['editionId']);\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.filters.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\r\n\r\n        this.setIsEntityHistoryEnabled();\r\n\r\n        this.impersonateUserLookupModal.configure({\r\n            title: this.l('SelectAUser'),\r\n            dataSource: (skipCount: number, maxResultCount: number, filter: string, tenantId?: number) => {\r\n                let input = new FindUsersInput();\r\n                input.filter = filter;\r\n                input.maxResultCount = maxResultCount;\r\n                input.skipCount = skipCount;\r\n                input.tenantId = tenantId;\r\n                return this._commonLookupService.findUsers(input);\r\n            }\r\n        });\r\n    }\r\n\r\n    private setIsEntityHistoryEnabled(): void {\r\n        let customSettings = (abp as any).custom;\r\n        this.entityHistoryEnabled = customSettings.EntityHistory && customSettings.EntityHistory.isEnabled && _.filter(customSettings.EntityHistory.enabledEntities, entityType => entityType === this._entityTypeFullName).length === 1;\r\n    }\r\n\r\n    getTenants(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._tenantService.getTenants(\r\n            this.filters.filterText,\r\n            this.filters.subscriptionEndDateRangeActive ? moment(this.subscriptionDateRange[0]) : undefined,\r\n            this.filters.subscriptionEndDateRangeActive ? moment(this.subscriptionDateRange[1]).endOf('day') : undefined,\r\n            this.filters.creationDateRangeActive ? moment(this.creationDateRange[0]) : undefined,\r\n            this.filters.creationDateRangeActive ? moment(this.creationDateRange[1]).endOf('day') : undefined,\r\n            this.filters.selectedEditionId,\r\n            this.filters.selectedEditionId !== undefined && (this.filters.selectedEditionId + '') !== '-1',\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event)\r\n        ).pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator())).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    showUserImpersonateLookUpModal(record: any): void {\r\n        this.impersonateUserLookupModal.tenantId = record.id;\r\n        this.impersonateUserLookupModal.show();\r\n    }\r\n\r\n    unlockUser(record: any): void {\r\n        this._tenantService.unlockTenantAdmin(new EntityDtoOfInt64({ id: record.id })).subscribe(() => {\r\n            this.notify.success(this.l('UnlockedTenandAdmin', record.name));\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createTenant(): void {\r\n        this.createTenantModal.show();\r\n    }\r\n\r\n    deleteTenant(tenant: TenantListDto): void {\r\n        this.message.confirm(\r\n            this.l('TenantDeleteWarningMessage', tenant.tenancyName),\r\n            this.l('AreYouSure'),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._tenantService.deleteTenant(tenant.id).subscribe(() => {\r\n                        this.reloadPage();\r\n                        this.notify.success(this.l('SuccessfullyDeleted'));\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    showHistory(tenant: TenantListDto): void {\r\n        this.entityTypeHistoryModal.show({\r\n            entityId: tenant.id.toString(),\r\n            entityTypeFullName: this._entityTypeFullName,\r\n            entityTypeDescription: tenant.tenancyName\r\n        });\r\n    }\r\n\r\n    impersonateUser(item: NameValueDto): void {\r\n        this._impersonationService\r\n            .impersonate(\r\n                parseInt(item.value),\r\n                this.impersonateUserLookupModal.tenantId\r\n            );\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"m-radio-list m--margin-bottom-20\\\">\\r\\n                <label>{{\\\"UiCustomization_Theme\\\" | localize}}</label>\\r\\n                <label class=\\\"m-radio\\\" for=\\\"Theme_Default\\\">\\r\\n                    <input id=\\\"Theme_Default\\\" name=\\\"ThemeColor\\\" [(ngModel)]=\\\"settings.layout.themeColor\\\" value=\\\"default\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.themeColor === 'default'\\\">\\r\\n                    {{\\\"Default\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n                <label class=\\\"m-radio m-radio--solid m-radio--state-info\\\" for=\\\"Theme_Blue\\\">\\r\\n                    <input id=\\\"Theme_Blue\\\" name=\\\"ThemeColor\\\" [(ngModel)]=\\\"settings.layout.themeColor\\\" value=\\\"blue\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.themeColor === 'blue'\\\">\\r\\n                    {{\\\"Blue\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n                <label class=\\\"m-radio m-radio--solid m-radio--state-success\\\" for=\\\"Theme_Green\\\">\\r\\n                    <input id=\\\"Theme_Green\\\" name=\\\"ThemeColor\\\" [(ngModel)]=\\\"settings.layout.themeColor\\\" value=\\\"green\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.themeColor === 'green'\\\">\\r\\n                    {{\\\"Green\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n                <label class=\\\"m-radio m-radio--solid m-radio--state-danger\\\" for=\\\"Theme_Pink\\\">\\r\\n                    <input id=\\\"Theme_Pink\\\" name=\\\"ThemeColor\\\" [(ngModel)]=\\\"settings.layout.themeColor\\\" value=\\\"pink\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.themeColor === 'pink'\\\">\\r\\n                    {{\\\"Pink\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n                <label class=\\\"m-radio m-radio--solid m-radio--state-warning\\\" for=\\\"Theme_Yellow\\\">\\r\\n                    <input id=\\\"Theme_Yellow\\\" name=\\\"ThemeColor\\\" [(ngModel)]=\\\"settings.layout.themeColor\\\" value=\\\"yellow\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.themeColor === 'yellow'\\\">\\r\\n                    {{\\\"Yellow\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"boxed\\\">{{\\\"UiCustomization_Boxed\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"ContentSkin\\\">{{\\\"UiCustomization_ContentSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"ContentSkin\\\" name=\\\"ContentSkin\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"settings.layout.contentSkin\\\">\\r\\n                    <option value=\\\"light2\\\">{{\\\"UiCustomization_LightGrey\\\" | localize}}</option>\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_White\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"HeaderSkin\\\">{{\\\"UiCustomization_HeaderSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"HeaderSkin\\\" name=\\\"HeaderSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.header.headerSkin\\\">\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_Light\\\" | localize}}</option>\\r\\n                    <option value=\\\"dark\\\">{{\\\"UiCustomization_Dark\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Menu' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"MenuSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"AsideSkin\\\">{{\\\"UiCustomization_MenuSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"AsideSkin\\\" name=\\\"AsideSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.menu.asideSkin\\\">\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_Light\\\" | localize}}</option>\\r\\n                    <option value=\\\"dark\\\">{{\\\"UiCustomization_Dark\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"FixedAside\\\" [(ngModel)]=\\\"settings.menu.fixedAside\\\">\\r\\n                    {{\\\"UiCustomization_FixedMenu\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"AllowAsideMinimizing\\\" [(ngModel)]=\\\"settings.menu.allowAsideMinimizing\\\" (ngModelChange)=\\\"allowAsideMinimizingChange($event)\\\">\\r\\n                    {{\\\"UiCustomization_AllowAsideMinimizing\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DefaultMinimizedAside\\\" [(ngModel)]=\\\"settings.menu.defaultMinimizedAside\\\" [(disabled)]=\\\"!settings.menu.allowAsideMinimizing\\\">\\r\\n                    {{\\\"UiCustomization_DefaultMinimizedAside\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"AllowAsideHiding\\\" [(ngModel)]=\\\"settings.menu.allowAsideHiding\\\" [(disabled)]=\\\"settings.menu.allowAsideMinimizing\\\" (ngModelChange)=\\\"allowAsideHidingChange($event)\\\">\\r\\n                    {{\\\"UiCustomization_AllowAsideHiding\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DefaultHiddenAside\\\" [(ngModel)]=\\\"settings.menu.defaultHiddenAside\\\" [(disabled)]=\\\"!settings.menu.allowAsideHiding\\\">\\r\\n                    {{\\\"UiCustomization_DefaultHiddenAside\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Footer' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"FooterSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"FixedFooter\\\" [(ngModel)]=\\\"settings.footer.fixedFooter\\\">\\r\\n                    {{\\\"UiCustomization_FixedFooter\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './default-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'default-theme-ui-settings'\r\n})\r\nexport class DefaultThemeUiSettingsComponent extends AppComponentBase {\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'default';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    allowAsideMinimizingChange(val): void {\r\n        if (val) {\r\n            this.settings.menu.allowAsideHiding = false;\r\n            this.settings.menu.defaultHiddenAside = false;\r\n        } else {\r\n            this.settings.menu.defaultMinimizedAside = false;\r\n        }\r\n    }\r\n\r\n    allowAsideHidingChange(val): void {\r\n        if (!val) {\r\n            this.settings.menu.defaultHiddenAside = false;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"wide\\\">{{\\\"UiCustomization_Wide\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme10-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme10-theme-ui-settings'\r\n})\r\nexport class Theme10ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme10';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Menu' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"MenuSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"FixedAside\\\" [(ngModel)]=\\\"settings.menu.fixedAside\\\">\\r\\n                    {{\\\"UiCustomization_FixedMenu\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme11-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme11-theme-ui-settings'\r\n})\r\nexport class Theme11ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme11';\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"boxed\\\">{{\\\"UiCustomization_Boxed\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"ContentSkin\\\">{{\\\"UiCustomization_ContentSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"ContentSkin\\\" name=\\\"ContentSkin\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"settings.layout.contentSkin\\\">\\r\\n                    <option value=\\\"light2\\\">{{\\\"UiCustomization_LightGrey\\\" | localize}}</option>\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_White\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Menu' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"MenuSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"FixedAside\\\" [(ngModel)]=\\\"settings.menu.fixedAside\\\">\\r\\n                    {{\\\"UiCustomization_FixedMenu\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"AllowAsideMinimizing\\\" [(ngModel)]=\\\"settings.menu.allowAsideMinimizing\\\" (ngModelChange)=\\\"allowAsideMinimizingChange($event)\\\">\\r\\n                    {{\\\"UiCustomization_AllowAsideMinimizing\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DefaultMinimizedAside\\\" [(ngModel)]=\\\"settings.menu.defaultMinimizedAside\\\" [(disabled)]=\\\"!settings.menu.allowAsideMinimizing\\\">\\r\\n                    {{\\\"UiCustomization_DefaultMinimizedAside\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"AllowAsideHiding\\\" [(ngModel)]=\\\"settings.menu.allowAsideHiding\\\" [(disabled)]=\\\"settings.menu.allowAsideMinimizing\\\" (ngModelChange)=\\\"allowAsideHidingChange($event)\\\">\\r\\n                    {{\\\"UiCustomization_AllowAsideHiding\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DefaultHiddenAside\\\" [(ngModel)]=\\\"settings.menu.defaultHiddenAside\\\" [(disabled)]=\\\"!settings.menu.allowAsideHiding\\\">\\r\\n                    {{\\\"UiCustomization_DefaultHiddenAside\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Footer' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"FooterSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"FixedFooter\\\" [(ngModel)]=\\\"settings.footer.fixedFooter\\\">\\r\\n                    {{\\\"UiCustomization_FixedFooter\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme12-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme12-theme-ui-settings'\r\n})\r\nexport class Theme12ThemeUiSettingsComponent extends AppComponentBase {\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme12';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    allowAsideMinimizingChange(val): void {\r\n        if (val) {\r\n            this.settings.menu.allowAsideHiding = false;\r\n            this.settings.menu.defaultHiddenAside = false;\r\n        } else {\r\n            this.settings.menu.defaultMinimizedAside = false;\r\n        }\r\n    }\r\n\r\n    allowAsideHidingChange(val): void {\r\n        if (!val) {\r\n            this.settings.menu.defaultHiddenAside = false;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"wide\\\">{{\\\"UiCustomization_Wide\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme2-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme2-theme-ui-settings'\r\n})\r\nexport class Theme2ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme2';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"wide\\\">{{\\\"UiCustomization_Wide\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme3-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme3-theme-ui-settings'\r\n})\r\nexport class Theme3ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme3';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"boxed\\\">{{\\\"UiCustomization_Boxed\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.layout.fixedBody\\\">\\r\\n                    {{\\\"UiCustomization_LayoutFixedContent\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.layout.mobileFixedBody\\\">\\r\\n                    {{\\\"UiCustomization_LayoutMobileFixedContent\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme4-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme4-theme-ui-settings'\r\n})\r\nexport class Theme4ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme4';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"wide\\\">{{\\\"UiCustomization_Wide\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme5-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme5-theme-ui-settings'\r\n})\r\nexport class Theme5ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme5';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"wide\\\">{{\\\"UiCustomization_Wide\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"ContentSkin\\\">{{\\\"UiCustomization_ContentSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"ContentSkin\\\" name=\\\"ContentSkin\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"settings.layout.contentSkin\\\">\\r\\n                    <option value=\\\"light2\\\">{{\\\"UiCustomization_LightGrey\\\" | localize}}</option>\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_White\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Menu' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"MenuSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"AsideSkin\\\">{{\\\"UiCustomization_MenuSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"AsideSkin\\\" name=\\\"AsideSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.menu.asideSkin\\\">\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_Light\\\" | localize}}</option>\\r\\n                    <option value=\\\"dark\\\">{{\\\"UiCustomization_Dark\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Footer' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"FooterSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"FixedFooter\\\" [(ngModel)]=\\\"settings.footer.fixedFooter\\\">\\r\\n                    {{\\\"UiCustomization_FixedFooter\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme6-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme6-theme-ui-settings'\r\n})\r\nexport class Theme6ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme6';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"boxed\\\">{{\\\"UiCustomization_Boxed\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"ContentSkin\\\">{{\\\"UiCustomization_ContentSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"ContentSkin\\\" name=\\\"ContentSkin\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"settings.layout.contentSkin\\\">\\r\\n                    <option value=\\\"light2\\\">{{\\\"UiCustomization_LightGrey\\\" | localize}}</option>\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_White\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Menu' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"MenuSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"AsideSkin\\\">{{\\\"UiCustomization_MenuSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"AsideSkin\\\" name=\\\"AsideSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.menu.asideSkin\\\">\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_Light\\\" | localize}}</option>\\r\\n                    <option value=\\\"dark\\\">{{\\\"UiCustomization_Dark\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Footer' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"FooterSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"FixedFooter\\\" [(ngModel)]=\\\"settings.footer.fixedFooter\\\">\\r\\n                    {{\\\"UiCustomization_FixedFooter\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme7-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme7-theme-ui-settings'\r\n})\r\nexport class Theme7ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme7';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"LayoutType\\\">{{\\\"UiCustomization_LayoutType\\\" | localize}}</label>\\r\\n                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\r\\n                    <option value=\\\"fluid\\\">{{\\\"UiCustomization_Fluid\\\" | localize}}</option>\\r\\n                    <option value=\\\"wide\\\">{{\\\"UiCustomization_Wide\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme8-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme8-theme-ui-settings'\r\n})\r\nexport class Theme8ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme8';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n    <tab heading=\\\"{{'UiCustomization_Layout' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"LayoutSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"ContentSkin\\\">{{\\\"UiCustomization_ContentSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"ContentSkin\\\" name=\\\"ContentSkin\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"settings.layout.contentSkin\\\">\\r\\n                    <option value=\\\"light2\\\">{{\\\"UiCustomization_LightGrey\\\" | localize}}</option>\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_White\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Header' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"HeaderSettingsForm\\\">\\r\\n            <h5>{{'UiCustomization_Desktop' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_DesktopFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <h5>{{'UiCustomization_Mobile' | localize}}</h5>\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label class=\\\"m-checkbox col-lg-12\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\r\\n                    {{\\\"UiCustomization_MobileFixedHeader\\\" | localize}}\\r\\n                    <span></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n    <tab heading=\\\"{{'UiCustomization_Menu' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n        <form id=\\\"MenuSettingsForm\\\">\\r\\n            <div class=\\\"form-group m-form__group\\\">\\r\\n                <label for=\\\"AsideSkin\\\">{{\\\"UiCustomization_MenuSkin\\\" | localize}}</label>\\r\\n                <select id=\\\"AsideSkin\\\" name=\\\"AsideSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.menu.asideSkin\\\">\\r\\n                    <option value=\\\"light\\\">{{\\\"UiCustomization_Light\\\" | localize}}</option>\\r\\n                    <option value=\\\"dark\\\">{{\\\"UiCustomization_Dark\\\" | localize}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </tab>\\r\\n</tabset>\\r\\n\\r\\n<div class=\\\"m--margin-top-40\\\">\\r\\n    <button *ngIf=\\\"'Pages.Administration.UiCustomization' | permission\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"SaveAsSystemDefault\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> {{\\\"Save\\\" | localize}}</button>\\r\\n    <button *ngIf=\\\"!('Pages.Administration.UiCustomization' | permission)\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal\\\"> {{\\\"UseSystemDefaults\\\" | localize}}</button>\\r\\n</div>\\r\\n\"","import { Component, Injector, Input } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    templateUrl: './theme9-theme-ui-settings.component.html',\r\n    animations: [appModuleAnimation()],\r\n    selector: 'theme9-theme-ui-settings'\r\n})\r\nexport class Theme9ThemeUiSettingsComponent extends AppComponentBase {\r\n\r\n    @Input() settings: ThemeSettingsDto;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getCustomizedSetting(settings: ThemeSettingsDto) {\r\n        settings.theme = 'theme9';\r\n\r\n        return settings;\r\n    }\r\n\r\n    updateDefaultUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    updateUiManagementSettings(): void {\r\n        this._uiCustomizationService.updateUiManagementSettings(this.getCustomizedSetting(this.settings)).subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    useSystemDefaultSettings(): void {\r\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-sm-12 col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"VisualSettings\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"UiCustomizationHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <tabset type=\\\"pills\\\" class=\\\"tab-container tabbable-line\\\">\\r\\n                    <tab *ngFor=\\\"let themeSetting of themeSettings\\\" customClass=\\\"m-tabs__item\\\" [active]=\\\"themeSetting.theme == currentThemeName\\\">\\r\\n                        <ng-template tabHeading>\\r\\n                            <img [src]=\\\"'/assets/common/images/metronic-themes/' + themeSetting.theme +  '.png'\\\" width=\\\"150\\\" />\\r\\n                            <span class=\\\"theme-name\\\">{{getLocalizedThemeName(themeSetting.theme)}}</span>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <default-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'default'\\\" [settings]=\\\"themeSetting\\\"></default-theme-ui-settings>\\r\\n                        <theme2-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme2'\\\" [settings]=\\\"themeSetting\\\"></theme2-theme-ui-settings>\\r\\n                        <theme3-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme3'\\\" [settings]=\\\"themeSetting\\\"></theme3-theme-ui-settings>\\r\\n                        <theme4-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme4'\\\" [settings]=\\\"themeSetting\\\"></theme4-theme-ui-settings>\\r\\n                        <theme5-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme5'\\\" [settings]=\\\"themeSetting\\\"></theme5-theme-ui-settings>\\r\\n                        <theme6-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme6'\\\" [settings]=\\\"themeSetting\\\"></theme6-theme-ui-settings>\\r\\n                        <theme7-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme7'\\\" [settings]=\\\"themeSetting\\\"></theme7-theme-ui-settings>\\r\\n                        <theme8-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme8'\\\" [settings]=\\\"themeSetting\\\"></theme8-theme-ui-settings>\\r\\n                        <theme9-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme9'\\\" [settings]=\\\"themeSetting\\\"></theme9-theme-ui-settings>\\r\\n                        <theme10-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme10'\\\" [settings]=\\\"themeSetting\\\"></theme10-theme-ui-settings>\\r\\n                        <theme11-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme11'\\\" [settings]=\\\"themeSetting\\\"></theme11-theme-ui-settings>\\r\\n                        <theme12-theme-ui-settings *ngIf=\\\"themeSetting.theme == 'theme12'\\\" [settings]=\\\"themeSetting\\\"></theme12-theme-ui-settings>\\r\\n                    </tab>\\r\\n                </tabset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"a span.theme-name {\\n  text-align: center;\\n  display: block;\\n  padding: 10px 0 2px;\\n}\\na.active span.theme-name {\\n  font-weight: 600 !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdWktY3VzdG9taXphdGlvbi9EOi9EcmltYSBBc3BOZXRaZXJvL2FuZ3VsYXIvc3JjL2FwcC9hZG1pbi91aS1jdXN0b21pemF0aW9uL3VpLWN1c3RvbWl6YXRpb24uY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FkbWluL3VpLWN1c3RvbWl6YXRpb24vdWktY3VzdG9taXphdGlvbi5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FDQVI7QURHSTtFQUVRLDJCQUFBO0FDRloiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi91aS1jdXN0b21pemF0aW9uL3VpLWN1c3RvbWl6YXRpb24uY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhIHtcbiAgICBzcGFuLnRoZW1lLW5hbWUge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDAgMnB4O1xuICAgIH1cblxuICAgICYuYWN0aXZlIHtcbiAgICAgICAgc3Bhbi50aGVtZS1uYW1lIHtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDAgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsImEgc3Bhbi50aGVtZS1uYW1lIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMTBweCAwIDJweDtcbn1cbmEuYWN0aXZlIHNwYW4udGhlbWUtbmFtZSB7XG4gIGZvbnQtd2VpZ2h0OiA2MDAgIWltcG9ydGFudDtcbn1cbiJdfQ== */\"","import { Component, ViewEncapsulation, Injector, OnInit } from '@angular/core';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ThemeSettingsDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    templateUrl: './ui-customization.component.html',\r\n    styleUrls: ['./ui-customization.component.less'],\r\n    animations: [appModuleAnimation()],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UiCustomizationComponent extends AppComponentBase implements OnInit {\r\n\r\n    themeSettings: ThemeSettingsDto[];\r\n    currentThemeName = '';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getLocalizedThemeName(str: string): string {\r\n        return this.l('Theme_' + abp.utils.toPascalCase(str));\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.currentThemeName = this.currentTheme.baseSettings.theme;\r\n        this._uiCustomizationService.getUiManagementSettings().subscribe((settingsResult) => {\r\n            this.themeSettings = _.sortBy(settingsResult, setting => {\r\n                return setting.theme === 'default' ? 0 : parseInt(setting.theme.replace('theme', ''));\r\n            });\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #userForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"user.id\\\">{{\\\"EditUser\\\" | localize}}: {{user.userName}}</span>\\r\\n                        <span *ngIf=\\\"!user.id\\\">{{\\\"CreateNewUser\\\" | localize}}</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                        <tab heading=\\\"{{'UserInformations' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-3 text-center margin-bottom-15 margin-top-15\\\">\\r\\n                                    <img src=\\\"{{profilePicture}}\\\" width=\\\"128\\\" height=\\\"128\\\" class=\\\"img-thumbnail img-rounded\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"Name\\\">{{\\\"Name\\\" | localize}} *</label>\\r\\n                                        <input id=\\\"Name\\\" #nameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"user.name\\\" required maxlength=\\\"32\\\">\\r\\n                                        <validation-messages [formCtrl]=\\\"nameInput\\\"></validation-messages>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"Surname\\\">{{\\\"Surname\\\" | localize}} *</label>\\r\\n                                        <input id=\\\"Surname\\\" #surnameInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Surname\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.surname\\\" required maxlength=\\\"32\\\">\\r\\n                                        <validation-messages [formCtrl]=\\\"surnameInput\\\"></validation-messages>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"EmailAddress\\\">{{\\\"EmailAddress\\\" | localize}} *</label>\\r\\n                                <input id=\\\"EmailAddress\\\" #emailAddressInput=\\\"ngModel\\\" type=\\\"email\\\" name=\\\"EmailAddress\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.emailAddress\\\" required maxlength=\\\"256\\\" email />\\r\\n                                <validation-messages [formCtrl]=\\\"emailAddressInput\\\"></validation-messages>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"PhoneNumber\\\">{{\\\"PhoneNumber\\\" | localize}}</label>\\r\\n                                <input id=\\\"PhoneNumber\\\" type=\\\"text\\\" name=\\\"PhoneNumber\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.phoneNumber\\\" maxlength=\\\"24\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"UserName\\\">{{\\\"UserName\\\" | localize}} *</label>\\r\\n                                <input id=\\\"UserName\\\" #userNameInput=\\\"ngModel\\\" type=\\\"text\\\" [disabled]=\\\"!canChangeUserName\\\" name=\\\"UserName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.userName\\\" required maxlength=\\\"32\\\">\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"!canChangeUserName\\\">{{\\\"CanNotChangeAdminUserName\\\" | localize}}</span>\\r\\n                                <validation-messages [formCtrl]=\\\"userNameInput\\\"></validation-messages>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"EditUser_SetRandomPassword\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_SetRandomPassword\\\" type=\\\"checkbox\\\" name=\\\"SetRandomPassword\\\" [(ngModel)]=\\\"setRandomPassword\\\">\\r\\n                                    {{\\\"SetRandomPassword\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                                <div class=\\\"right\\\">\\r\\n                                    <label for=\\\"Password\\\">{{\\\"Password\\\" | localize}}</label>\\r\\n                                    <input id=\\\"Password\\\" type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" id=\\\"Password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.password\\\" [required]=\\\"!user.id && !setRandomPassword\\\" maxlength=\\\"32\\\"\\r\\n                                           [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                                           [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\r\\n                                           validateEqual=\\\"PasswordRepeat\\\" reverse=\\\"true\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [hidden]=\\\"setRandomPassword || userForm.form.valid || userForm.form.pristine\\\">\\r\\n                                <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"userForm.controls['Password'] && userForm.controls['Password'].errors\\\">\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireDigit\\\">{{\\\"PasswordComplexity_RequireDigit_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireLowercase\\\">{{\\\"PasswordComplexity_RequireLowercase_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireUppercase\\\">{{\\\"PasswordComplexity_RequireUppercase_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireNonAlphanumeric\\\">{{\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requiredLength\\\">{{\\\"PasswordComplexity_RequiredLength_Hint\\\" | localize:passwordComplexitySetting.requiredLength}}</li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                                <div class=\\\"right\\\">\\r\\n                                    <label for=\\\"PasswordRepeat\\\">{{\\\"PasswordRepeat\\\" | localize}}</label>\\r\\n                                    <input id=\\\"PasswordRepeat\\\" type=\\\"password\\\" name=\\\"PasswordRepeat\\\" #PasswordRepeat=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.passwordRepeat\\\" [required]=\\\"!user.id && !setRandomPassword\\\" maxlength=\\\"32\\\"\\r\\n                                           [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                                           [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\r\\n                                           validateEqual=\\\"Password\\\" reverse=\\\"false\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [hidden]=\\\"setRandomPassword || userForm.form.valid || userForm.form.pristine\\\">\\r\\n                                <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"userForm.controls['PasswordRepeat'] && userForm.controls['PasswordRepeat'].errors\\\">\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireDigit\\\">{{\\\"PasswordComplexity_RequireDigit_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireLowercase\\\">{{\\\"PasswordComplexity_RequireLowercase_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireUppercase\\\">{{\\\"PasswordComplexity_RequireUppercase_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireNonAlphanumeric\\\">{{\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\" | localize}}</li>\\r\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requiredLength\\\">{{\\\"PasswordComplexity_RequiredLength_Hint\\\" | localize:passwordComplexitySetting.requiredLength}}</li>\\r\\n                                    <li [hidden]=\\\"userForm.controls['PasswordRepeat'].valid\\\">{{\\\"PasswordsDontMatch\\\" | localize}}</li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label for=\\\"EditUser_ShouldChangePasswordOnNextLogin\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_ShouldChangePasswordOnNextLogin\\\" type=\\\"checkbox\\\" name=\\\"ShouldChangePasswordOnNextLogin\\\" [(ngModel)]=\\\"user.shouldChangePasswordOnNextLogin\\\">\\r\\n                                    {{\\\"ShouldChangePasswordOnNextLogin\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n\\r\\n                                <label for=\\\"EditUser_SendActivationEmail\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_SendActivationEmail\\\" type=\\\"checkbox\\\" name=\\\"SendActivationEmail\\\" [(ngModel)]=\\\"sendActivationEmail\\\">\\r\\n                                    {{\\\"SendActivationEmail\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n\\r\\n                                <label for=\\\"EditUser_IsActive\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_IsActive\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"user.isActive\\\">\\r\\n                                    {{\\\"Active\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n\\r\\n                                <label *ngIf=\\\"isTwoFactorEnabled\\\" for=\\\"EditUser_IsTwoFactorEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_IsTwoFactorEnabled\\\" type=\\\"checkbox\\\" name=\\\"IsTwoFactorEnabled\\\" [(ngModel)]=\\\"user.isTwoFactorEnabled\\\">\\r\\n                                    {{\\\"IsTwoFactorEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n\\r\\n                                <label *ngIf=\\\"isLockoutEnabled\\\" for=\\\"EditUser_IsLockoutEnabled\\\" class=\\\"m-checkbox\\\">\\r\\n                                    <input id=\\\"EditUser_IsLockoutEnabled\\\" type=\\\"checkbox\\\" name=\\\"IsLockoutEnabled\\\" [(ngModel)]=\\\"user.isLockoutEnabled\\\">\\r\\n                                    {{\\\"IsLockoutEnabled\\\" | localize}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </tab>\\r\\n                        <tab heading=\\\"{{'Roles' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <ng-template tabHeading>\\r\\n                                <span class=\\\"badge badge-primary\\\">{{getAssignedRoleCount()}}</span>\\r\\n                            </ng-template>\\r\\n                            <div class=\\\"m-checkbox-list\\\">\\r\\n                                <label attr.for=\\\"EditUser_{{role.roleName}}\\\" class=\\\"m-checkbox\\\" *ngFor=\\\"let role of roles\\\">\\r\\n                                    <input id=\\\"EditUser_{{role.roleName}}\\\" type=\\\"checkbox\\\" name=\\\"{{role.roleName}}\\\" [(ngModel)]=\\\"role.isAssigned\\\">\\r\\n                                    {{role.roleDisplayName}}\\r\\n                                    <span></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </tab>\\r\\n                        <tab heading=\\\"{{'OrganizationUnits' | localize}}\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                            <organization-unit-tree #organizationUnitTree></organization-unit-tree>\\r\\n                        </tab>\\r\\n                    </tabset>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!userForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { AfterViewChecked, Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CreateOrUpdateUserInput, OrganizationUnitDto, PasswordComplexitySetting, ProfileServiceProxy, UserEditDto, UserRoleDto, UserServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { IOrganizationUnitsTreeComponentData, OrganizationUnitsTreeComponent } from '../shared/organization-unit-tree.component';\r\nimport * as _ from 'lodash';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'createOrEditUserModal',\r\n    templateUrl: './create-or-edit-user-modal.component.html',\r\n    styles: [`.user-edit-dialog-profile-image {\r\n             margin-bottom: 20px;\r\n        }`\r\n    ]\r\n})\r\nexport class CreateOrEditUserModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('organizationUnitTree') organizationUnitTree: OrganizationUnitsTreeComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active = false;\r\n    saving = false;\r\n    canChangeUserName = true;\r\n    isTwoFactorEnabled: boolean = this.setting.getBoolean('Abp.Zero.UserManagement.TwoFactorLogin.IsEnabled');\r\n    isLockoutEnabled: boolean = this.setting.getBoolean('Abp.Zero.UserManagement.UserLockOut.IsEnabled');\r\n    passwordComplexitySetting: PasswordComplexitySetting = new PasswordComplexitySetting();\r\n\r\n    user: UserEditDto = new UserEditDto();\r\n    roles: UserRoleDto[];\r\n    sendActivationEmail = true;\r\n    setRandomPassword = true;\r\n    passwordComplexityInfo = '';\r\n    profilePicture: string;\r\n\r\n    allOrganizationUnits: OrganizationUnitDto[];\r\n    memberedOrganizationUnits: string[];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _userService: UserServiceProxy,\r\n        private _profileService: ProfileServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(userId?: number): void {\r\n        if (!userId) {\r\n            this.active = true;\r\n            this.setRandomPassword = true;\r\n            this.sendActivationEmail = true;\r\n        }\r\n\r\n        this._userService.getUserForEdit(userId).subscribe(userResult => {\r\n            this.user = userResult.user;\r\n            this.roles = userResult.roles;\r\n            this.canChangeUserName = this.user.userName !== AppConsts.userManagement.defaultAdminUserName;\r\n\r\n            this.allOrganizationUnits = userResult.allOrganizationUnits;\r\n            this.memberedOrganizationUnits = userResult.memberedOrganizationUnits;\r\n\r\n            this.getProfilePicture(userResult.profilePictureId);\r\n\r\n            if (userId) {\r\n                this.active = true;\r\n\r\n                setTimeout(() => {\r\n                    this.setRandomPassword = false;\r\n                }, 0);\r\n\r\n                this.sendActivationEmail = false;\r\n            }\r\n\r\n            this._profileService.getPasswordComplexitySetting().subscribe(passwordComplexityResult => {\r\n                this.passwordComplexitySetting = passwordComplexityResult.setting;\r\n                this.setPasswordComplexityInfo();\r\n                this.modal.show();\r\n            });\r\n        });\r\n    }\r\n\r\n    setPasswordComplexityInfo(): void {\r\n\r\n        this.passwordComplexityInfo = '<ul>';\r\n\r\n        if (this.passwordComplexitySetting.requireDigit) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireDigit_Hint') + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireLowercase) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireLowercase_Hint') + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireUppercase) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireUppercase_Hint') + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireNonAlphanumeric) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireNonAlphanumeric_Hint') + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requiredLength) {\r\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequiredLength_Hint', this.passwordComplexitySetting.requiredLength) + '</li>';\r\n        }\r\n\r\n        this.passwordComplexityInfo += '</ul>';\r\n    }\r\n\r\n    getProfilePicture(profilePictureId: string): void {\r\n        if (!profilePictureId) {\r\n            this.profilePicture = this.appRootUrl() + 'assets/common/images/default-profile-picture.png';\r\n        } else {\r\n            this._profileService.getProfilePictureById(profilePictureId).subscribe(result => {\r\n\r\n                if (result && result.profilePicture) {\r\n                    this.profilePicture = 'data:image/jpeg;base64,' + result.profilePicture;\r\n                } else {\r\n                    this.profilePicture = this.appRootUrl() + 'assets/common/images/default-profile-picture.png';\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onShown(): void {\r\n        this.organizationUnitTree.data = <IOrganizationUnitsTreeComponentData>{\r\n            allOrganizationUnits: this.allOrganizationUnits,\r\n            selectedOrganizationUnits: this.memberedOrganizationUnits\r\n        };\r\n\r\n        document.getElementById('Name').focus();\r\n    }\r\n\r\n    save(): void {\r\n        let input = new CreateOrUpdateUserInput();\r\n\r\n        input.user = this.user;\r\n        input.setRandomPassword = this.setRandomPassword;\r\n        input.sendActivationEmail = this.sendActivationEmail;\r\n        input.assignedRoleNames =\r\n            _.map(\r\n                _.filter(this.roles, { isAssigned: true }), role => role.roleName\r\n            );\r\n\r\n        input.organizationUnits = this.organizationUnitTree.getSelectedOrganizations();\r\n\r\n        this.saving = true;\r\n        this._userService.createOrUpdateUser(input)\r\n            .pipe(finalize(() => { this.saving = false; }))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    getAssignedRoleCount(): number {\r\n        return _.filter(this.roles, { isAssigned: true }).length;\r\n    }\r\n}\r\n","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static', keyboard: !saving}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form #userForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>{{\\\"Permissions\\\" | localize}}<span *ngIf=\\\"userName\\\"> - {{userName}}</span></span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <permission-tree #permissionTree></permission-tree>\\r\\n\\r\\n                    <div class=\\\"note note-warning\\\" style=\\\"margin-bottom: 0; margin-top: 15px\\\">\\r\\n                        <em>{{'Note_RefreshPageForPermissionChanges' | localize}}</em>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" [buttonBusy]=\\\"resettingPermissions\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" (click)=\\\"resetPermissions()\\\" [tooltip]=\\\"l('ResetPermissionsTooltip')\\\" placement=\\\"top\\\"><span>{{\\\"ResetSpecialPermissions\\\" | localize}}</span></button>\\r\\n                    <button [disabled]=\\\"saving || resettingPermissions\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{\\\"Cancel\\\" | localize}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!userForm.form.valid || resettingPermissions\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{\\\"Save\\\" | localize}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { EntityDtoOfInt64, UpdateUserPermissionsInput, UserServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { PermissionTreeComponent } from '../shared/permission-tree.component';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'editUserPermissionsModal',\r\n    templateUrl: './edit-user-permissions-modal.component.html'\r\n})\r\nexport class EditUserPermissionsModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('editModal') modal: ModalDirective;\r\n    @ViewChild('permissionTree') permissionTree: PermissionTreeComponent;\r\n\r\n    saving = false;\r\n    resettingPermissions = false;\r\n\r\n    userId: number;\r\n    userName: string;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _userService: UserServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(userId: number, userName?: string): void {\r\n        this.userId = userId;\r\n        this.userName = userName;\r\n\r\n        this._userService.getUserPermissionsForEdit(userId).subscribe(result => {\r\n            this.permissionTree.editData = result;\r\n            this.modal.show();\r\n        });\r\n    }\r\n\r\n    save(): void {\r\n        let input = new UpdateUserPermissionsInput();\r\n\r\n        input.id = this.userId;\r\n        input.grantedPermissionNames = this.permissionTree.getGrantedPermissionNames();\r\n\r\n        this.saving = true;\r\n        this._userService.updateUserPermissions(input)\r\n            .pipe(finalize(() => { this.saving = false; }))\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n            });\r\n    }\r\n\r\n    resetPermissions(): void {\r\n\r\n        let input = new EntityDtoOfInt64();\r\n\r\n        input.id = this.userId;\r\n\r\n        this.resettingPermissions = true;\r\n        this._userService.resetUserSpecificPermissions(input).subscribe(() => {\r\n            this.notify.info(this.l('ResetSuccessfully'));\r\n            this._userService.getUserPermissionsForEdit(this.userId).subscribe(result => {\r\n                this.permissionTree.editData = result;\r\n            });\r\n        }, undefined, () => {\r\n            this.resettingPermissions = false;\r\n        });\r\n    }\r\n\r\n    close(): void {\r\n        this.modal.hide();\r\n    }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-auto\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>{{\\\"Users\\\" | localize}}</span>\\r\\n                </h3>\\r\\n                <span class=\\\"m-section__sub\\\">\\r\\n                    {{\\\"UsersHeaderInfo\\\" | localize}}\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col text-right mt-3 mt-md-0\\\">\\r\\n                <div class=\\\"btn-group dropdown mr-2\\\" dropdown>\\r\\n                    <button dropdownToggle class=\\\"dropdown-toggle btn btn-outline-success\\\">\\r\\n                        <i class=\\\"far fa-file-excel\\\"></i><span class=\\\"caret\\\"></span> {{\\\"ExcelOperations\\\" | localize}}\\r\\n                    </button>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-menu-right dropdown-excel-operations\\\" *dropdownMenu>\\r\\n                        <li>\\r\\n                            <a href=\\\"javascript:;\\\"\\r\\n                               (click)=\\\"exportToExcel()\\\">\\r\\n                                <i class=\\\"fa fa-download\\\"></i>\\r\\n                                {{'ExportToExcel' | localize}}\\r\\n                            </a>\\r\\n                        </li>\\r\\n\\r\\n                        <li>\\r\\n                            <a href=\\\"javascript:;\\\" *ngIf=\\\"isGranted('Pages.Administration.Users.Create')\\\" class=\\\"no-padding\\\">\\r\\n                                <span>\\r\\n                                    <p-fileUpload customUpload=\\\"true\\\"\\r\\n                                                  name=\\\"ExcelFileUpload\\\"\\r\\n                                                  #ExcelFileUpload\\r\\n                                                  maxFileSize=\\\"10000000\\\"\\r\\n                                                  auto=\\\"auto\\\"\\r\\n                                                  accept=\\\".csv,.xls,.xlsx\\\"\\r\\n                                                  (uploadHandler)=\\\"uploadExcel($event)\\\"\\r\\n                                                  (onError)=\\\"onUploadExcelError()\\\"\\r\\n                                                  chooseLabel=\\\"{{'ImportFromExcel' | localize}}\\\">\\r\\n                                    </p-fileUpload>\\r\\n                                </span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"dropdown-divider\\\"></li>\\r\\n                        <li>\\r\\n                            <span class=\\\"dropdown-item-text text-muted\\\" href=\\\"#\\\">\\r\\n                                <small [innerHTML]=\\\"l('ImportToExcelSampleFileDownloadInfo', '<a href=/assets/sampleFiles/ImportUsersSampleFile.xlsx>' + l('ClickHere') + '</a>')\\\"></small>\\r\\n                            </span>\\r\\n                        </li>\\r\\n\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <button (click)=\\\"createUser()\\\" *ngIf=\\\"isGranted('Pages.Administration.Users.Create')\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus\\\"></i> {{\\\"CreateNewUser\\\" | localize}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-xl-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getUsers()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row m--margin-bottom-10\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n                            <div [ngClass]=\\\"{'col-md-6': ('Pages.Administration.Roles' | permission), 'col-md-12':!isGranted('Pages.Administration.Roles')}\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <permission-combo name=\\\"permissionFilter\\\" [(ngModel)]=\\\"selectedPermission\\\"></permission-combo>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6\\\" *ngIf=\\\"'Pages.Administration.Roles' | permission\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <role-combo name=\\\"roleFilter\\\" [(ngModel)]=\\\"role\\\"></role-combo>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"m-checkbox-list\\\">\\r\\n                                    <label for=\\\"UsersTable_OnlyLockedUsers\\\" class=\\\"m-checkbox\\\">\\r\\n                                        <input id=\\\"UsersTable_OnlyLockedUsers\\\" type=\\\"checkbox\\\" name=\\\"OnlyLockedUsers\\\" [(ngModel)]=\\\"onlyLockedUsers\\\">\\r\\n                                        {{\\\"OnlyLockedUsers\\\" | localize}}\\r\\n                                        <span></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row margin-bottom-10\\\" *ngIf=\\\"advancedFiltersAreShown\\\">\\r\\n                            <div class=\\\"col-sm-12 text-right\\\">\\r\\n                                <button class=\\\"btn btn-metal\\\" (click)=\\\"getUsers()\\\"><i class=\\\"fa fa-sync\\\"></i> {{\\\"Refresh\\\" | localize}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{\\\"ShowAdvancedFilters\\\" | localize}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{\\\"HideAdvancedFilters\\\" | localize}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <!--<Primeng-TurboTable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\"\\r\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\r\\n                        <p-table #dataTable\\r\\n                                 (onLazyLoad)=\\\"getUsers($event)\\\"\\r\\n                                 [value]=\\\"primengTableHelper.records\\\"\\r\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 [paginator]=\\\"false\\\"\\r\\n                                 [lazy]=\\\"true\\\"\\r\\n                                 [scrollable]=\\\"true\\\"\\r\\n                                 ScrollWidth=\\\"100%\\\"\\r\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                 [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Users.Impersonation', 'Pages.Administration.Users.Edit', 'Pages.Administration.Users.ChangePermissions', 'Pages.Administration.Users.Delete')\\\">{{'Actions' | localize}}</th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"username\\\">\\r\\n                                        {{'UserName' | localize}}\\r\\n                                        <p-sortIcon field=\\\"username\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                        {{'Name' | localize}}\\r\\n                                        <p-sortIcon field=\\\"name\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"surname\\\">\\r\\n                                        {{'Surname' | localize}}\\r\\n                                        <p-sortIcon field=\\\"surname\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 150px\\\">\\r\\n                                        {{'Roles' | localize}}\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 250px\\\" pSortableColumn=\\\"emailAddress\\\">\\r\\n                                        {{'EmailAddress' | localize}}\\r\\n                                        <p-sortIcon field=\\\"emailAddress\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 200px\\\" pSortableColumn=\\\"isEmailConfirmed\\\">\\r\\n                                        {{'EmailConfirm' | localize}}\\r\\n                                        <p-sortIcon field=\\\"isEmailConfirmed\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 100px\\\" pSortableColumn=\\\"isActive\\\">\\r\\n                                        {{'Active' | localize}}\\r\\n                                        <p-sortIcon field=\\\"isActive\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 200px\\\" pSortableColumn=\\\"creationTime\\\">\\r\\n                                        {{'CreationTime' | localize}}\\r\\n                                        <p-sortIcon field=\\\"creationTime\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 130px\\\"\\r\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Users.Impersonation', 'Pages.Administration.Users.Edit', 'Pages.Administration.Users.ChangePermissions', 'Pages.Administration.Users.Delete')\\\">\\r\\n                                        <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button dropdownToggle class=\\\"dropdown-toggle btn btn-sm btn-primary\\\">\\r\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{\\\"Actions\\\" | localize}}\\r\\n                                            </button>\\r\\n                                            <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"('Pages.Administration.Users.Impersonation' | permission) && record.id !== appSession.userId\\\"\\r\\n                                                       (click)=\\\"_impersonationService.impersonate(record.id, appSession.tenantId)\\\">{{'LoginAsThisUser' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Administration.Users.Edit' | permission\\\"\\r\\n                                                       (click)=\\\"createOrEditUserModal.show(record.id)\\\">{{'Edit' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Administration.Users.ChangePermissions' | permission\\\"\\r\\n                                                       (click)=\\\"editUserPermissionsModal.show(record.id, record.userName)\\\">{{'Permissions' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Administration.Users.ChangePermissions' | permission\\\"\\r\\n                                                       (click)=\\\"unlockUser(record)\\\">{{'Unlock' | localize}}</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" *ngIf=\\\"'Pages.Administration.Users.Delete' | permission\\\"\\r\\n                                                       (click)=\\\"deleteUser(record)\\\">{{'Delete' | localize}}</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width: 150px\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\"> {{'UserName' | localize}}</span>\\r\\n                                        {{record.userName}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width: 150px\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\"> {{'Name' | localize}}</span>\\r\\n                                        {{record.name}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width: 150px\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\"> {{'Surname' | localize}}</span>\\r\\n                                        {{record.surname}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width: 150px\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\"> {{'Roles' | localize}}</span>\\r\\n                                        {{getRolesAsString(record.roles)}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width: 250px\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\"> {{'EmailAddress' | localize}}</span>\\r\\n                                        {{record.emailAddress}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width: 200px\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\"> {{'EmailConfirm' | localize}}</span>\\r\\n                                        <span class=\\\"label label-success\\\" *ngIf=\\\"record.isEmailConfirmed\\\">{{'Yes' | localize}}</span>\\r\\n                                        <span class=\\\"label label-default\\\" *ngIf=\\\"!record.isEmailConfirmed\\\">{{'No' | localize}}</span>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width: 100px\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\"> {{'Active' | localize}}</span>\\r\\n                                        <span class=\\\"label label-success\\\" *ngIf=\\\"record.isActive\\\">{{'Yes' | localize}}</span>\\r\\n                                        <span class=\\\"label label-default\\\" *ngIf=\\\"!record.isActive\\\">{{'No' | localize}}</span>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width: 200px\\\">\\r\\n                                        <span class=\\\"ui-column-title\\\"> {{'CreationTime' | localize}}</span>\\r\\n                                        {{record.creationTime | momentFormat:'L'}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </p-table>\\r\\n                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                            {{'NoData' | localize}}\\r\\n                        </div>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator [rows]=\\\"primengTableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getUsers($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{'TotalRecordsCount' | localize:primengTableHelper.totalRecordsCount}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-TurboTable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditUserModal #createOrEditUserModal (modalSave)=\\\"getUsers()\\\"></createOrEditUserModal>\\r\\n    <editUserPermissionsModal #editUserPermissionsModal></editUserPermissionsModal>\\r\\n</div>\\r\\n\"","module.exports = \"/*Stlye for Chat Buttons */\\n.dropdown-excel-operations .ui-button {\\n  display: block;\\n  margin: 0;\\n  text-align: left;\\n  border-radius: 0;\\n  transition: none !important;\\n  margin-left: -11px;\\n}\\n.dropdown-excel-operations .ui-fileupload-choose.ui-button,\\n.dropdown-excel-operations .ui-fileupload-choose.ui-button .ui-widget,\\n.dropdown-excel-operations .ui-fileupload-choose.ui-button .ui-state-default {\\n  background-color: #fff;\\n  color: #b2b1c5;\\n}\\n.dropdown-excel-operations .ui-button-text {\\n  color: #575962;\\n  font-size: 13px;\\n  margin-left: 9px;\\n}\\n.dropdown-excel-operations .ui-fileupload-choose.ui-button.ui-state-hover,\\n.ui-fileupload-choose.ui-button.ui-state-focus,\\n.ui-fileupload-choose.ui-button.ui-state-active {\\n  background-color: #eee;\\n}\\n.dropdown-excel-operations a:hover span.ui-button,\\n.dropdown-excel-operations a:hover div.ui-fileupload-buttonbar.ui-widget-header.ui-corner-top {\\n  background-color: #f4f5f8 !important;\\n}\\n.dropdown-excel-operations a.no-padding {\\n  padding: 0px !important;\\n}\\n.dropdown-excel-operations .ui-fileupload-choose:not(.ui-state-disabled) {\\n  border: none;\\n}\\n.dropdown-excel-operations .ui-fileupload-choose:not(.ui-state-disabled):hover,\\n.dropdown-excel-operations .ui-fileupload-choose:not(.ui-state-disabled):focus,\\n.dropdown-excel-operations .ui-fileupload-choose:not(.ui-state-disabled):active {\\n  background-color: #f4f5f8 !important;\\n  color: #b2b1c5;\\n  box-shadow: none !important;\\n  border: none;\\n}\\n.dropdown-excel-operations div.ui-fileupload-buttonbar.ui-widget-header.ui-corner-top {\\n  border: none;\\n  background: #fff;\\n  padding-bottom: 3px !important;\\n  padding-top: 3px !important;\\n}\\n.dropdown-excel-operations div.ui-fileupload-buttonbar.ui-widget-header.ui-corner-top:hover {\\n  background-color: #f4f5f8 !important;\\n}\\n.dropdown-excel-operations div.ui-fileupload-content.ui-widget-content.ui-corner-bottom {\\n  display: none;\\n}\\n.dropdown-excel-operations div.ui-fileupload-buttonbar.ui-widget-header.ui-corner-top:hover {\\n  background-color: #f4f5f8 !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlcnMvdXNlcnMuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FkbWluL3VzZXJzL0Q6L0RyaW1hIEFzcE5ldFplcm8vYW5ndWxhci9zcmMvYXBwL2FkbWluL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQjtBQ0MxQjtFQUNJLGNBQUE7RUFDQSxTQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLDJCQUFBO0VBQ0Esa0JBQUE7QURDSjtBQ0VBOzs7RUFHUSxzQkFBQTtFQUNBLGNBQUE7QURBUjtBQ0pBO0VBUVEsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBRERSO0FDS0E7OztFQUNJLHNCQUFBO0FEREo7QUNJQTs7RUFHWSxvQ0FBQTtBREhaO0FDQUE7RUFRUSx1QkFBQTtBRExSO0FDU0E7RUFDSSxZQUFBO0FEUEo7QUNVQTs7O0VBR0ksb0NBQUE7RUFDQSxjQUFBO0VBQ0EsMkJBQUE7RUFDQSxZQUFBO0FEUko7QUNXQTtFQUVRLFlBQUE7RUFDQSxnQkFBQTtFQUNBLDhCQUFBO0VBQ0EsMkJBQUE7QURWUjtBQ1lRO0VBQ0ksb0NBQUE7QURWWjtBQ0VBO0VBYVEsYUFBQTtBRFpSO0FDREE7RUFpQlEsb0NBQUE7QURiUiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLypTdGx5ZSBmb3IgQ2hhdCBCdXR0b25zICovXG4uZHJvcGRvd24tZXhjZWwtb3BlcmF0aW9ucyAudWktYnV0dG9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgdHJhbnNpdGlvbjogbm9uZSAhaW1wb3J0YW50O1xuICBtYXJnaW4tbGVmdDogLTExcHg7XG59XG4uZHJvcGRvd24tZXhjZWwtb3BlcmF0aW9ucyAudWktZmlsZXVwbG9hZC1jaG9vc2UudWktYnV0dG9uLFxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgLnVpLWZpbGV1cGxvYWQtY2hvb3NlLnVpLWJ1dHRvbiAudWktd2lkZ2V0LFxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgLnVpLWZpbGV1cGxvYWQtY2hvb3NlLnVpLWJ1dHRvbiAudWktc3RhdGUtZGVmYXVsdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGNvbG9yOiAjYjJiMWM1O1xufVxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgLnVpLWJ1dHRvbi10ZXh0IHtcbiAgY29sb3I6ICM1NzU5NjI7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbWFyZ2luLWxlZnQ6IDlweDtcbn1cbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIC51aS1maWxldXBsb2FkLWNob29zZS51aS1idXR0b24udWktc3RhdGUtaG92ZXIsXG4udWktZmlsZXVwbG9hZC1jaG9vc2UudWktYnV0dG9uLnVpLXN0YXRlLWZvY3VzLFxuLnVpLWZpbGV1cGxvYWQtY2hvb3NlLnVpLWJ1dHRvbi51aS1zdGF0ZS1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xufVxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgYTpob3ZlciBzcGFuLnVpLWJ1dHRvbixcbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIGE6aG92ZXIgZGl2LnVpLWZpbGV1cGxvYWQtYnV0dG9uYmFyLnVpLXdpZGdldC1oZWFkZXIudWktY29ybmVyLXRvcCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY1ZjggIWltcG9ydGFudDtcbn1cbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIGEubm8tcGFkZGluZyB7XG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xufVxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgLnVpLWZpbGV1cGxvYWQtY2hvb3NlOm5vdCgudWktc3RhdGUtZGlzYWJsZWQpIHtcbiAgYm9yZGVyOiBub25lO1xufVxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgLnVpLWZpbGV1cGxvYWQtY2hvb3NlOm5vdCgudWktc3RhdGUtZGlzYWJsZWQpOmhvdmVyLFxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgLnVpLWZpbGV1cGxvYWQtY2hvb3NlOm5vdCgudWktc3RhdGUtZGlzYWJsZWQpOmZvY3VzLFxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgLnVpLWZpbGV1cGxvYWQtY2hvb3NlOm5vdCgudWktc3RhdGUtZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY1ZjggIWltcG9ydGFudDtcbiAgY29sb3I6ICNiMmIxYzU7XG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgYm9yZGVyOiBub25lO1xufVxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgZGl2LnVpLWZpbGV1cGxvYWQtYnV0dG9uYmFyLnVpLXdpZGdldC1oZWFkZXIudWktY29ybmVyLXRvcCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgcGFkZGluZy1ib3R0b206IDNweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXRvcDogM3B4ICFpbXBvcnRhbnQ7XG59XG4uZHJvcGRvd24tZXhjZWwtb3BlcmF0aW9ucyBkaXYudWktZmlsZXVwbG9hZC1idXR0b25iYXIudWktd2lkZ2V0LWhlYWRlci51aS1jb3JuZXItdG9wOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjVmOCAhaW1wb3J0YW50O1xufVxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgZGl2LnVpLWZpbGV1cGxvYWQtY29udGVudC51aS13aWRnZXQtY29udGVudC51aS1jb3JuZXItYm90dG9tIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIGRpdi51aS1maWxldXBsb2FkLWJ1dHRvbmJhci51aS13aWRnZXQtaGVhZGVyLnVpLWNvcm5lci10b3A6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNWY4ICFpbXBvcnRhbnQ7XG59XG4iLCIvKlN0bHllIGZvciBDaGF0IEJ1dHRvbnMgKi9cbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIC51aS1idXR0b24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgdHJhbnNpdGlvbjogbm9uZSAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTFweDtcbn1cblxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMge1xuXG4gICAgLnVpLWZpbGV1cGxvYWQtY2hvb3NlLnVpLWJ1dHRvbiwgLnVpLWZpbGV1cGxvYWQtY2hvb3NlLnVpLWJ1dHRvbiAudWktd2lkZ2V0LCAudWktZmlsZXVwbG9hZC1jaG9vc2UudWktYnV0dG9uIC51aS1zdGF0ZS1kZWZhdWx0IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgY29sb3I6ICNiMmIxYzU7XG4gICAgfVxuXG4gICAgLnVpLWJ1dHRvbi10ZXh0IHtcbiAgICAgICAgY29sb3I6ICM1NzU5NjI7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDlweDtcbiAgICB9XG59XG5cbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIC51aS1maWxldXBsb2FkLWNob29zZS51aS1idXR0b24udWktc3RhdGUtaG92ZXIsIC51aS1maWxldXBsb2FkLWNob29zZS51aS1idXR0b24udWktc3RhdGUtZm9jdXMsIC51aS1maWxldXBsb2FkLWNob29zZS51aS1idXR0b24udWktc3RhdGUtYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xufVxuXG4uZHJvcGRvd24tZXhjZWwtb3BlcmF0aW9ucyB7XG4gICAgYTpob3ZlciB7XG4gICAgICAgIHNwYW4udWktYnV0dG9uLCBkaXYudWktZmlsZXVwbG9hZC1idXR0b25iYXIudWktd2lkZ2V0LWhlYWRlci51aS1jb3JuZXItdG9wIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY1ZjggIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGEubm8tcGFkZGluZyB7XG4gICAgICAgIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xuICAgIH1cbn1cblxuLmRyb3Bkb3duLWV4Y2VsLW9wZXJhdGlvbnMgLnVpLWZpbGV1cGxvYWQtY2hvb3NlOm5vdCgudWktc3RhdGUtZGlzYWJsZWQpIHtcbiAgICBib3JkZXI6IG5vbmU7XG59XG5cbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIC51aS1maWxldXBsb2FkLWNob29zZTpub3QoLnVpLXN0YXRlLWRpc2FibGVkKTpob3Zlcixcbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIC51aS1maWxldXBsb2FkLWNob29zZTpub3QoLnVpLXN0YXRlLWRpc2FibGVkKTpmb2N1cyxcbi5kcm9wZG93bi1leGNlbC1vcGVyYXRpb25zIC51aS1maWxldXBsb2FkLWNob29zZTpub3QoLnVpLXN0YXRlLWRpc2FibGVkKTphY3RpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY1ZjggIWltcG9ydGFudDtcbiAgICBjb2xvcjogI2IyYjFjNTtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyOiBub25lO1xufVxuXG4uZHJvcGRvd24tZXhjZWwtb3BlcmF0aW9ucyB7XG4gICAgZGl2LnVpLWZpbGV1cGxvYWQtYnV0dG9uYmFyLnVpLXdpZGdldC1oZWFkZXIudWktY29ybmVyLXRvcCB7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDNweCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nLXRvcDogM3B4ICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNWY4ICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXYudWktZmlsZXVwbG9hZC1jb250ZW50LnVpLXdpZGdldC1jb250ZW50LnVpLWNvcm5lci1ib3R0b20ge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIGRpdi51aS1maWxldXBsb2FkLWJ1dHRvbmJhci51aS13aWRnZXQtaGVhZGVyLnVpLWNvcm5lci10b3A6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNWY4ICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuIl19 */\"","import { Component, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { EntityDtoOfInt64, UserListDto, UserServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { CreateOrEditUserModalComponent } from './create-or-edit-user-modal.component';\r\nimport { EditUserPermissionsModalComponent } from './edit-user-permissions-modal.component';\r\nimport { ImpersonationService } from './impersonation.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FileUpload } from 'primeng/fileupload';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './users.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./users.component.less'],\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class UsersComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditUserModal') createOrEditUserModal: CreateOrEditUserModalComponent;\r\n    @ViewChild('editUserPermissionsModal') editUserPermissionsModal: EditUserPermissionsModalComponent;\r\n    @ViewChild('dataTable') dataTable: Table;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n    @ViewChild('ExcelFileUpload') excelFileUpload: FileUpload;\r\n\r\n    uploadUrl: string;\r\n\r\n    //Filters\r\n    advancedFiltersAreShown = false;\r\n    filterText = '';\r\n    selectedPermission = '';\r\n    role = '';\r\n    onlyLockedUsers = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        public _impersonationService: ImpersonationService,\r\n        private _userServiceProxy: UserServiceProxy,\r\n        private _fileDownloadService: FileDownloadService,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _httpClient: HttpClient\r\n    ) {\r\n        super(injector);\r\n        this.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\r\n        this.uploadUrl = AppConsts.remoteServiceBaseUrl + '/Users/ImportFromExcel';\r\n    }\r\n\r\n    getUsers(event?: LazyLoadEvent) {\r\n        if (this.primengTableHelper.shouldResetPaging(event)) {\r\n            this.paginator.changePage(0);\r\n\r\n            return;\r\n        }\r\n\r\n        this.primengTableHelper.showLoadingIndicator();\r\n\r\n        this._userServiceProxy.getUsers(\r\n            this.filterText,\r\n            this.permission ? this.selectedPermission : undefined,\r\n            this.role !== '' ? parseInt(this.role) : undefined,\r\n            this.onlyLockedUsers,\r\n            this.primengTableHelper.getSorting(this.dataTable),\r\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengTableHelper.getSkipCount(this.paginator, event)\r\n        ).pipe(finalize(() => this.primengTableHelper.hideLoadingIndicator())).subscribe(result => {\r\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengTableHelper.records = result.items;\r\n            this.primengTableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    unlockUser(record): void {\r\n        this._userServiceProxy.unlockUser(new EntityDtoOfInt64({ id: record.id })).subscribe(() => {\r\n            this.notify.success(this.l('UnlockedTheUser', record.userName));\r\n        });\r\n    }\r\n\r\n    getRolesAsString(roles): string {\r\n        let roleNames = '';\r\n\r\n        for (let j = 0; j < roles.length; j++) {\r\n            if (roleNames.length) {\r\n                roleNames = roleNames + ', ';\r\n            }\r\n\r\n            roleNames = roleNames + roles[j].roleName;\r\n        }\r\n\r\n        return roleNames;\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        this._userServiceProxy.getUsersToExcel(\r\n            this.filterText,\r\n            this.permission ? this.selectedPermission : undefined,\r\n            this.role !== '' ? parseInt(this.role) : undefined,\r\n            this.onlyLockedUsers,\r\n            this.primengTableHelper.getSorting(this.dataTable))\r\n            .subscribe(result => {\r\n                this._fileDownloadService.downloadTempFile(result);\r\n            });\r\n    }\r\n\r\n    createUser(): void {\r\n        this.createOrEditUserModal.show();\r\n    }\r\n\r\n    uploadExcel(data: { files: File }): void {\r\n        const formData: FormData = new FormData();\r\n        const file = data.files[0];\r\n        formData.append('file', file, file.name);\r\n\r\n        this._httpClient\r\n            .post<any>(this.uploadUrl, formData)\r\n            .pipe(finalize(() => this.excelFileUpload.clear()))\r\n            .subscribe(response => {\r\n                if (response.success) {\r\n                    this.notify.success(this.l('ImportUsersProcessStart'));\r\n                } else if (response.error != null) {\r\n                    this.notify.error(this.l('ImportUsersUploadFailed'));\r\n                }\r\n            });\r\n    }\r\n\r\n    onUploadExcelError(): void {\r\n        this.notify.error(this.l('ImportUsersUploadFailed'));\r\n    }\r\n\r\n    deleteUser(user: UserListDto): void {\r\n        if (user.userName === AppConsts.userManagement.defaultAdminUserName) {\r\n            this.message.warn(this.l('{0}UserCannotBeDeleted', AppConsts.userManagement.defaultAdminUserName));\r\n            return;\r\n        }\r\n\r\n        this.message.confirm(\r\n            this.l('UserDeleteWarningMessage', user.userName),\r\n            this.l('AreYouSure'),\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._userServiceProxy.deleteUser(user.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n","export class AppEditionExpireAction {\r\n    static DeactiveTenant = 'DeactiveTenant';\r\n    static AssignToAnotherEdition = 'AssignToAnotherEdition';\r\n}\r\n"],"sourceRoot":""}